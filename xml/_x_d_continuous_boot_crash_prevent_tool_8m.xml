<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_x_d_continuous_boot_crash_prevent_tool_8m" kind="file" language="Objective-C">
    <compoundname>XDContinuousBootCrashPreventTool.m</compoundname>
    <includes refid="_x_d_continuous_boot_crash_prevent_tool_8h" local="yes">XDContinuousBootCrashPreventTool.h</includes>
    <includes local="no">QuartzCore/QuartzCore.h</includes>
    <incdepgraph>
      <node id="3340">
        <label>XDContinuousBootCrashPreventTool.h</label>
        <link refid="_x_d_continuous_boot_crash_prevent_tool_8h"/>
        <childnode refid="3341" relation="include">
        </childnode>
      </node>
      <node id="3339">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m</label>
        <link refid="XDContinuousBootCrashPreventTool.m"/>
        <childnode refid="3340" relation="include">
        </childnode>
        <childnode refid="3342" relation="include">
        </childnode>
      </node>
      <node id="3341">
        <label>Foundation/Foundation.h</label>
      </node>
      <node id="3342">
        <label>QuartzCore/QuartzCore.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" prot="public" static="no" mutable="no">
        <type>void(^</type>
        <definition>void(^ Logger) (NSString *log)</definition>
        <argsstring>)(NSString *log)</argsstring>
        <name>Logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="12" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" prot="public" static="no" mutable="no">
        <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref></type>
        <definition>ReportBlock reportBlock</definition>
        <argsstring></argsstring>
        <name>reportBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" prot="public" static="no" mutable="no">
        <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref></type>
        <definition>RepairBlock repairBlock</definition>
        <argsstring></argsstring>
        <name>repairBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="14" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" prot="public" static="no" mutable="no">
        <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref></type>
        <definition>BoolCompletionBlock boolCompletionBlock</definition>
        <argsstring></argsstring>
        <name>boolCompletionBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1af85c2051ec65918d6915ac74dc799734" prot="public" static="yes" mutable="no">
        <type>NSString *const</type>
        <definition>NSString* const kStartupCrashForTest</definition>
        <argsstring></argsstring>
        <name>kStartupCrashForTest</name>
        <initializer>= @&quot;StartupCrashForTest&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="17" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1a08bbd64914c4b4299727b9f657e8fe33" prot="public" static="yes" mutable="no">
        <type>NSString *const</type>
        <definition>NSString* const kContinuousCrashOnLaunchCounterKey</definition>
        <argsstring></argsstring>
        <name>kContinuousCrashOnLaunchCounterKey</name>
        <initializer>= @&quot;ContinuousCrashOnLaunchCounter&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="18" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1ab8f7e1295cbf0d6326bdadcc89fe5129" prot="public" static="yes" mutable="no">
        <type>NSString *const</type>
        <definition>NSString* const kContinuousCrashFixingKey</definition>
        <argsstring></argsstring>
        <name>kContinuousCrashFixingKey</name>
        <initializer>= @&quot;ContinuousCrashFixing&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="19" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1a80e18dae4e7050adadf74a1b9426d553" prot="public" static="yes" mutable="no">
        <type>NSInteger const</type>
        <definition>NSInteger const kContinuousCrashOnLaunchNeedToReport</definition>
        <argsstring></argsstring>
        <name>kContinuousCrashOnLaunchNeedToReport</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="20" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1a3e3e7d1fad0f3815b133721e2410240a" prot="public" static="yes" mutable="no">
        <type>NSInteger const</type>
        <definition>NSInteger const kContinuousCrashOnLaunchNeedToFix</definition>
        <argsstring></argsstring>
        <name>kContinuousCrashOnLaunchNeedToFix</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="21" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1a4f530fc296b225263dcb0d4a9b1bd9a4" prot="public" static="yes" mutable="no">
        <type>CFTimeInterval const</type>
        <definition>CFTimeInterval const kCrashOnLaunchTimeIntervalThreshold</definition>
        <argsstring></argsstring>
        <name>kCrashOnLaunchTimeIntervalThreshold</name>
        <initializer>= 5.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="22" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_x_d_continuous_boot_crash_prevent_tool_8m_1aa6e3cac7069a900cd652bcabb5c50d6d" prot="public" static="yes" mutable="no">
        <type>CFTimeInterval</type>
        <definition>CFTimeInterval g_startTick</definition>
        <argsstring></argsstring>
        <name>g_startTick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" line="23" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDContinuousBootCrashPreventTool.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDContinuousBootCrashPreventTool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>suxinde<sp/>on<sp/>16/5/25.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>©<sp/>2016年<sp/>suxinde.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h" kindref="compound">XDContinuousBootCrashPreventTool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;QuartzCore/QuartzCore.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">void<sp/>(^<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)(NSString<sp/>*log);</highlight></codeline>
<codeline lineno="13" refid="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" refkind="member"><highlight class="normal"><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" kindref="member">reportBlock</ref>;</highlight></codeline>
<codeline lineno="14" refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" refkind="member"><highlight class="normal"><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" kindref="member">repairBlock</ref>;</highlight></codeline>
<codeline lineno="15" refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" refkind="member"><highlight class="normal"><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSString<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kStartupCrashForTest<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;StartupCrashForTest&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>尝试制造启动<sp/>crash<sp/>彩蛋</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSString<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kContinuousCrashOnLaunchCounterKey<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;ContinuousCrashOnLaunchCounter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSString<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kContinuousCrashFixingKey<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;ContinuousCrashFixing&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>是否正在修复</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSInteger<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kContinuousCrashOnLaunchNeedToReport<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSInteger<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kContinuousCrashOnLaunchNeedToFix<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CFTimeInterval<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kCrashOnLaunchTimeIntervalThreshold<sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CFTimeInterval<sp/>g_startTick;<sp/></highlight><highlight class="comment">//<sp/>记录启动时刻</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="interface_x_d_continuous_boot_crash_prevent_tool" kindref="compound">XDContinuousBootCrashPreventTool</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="interface_x_d_continuous_boot_crash_prevent_tool_1ac57f161d327f4d2ab3c7c16956d4a853" refkind="member"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1ac57f161d327f4d2ab3c7c16956d4a853" kindref="member">launchContinuousCrashProtect</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>NSAssert(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" kindref="member">repairBlock</ref>,<sp/></highlight><highlight class="stringliteral">@&quot;repairBlock<sp/>is<sp/>nil!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;XDContinuousBootCrashPreventTool:<sp/>Launch<sp/>continuous<sp/>crash<sp/>report&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setIsFixing:NO];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>launchCrashes<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>上报</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(launchCrashes<sp/>&gt;=<sp/>kContinuousCrashOnLaunchNeedToReport)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;XDContinuousBootCrashPreventTool:<sp/>App<sp/>has<sp/>continuously<sp/>crashed<sp/>for<sp/>%@<sp/>times.<sp/>Now<sp/>synchronize<sp/>uploading<sp/>crash<sp/>report<sp/>and<sp/>begin<sp/>fixing<sp/>procedure.&quot;</highlight><highlight class="normal">,<sp/>@(launchCrashes)]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" kindref="member">reportBlock</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" kindref="member">reportBlock</ref>(launchCrashes);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" kindref="member">setCrashCount</ref>:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>]+1];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>记录启动时刻，用于计算启动连续<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>g_startTick<sp/>=<sp/>CACurrentMediaTime();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>重置启动<sp/>crash<sp/>计数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_after(dispatch_time(DISPATCH_TIME_NOW,<sp/>(int64_t)(kCrashOnLaunchTimeIntervalThreshold<sp/>*<sp/>NSEC_PER_SEC)),<sp/>dispatch_get_main_queue(),<sp/>^(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APP活过了阈值时间，重置崩溃计数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;XDContinuousBootCrashPreventTool:<sp/>long<sp/>live<sp/>the<sp/>app<sp/>(<sp/>more<sp/>than<sp/>%@<sp/>seconds<sp/>),<sp/>now<sp/>reset<sp/>crash<sp/>counts&quot;</highlight><highlight class="normal">,<sp/>@(kCrashOnLaunchTimeIntervalThreshold)]);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" kindref="member">setCrashCount</ref>:0];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>修复</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(launchCrashes<sp/>&gt;=<sp/>kContinuousCrashOnLaunchNeedToFix)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;need<sp/>to<sp/>repair&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setIsFixing:YES];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" kindref="member">repairBlock</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" kindref="member">repairBlock</ref>(^BOOL(){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" kindref="member">setCrashCount</ref>:0];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setIsFixing:NO];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;repairBlock<sp/>will<sp/>execute<sp/>completion<sp/>block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;repairBlock<sp/>will<sp/>not<sp/>execute<sp/>completion<sp/>block<sp/>(nil)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>正常流程，无需修复</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;need<sp/>no<sp/>repair&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>(</highlight><highlight class="stringliteral">@&quot;will<sp/>execute<sp/>completion<sp/>block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">+<sp/>(void)setIsFixing:(BOOL)isFixingCrash</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;setisFixingCrash:{%@}&quot;</highlight><highlight class="normal">,@(<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref>)]);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUserDefaults<sp/>*defaults<sp/>=<sp/>[NSUserDefaults<sp/>standardUserDefaults];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>setBool:isFixingCrash<sp/>forKey:kContinuousCrashFixingKey];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>synchronize];</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" refkind="member"><highlight class="normal">+<sp/>(void)setCrashCount:(NSInteger)count</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;setCrashCount:%@&quot;</highlight><highlight class="normal">,<sp/>@(count)]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUserDefaults<sp/>*defaults<sp/>=<sp/>[NSUserDefaults<sp/>standardUserDefaults];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>setInteger:count<sp/>forKey:kContinuousCrashOnLaunchCounterKey];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>synchronize];</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" refkind="member"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref><sp/>=<sp/>[[NSUserDefaults<sp/>standardUserDefaults]<sp/>boolForKey:kContinuousCrashFixingKey];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;isFixingCrash:%@&quot;</highlight><highlight class="normal">,<sp/>@(<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref>)]);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" refkind="member"><highlight class="normal">+<sp/>(NSInteger)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref><sp/>=<sp/>[[NSUserDefaults<sp/>standardUserDefaults]<sp/>integerForKey:kContinuousCrashOnLaunchCounterKey];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;crashCount:%@&quot;</highlight><highlight class="normal">,<sp/>@(<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>)]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad0f524a3d842d571b5a1fad6d12bc0b4" refkind="member"><highlight class="normal">+<sp/>(void)setLogger:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(NSString<sp/>*))logger</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref><sp/>=<sp/>[logger<sp/>copy];</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="interface_x_d_continuous_boot_crash_prevent_tool_1a19ea68b8cb6d6dc0427dc24f1eec302b" refkind="member"><highlight class="normal">+<sp/>(void)setReportBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref>)block</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1abd883a888a63273bb2a910f1c085e463" kindref="member">reportBlock</ref><sp/>=<sp/>block;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad53c6212b7afd1a2281ce0d08b46afc5" refkind="member"><highlight class="normal">+<sp/>(void)setRepairBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref>)block</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1ad68ce73bf96239897e7e8935ec696ec1" kindref="member">repairBlock</ref><sp/>=<sp/>block;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1e2f7a6938cbea1e66cdb0c67005b875" refkind="member"><highlight class="normal">+<sp/>(void)setBoolCompletionBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref>)block</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1afb5f8f8e479a210fb54878968c00437d" kindref="member">boolCompletionBlock</ref><sp/>=<sp/>block;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="interface_x_d_continuous_boot_crash_prevent_tool_1a98d82c38da6929cec85453f15f441d25" refkind="member"><highlight class="normal">+<sp/>(void)setStartupCrashForTest:(BOOL)isOn</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;setStartupCrashForTest:%@&quot;</highlight><highlight class="normal">,<sp/>@(isOn)]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUserDefaults<sp/>*defaults<sp/>=<sp/>[NSUserDefaults<sp/>standardUserDefaults];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>setInteger:isOn<sp/>forKey:kStartupCrashForTest];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>[defaults<sp/>synchronize];</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad1d73a791284a51a019b4ebe5fac72c6" refkind="member"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad1d73a791284a51a019b4ebe5fac72c6" kindref="member">startupCrashForTest</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]<sp/><ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>]<sp/>&gt;=<sp/>kContinuousCrashOnLaunchNeedToFix)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>ret<sp/>=<sp/>[[NSUserDefaults<sp/>standardUserDefaults]<sp/>boolForKey:kStartupCrashForTest];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>)<sp/><ref refid="_x_d_continuous_boot_crash_prevent_tool_8m_1aa640472cbf121c48753a0a5bb9a39f2a" kindref="member">Logger</ref>([NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;startupCrashForTest:%@&quot;</highlight><highlight class="normal">,<sp/>@(ret)]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1229710375d2f177cba8d4ab6dc892f9" refkind="member"><highlight class="normal">+<sp/>(void)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1229710375d2f177cba8d4ab6dc892f9" kindref="member">deleteAllFilesUnderDocumentsLibraryCaches</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*documentsDirectory<sp/>=<sp/>[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,<sp/>NSUserDomainMask,<sp/>YES)<sp/>firstObject];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*libraryDirectory<sp/>=<sp/>[NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,<sp/>NSUserDomainMask,<sp/>YES)<sp/>firstObject];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*cachesDirectory<sp/>=<sp/>[NSSearchPathForDirectoriesInDomains(NSCachesDirectory,<sp/>NSUserDomainMask,<sp/>YES)<sp/>firstObject];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*filePathsToRemove<sp/>=<sp/>@[documentsDirectory,<sp/>libraryDirectory,<sp/>cachesDirectory];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>NSFileManager<sp/>*fileMgr<sp/>=<sp/>[NSFileManager<sp/>defaultManager];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NSString<sp/>*filePath<sp/>in<sp/>filePathsToRemove)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([fileMgr<sp/>fileExistsAtPath:filePath])<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSArray<sp/>*subFileArray<sp/>=<sp/>[fileMgr<sp/>contentsOfDirectoryAtPath:filePath<sp/>error:nil];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NSString<sp/>*subFileName<sp/>in<sp/>subFileArray)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSString<sp/>*subFilePath<sp/>=<sp/>[filePath<sp/>stringByAppendingPathComponent:subFileName];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([fileMgr<sp/>removeItemAtPath:subFilePath<sp/>error:nil])<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;removed<sp/>file<sp/>path:%@&quot;</highlight><highlight class="normal">,<sp/>subFilePath);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;failed<sp/>to<sp/>remove<sp/>file<sp/>path:%@&quot;</highlight><highlight class="normal">,<sp/>subFilePath);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;failed<sp/>to<sp/>remove<sp/>non-existing<sp/>file<sp/>path:%@&quot;</highlight><highlight class="normal">,<sp/>filePath);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;recoverFromContinuousCrash<sp/>finished,<sp/>files<sp/>at<sp/>home:[%@]\nDocuments:[%@]\nLibrary:[%@]\nCaches:[%@]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSFileManager<sp/>defaultManager]<sp/>contentsOfDirectoryAtPath:NSHomeDirectory()<sp/>error:nil],</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSFileManager<sp/>defaultManager]<sp/>contentsOfDirectoryAtPath:documentsDirectory<sp/>error:nil],</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSFileManager<sp/>defaultManager]<sp/>contentsOfDirectoryAtPath:libraryDirectory<sp/>error:nil],</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSFileManager<sp/>defaultManager]<sp/>contentsOfDirectoryAtPath:cachesDirectory<sp/>error:nil]);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m"/>
  </compounddef>
</doxygen>
