<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="category_u_i_table_view_07_f_d_template_layout_cell_08" kind="category" language="Objective-C" prot="public">
    <compoundname>UITableView(FDTemplateLayoutCell)</compoundname>
    <includes refid="_u_i_table_view_09_f_d_template_layout_cell_8h" local="no">UITableView+FDTemplateLayoutCell.h</includes>
      <sectiondef kind="property">
      <memberdef kind="property" id="category_u_i_table_view_07_f_d_template_layout_cell_08_1a45967be6c8bef9a2ee010df04c8e553b" prot="public" static="no" readable="yes" writable="yes" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no" accessor="assign">
        <type>BOOL</type>
        <definition>BOOL UITableView(FDTemplateLayoutCell)::fd_debugLogEnabled</definition>
        <argsstring></argsstring>
        <name>fd_debugLogEnabled</name>
        <read></read>
        <write></write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helps to debug or inspect what is this &quot;FDTemplateLayoutCell&quot; extention doing, turning on to print logs when &quot;creating&quot;, &quot;calculating&quot;, &quot;precaching&quot; or &quot;hitting cache&quot;.</para><para>Default to &quot;NO&quot;, log by &quot;NSLog&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.h" line="60" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="category_u_i_table_view_07_f_d_template_layout_cell_08_1a4e5ff15e51c6331de4c2df24dde2c684" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CGFloat</type>
        <definition>CGFloat UITableView(FDTemplateLayoutCell)::fd_heightForCellWithIdentifier:configuration:</definition>
        <argsstring>(NSString *identifier,[configuration] void(^configuration)(id cell))</argsstring>
        <name>fd_heightForCellWithIdentifier:configuration:</name>
        <param>
          <type>NSString *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <attributes>[configuration]</attributes>
          <type>void(^)(id cell)</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns height of cell of type specifed by a reuse identifier and configured by the configuration block.</para><para>The cell would be layed out on a fixed-width, vertically expanding basis with respect to its dynamic content, using auto layout. Thus, it is imperative that the cell was set up to be self-satisfied, i.e. its content always determines its height given the width is equal to the tableview&apos;s.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>A string identifier for retrieving and maintaining template cells with system&apos;s &quot;-dequeueReusableCellWithIdentifier:&quot; call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional block for configuring and providing content to the template cell. The configuration should be minimal for scrolling performance yet sufficient for calculating cell&apos;s height. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_u_i_table_view_07_f_d_template_layout_cell_08_1a3c758ad2fddba8092b5a6bf6bc53d882" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CGFloat</type>
        <definition>CGFloat UITableView(FDTemplateLayoutCell)::fd_heightForCellWithIdentifier:cacheByIndexPath:configuration:</definition>
        <argsstring>(NSString *identifier,[cacheByIndexPath] NSIndexPath *indexPath,[configuration] void(^configuration)(id cell))</argsstring>
        <name>fd_heightForCellWithIdentifier:cacheByIndexPath:configuration:</name>
        <param>
          <type>NSString *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <attributes>[cacheByIndexPath]</attributes>
          <type>NSIndexPath *</type>
          <declname>indexPath</declname>
        </param>
        <param>
          <attributes>[configuration]</attributes>
          <type>void(^)(id cell)</type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method does what &quot;-fd_heightForCellWithIdentifier:configuration&quot; does, and calculated height will be cached by its index path, returns a cached height when needed. Therefore lots of extra height calculations could be saved.</para><para>No need to worry about invalidating cached heights when data source changes, it will be done automatically when you call &quot;-reloadData&quot; or any method that triggers UITableView&apos;s reloading.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indexPath</parametername>
</parameternamelist>
<parameterdescription>
<para>where this cell&apos;s height cache belongs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.m" line="434" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UITableView/UITableView+FDTemplateLayoutCell.m" bodystart="434" bodyend="-1"/>
    <listofallmembers>
      <member refid="category_u_i_table_view_07_f_d_template_layout_cell_08_1a45967be6c8bef9a2ee010df04c8e553b" prot="public" virt="non-virtual"><scope>UITableView(FDTemplateLayoutCell)</scope><name>fd_debugLogEnabled</name></member>
      <member refid="category_u_i_table_view_07_f_d_template_layout_cell_08_1a3c758ad2fddba8092b5a6bf6bc53d882" prot="public" virt="virtual"><scope>UITableView(FDTemplateLayoutCell)</scope><name>fd_heightForCellWithIdentifier:cacheByIndexPath:configuration:</name></member>
      <member refid="category_u_i_table_view_07_f_d_template_layout_cell_08_1a4e5ff15e51c6331de4c2df24dde2c684" prot="public" virt="virtual"><scope>UITableView(FDTemplateLayoutCell)</scope><name>fd_heightForCellWithIdentifier:configuration:</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
