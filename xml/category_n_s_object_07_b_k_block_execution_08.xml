<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="category_n_s_object_07_b_k_block_execution_08" kind="category" language="Objective-C" prot="public">
    <compoundname>NSObject(BKBlockExecution)</compoundname>
    <includes refid="_n_s_object_09_b_k_block_execution_8h" local="no">NSObject+BKBlockExecution.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1a96817f94d9ad160bb21eebfcf571058d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performAfterDelay:usingBlock:</definition>
        <argsstring>(NSTimeInterval delay,[usingBlock] void(^block)(id obj))</argsstring>
        <name>bk_performAfterDelay:usingBlock:</name>
        <param>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(id obj)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block after a given delay on the reciever.</para><para><simplesect kind="warning"><para><emphasis>Important:</emphasis> Use of the <bold>self</bold> reference in a block is discouraged. The block argument <computeroutput>obj</computeroutput> should be used instead.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A single-argument code block, where <computeroutput>obj</computeroutput> is the reciever. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1a000a1530641d7b2e0dcee925e915a3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performInBackgroundAfterDelay:usingBlock:</definition>
        <argsstring>(NSTimeInterval delay,[usingBlock] void(^block)(id obj))</argsstring>
        <name>bk_performInBackgroundAfterDelay:usingBlock:</name>
        <param>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(id obj)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block in the background after a given delay on the receiver.</para><para>This method is functionally identical to <computeroutput>-bk_performAfterDelay</computeroutput>:usingBlock: except the block will be performed on a background queue.</para><para><simplesect kind="warning"><para><emphasis>Important:</emphasis> Use of the <bold>self</bold> reference in a block is discouraged. The block argument <computeroutput>obj</computeroutput> should be used instead.</para></simplesect>
<simplesect kind="see"><para>bk_performAfterDelay:usingBlock: </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A single-argument code block, where <computeroutput>obj</computeroutput> is the reciever. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1ab2294cca5d24414fae362e2440d215d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performOnQueue:afterDelay:usingBlock:</definition>
        <argsstring>(dispatch_queue_t queue,[afterDelay] NSTimeInterval delay,[usingBlock] void(^block)(id obj))</argsstring>
        <name>bk_performOnQueue:afterDelay:usingBlock:</name>
        <param>
          <type>dispatch_queue_t</type>
          <declname>queue</declname>
        </param>
        <param>
          <attributes>[afterDelay]</attributes>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(id obj)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block in the background after a given delay.</para><para>This method is functionally identical to <computeroutput>-bk_performAfterDelay</computeroutput>:usingBlock: except the block will be performed on a background queue.</para><para><simplesect kind="warning"><para><emphasis>Important:</emphasis> Use of the <bold>self</bold> reference in a block is discouraged. The block argument <computeroutput>obj</computeroutput> should be used instead.</para></simplesect>
<simplesect kind="see"><para>bk_performAfterDelay:usingBlock: </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A background queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A single-argument code block, where <computeroutput>obj</computeroutput> is the reciever. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1ace49e531ffcc99407c7b19db62d9a2d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performAfterDelay:usingBlock:</definition>
        <argsstring>(NSTimeInterval delay,[usingBlock] void(^block)(void))</argsstring>
        <name>bk_performAfterDelay:usingBlock:</name>
        <param>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(void)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block after a given delay.</para><para><simplesect kind="see"><para>bk_performAfterDelay:usingBlock: </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A code block. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1abd8378edbde5b9ca9f5e39edb9558a05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performInBackgroundAfterDelay:usingBlock:</definition>
        <argsstring>(NSTimeInterval delay,[usingBlock] void(^block)(void))</argsstring>
        <name>bk_performInBackgroundAfterDelay:usingBlock:</name>
        <param>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(void)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block in the background after a given delay.</para><para>This method is functionally identical to <computeroutput>+bk_performAfterDelay</computeroutput>:usingBlock: except the block will be performed on a background queue.</para><para><simplesect kind="see"><para>bk_performAfterDelay:usingBlock: </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A code block. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1a2e944fb604da6510dc6a3c0a34488fe2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
        <definition>BKCancellationToken NSObject(BKBlockExecution)::bk_performOnQueue:afterDelay:usingBlock:</definition>
        <argsstring>(dispatch_queue_t queue,[afterDelay] NSTimeInterval delay,[usingBlock] void(^block)(void))</argsstring>
        <name>bk_performOnQueue:afterDelay:usingBlock:</name>
        <param>
          <type>dispatch_queue_t</type>
          <declname>queue</declname>
        </param>
        <param>
          <attributes>[afterDelay]</attributes>
          <type>NSTimeInterval</type>
          <declname>delay</declname>
        </param>
        <param>
          <attributes>[usingBlock]</attributes>
          <type>void(^)(void)</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a block in the background after a given delay.</para><para>This method is functionally identical to <computeroutput>+bk_performAfterDelay</computeroutput>:usingBlock: except the block will be performed on a background queue.</para><para><simplesect kind="see"><para>bk_performAfterDelay:usingBlock: </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A background queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>A measure in seconds. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>A code block. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque, temporary token that may be used to cancel execution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_object_07_b_k_block_execution_08_1afd91ed4273584630916f4902dc768b20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void NSObject(BKBlockExecution)::bk_cancelBlock:</definition>
        <argsstring>(BKCancellationToken token)</argsstring>
        <name>bk_cancelBlock:</name>
        <param>
          <type><ref refid="_n_s_object_09_b_k_block_execution_8h_1abe303e065cadd0405cae48ae2d9c4126" kindref="member">BKCancellationToken</ref></type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancels the potential execution of a block.</para><para><simplesect kind="warning"><para><emphasis>Important:</emphasis> It is not recommended to cancel a block executed with a delay of <computeroutput>0</computeroutput>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>A cancellation token, as returned from one of the <computeroutput>bk_perform</computeroutput> methods. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Block execution on <emphasis>any</emphasis> object.</para><para>This category overhauls the <computeroutput>performSelector:</computeroutput> utilities on <ref refid="class_n_s_object-p" kindref="compound">NSObject</ref> to instead use blocks. Not only are the blocks performed extremely speedily, thread-safely, and asynchronously using Grand Central Dispatch, but each convenience method also returns a pointer that can be used to cancel the execution before it happens!</para><para>Includes code by the following:</para><para><itemizedlist>
<listitem><para><ulink url="https://github.com/steipete">Peter Steinberger</ulink></para></listitem><listitem><para><ulink url="https://github.com/zwaldowski">Zach Waldowski</ulink> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" line="27" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/Core/NSObject+BKBlockExecution.h" bodystart="27" bodyend="-1"/>
    <listofallmembers>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1afd91ed4273584630916f4902dc768b20" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_cancelBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1a96817f94d9ad160bb21eebfcf571058d" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performAfterDelay:usingBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1ace49e531ffcc99407c7b19db62d9a2d9" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performAfterDelay:usingBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1a000a1530641d7b2e0dcee925e915a3c9" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performInBackgroundAfterDelay:usingBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1abd8378edbde5b9ca9f5e39edb9558a05" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performInBackgroundAfterDelay:usingBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1ab2294cca5d24414fae362e2440d215d2" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performOnQueue:afterDelay:usingBlock:</name></member>
      <member refid="category_n_s_object_07_b_k_block_execution_08_1a2e944fb604da6510dc6a3c0a34488fe2" prot="public" virt="virtual"><scope>NSObject(BKBlockExecution)</scope><name>bk_performOnQueue:afterDelay:usingBlock:</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
