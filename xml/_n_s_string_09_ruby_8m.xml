<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_n_s_string_09_ruby_8m" kind="file" language="Objective-C">
    <compoundname>NSString+Ruby.m</compoundname>
    <includes refid="_n_s_string_09_ruby_8h" local="yes">NSString+Ruby.h</includes>
    <incdepgraph>
      <node id="902">
        <label>NSString+Ruby.h</label>
        <link refid="_n_s_string_09_ruby_8h"/>
        <childnode refid="903" relation="include">
        </childnode>
      </node>
      <node id="901">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+Ruby.m</label>
        <link refid="NSString+Ruby.m"/>
        <childnode refid="902" relation="include">
        </childnode>
      </node>
      <node id="903">
        <label>Foundation/Foundation.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>NSString+Ruby.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Zachary<sp/>Davison<sp/>on<sp/>30/10/2012.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>ZD.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ruby<sp/>-&gt;<sp/>Obj-C<sp/>Equivalents</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>::try_convert</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>#%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(no<sp/>sensible<sp/>way<sp/>to<sp/>implement<sp/>this)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>#*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>#+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>#&lt;&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>#&lt;=&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compare:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>#==<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isEqualToString:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>#===<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>#=~<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index:</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>#[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start:shorthand:end<sp/>|&gt;<sp/>[@&quot;string&quot;<sp/>:1:@&quot;..&quot;:3]</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;[1]</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;{@&quot;regex&quot;}</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;{@[1,3]}</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>#[]=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(no<sp/>mutating<sp/>methods)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>#ascii_only?<sp/><sp/><sp/>isASCII:</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>#bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>#bytesize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>#byteslice</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>#capitalize<sp/><sp/><sp/><sp/>capitalizedString</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>#casecmp<sp/><sp/><sp/><sp/><sp/><sp/><sp/>caseInsensitiveCompare:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>#center<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center:<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center:with:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>#chars<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chars:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>#chomp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chomp</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chomp:</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>#chop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chop</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>#chr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chr</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>#clear<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unnecessary<sp/>in<sp/>obj-c)</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>#codepoints<sp/><sp/><sp/><sp/>codePoints:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>#concat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concat:</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>#count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count:</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>#crypt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsure<sp/>as<sp/>of<sp/>yet<sp/>of<sp/>which<sp/>method<sp/>to<sp/>use<sp/>for<sp/>this,<sp/>wary<sp/>of<sp/>providing<sp/>easily<sp/>misused<sp/>insecure<sp/>method)</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>#delete<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete:</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>#downcase<sp/><sp/><sp/><sp/><sp/><sp/>lowercaseString</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>#dump<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(implementation<sp/>very<sp/>close<sp/>to<sp/>|inspect|,<sp/>|inspect|<sp/>might<sp/>suffice?)</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>#each_byte<sp/><sp/><sp/><sp/><sp/>bytes:</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>#each_char<sp/><sp/><sp/><sp/><sp/>chars:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>#each_codepointcodepoints:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>#each_line<sp/><sp/><sp/><sp/><sp/>lines:</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>#empty?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isEmpty</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>#encode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>#encoding</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>#end_with?<sp/><sp/><sp/><sp/><sp/>endsWith:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>#eql?<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isEqualToString:</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>#force_encoding</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>#getbyte</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>#gsub<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substituteAll:</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substituteAll:pattern</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>#hash<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>#hex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hex</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>#include?<sp/><sp/><sp/><sp/><sp/><sp/>includes:</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>#index<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match:</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match:offset:</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>#insert<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert:string:</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>#inspect<sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspect</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>#intern<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not<sp/>viable<sp/>in<sp/>obj-c,<sp/>Ruby<sp/>specific)</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>#length<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>#lines<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines:</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>#ljust<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftJustify:</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftJustify:with:</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>#lstrip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftStrip</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>#match<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index:offset:</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>#next</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>#oct<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>octal</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>#ord<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ordinal</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>#partition<sp/><sp/><sp/><sp/><sp/>partition:</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>#prepend<sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepend:</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>#replace<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unnecessary<sp/>in<sp/>obj-c)</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>#reverse<sp/><sp/><sp/><sp/><sp/><sp/><sp/>reverse</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>#rindex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIndex:</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIndex:offset:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>#rjust<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightJustify:</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightJustify:with:</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>#rpartition<sp/><sp/><sp/><sp/>rightPartition:</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>#rstrip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightStrip</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>#scan<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan:</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>#setbyte</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>#size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>#slice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start:shorthand:end<sp/>|&gt;<sp/>[@&quot;string&quot;<sp/>:1:@&quot;..&quot;:3]</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;[1]</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;{@&quot;regex&quot;}</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@&quot;string&quot;{@[1,3]}</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>#split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split:</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split:limit:</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>#squeeze<sp/><sp/><sp/><sp/><sp/><sp/><sp/>squeeze</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>squeeze:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>#start_with?<sp/><sp/><sp/>startsWith:</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>#strip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strip</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>#sub<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substituteFirst:</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substituteLast:</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>#succ</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>#sum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum:</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>#swapcase<sp/><sp/><sp/><sp/><sp/><sp/>swapcase</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>#to_c</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>#to_f<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatValue</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>#to_i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intValue</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>#to_r</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>#to_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(just<sp/>use<sp/>self)</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>#to_str<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(just<sp/>use<sp/>self)</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>#to_sym<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not<sp/>viable<sp/>in<sp/>obj-c,<sp/>Ruby<sp/>specific,<sp/>NS____FromString<sp/>methods<sp/>might<sp/>do<sp/>what<sp/>you<sp/>want)</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>#tr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(functionality<sp/>is<sp/>very<sp/>similar<sp/>to<sp/>gsub<sp/>for<sp/>us,<sp/>suggest<sp/>using<sp/>that<sp/>instead)</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>#tr_s</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>#unpack</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>#upcase<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uppercaseString</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>#upto</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>#valid_encoding?</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_n_s_string_09_ruby_8h" kindref="compound">NSString+Ruby.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_n_s_string_07_ruby_08" kindref="compound">NSString (Ruby)</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">NSString*<sp/>_stringRepresentationOf(id&lt;Concatenatable&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>isKindOfClass:[NSString<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]]){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NSString*)object;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>isKindOfClass:[NSNumber<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]]){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>unichar<sp/>c<sp/>=<sp/>[(NSNumber*)object<sp/>charValue];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithCharacters:&amp;c<sp/>length:1];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(description)]){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[object<sp/>description];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">@&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">-<sp/>(NSString*)_delete:(NSString*)first<sp/>remaining:(va_list)args{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>NSSet<sp/>*comparisonSet<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>unionOfCharactersInStrings:first<sp/>remaining:args];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>NSString<sp/>*finalString<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*charString<sp/>in<sp/>comparisonSet)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>finalString<sp/>=<sp/>[finalString<sp/>stringByReplacingOccurrencesOfString:charString<sp/>withString:@&quot;&quot;];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalString;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Public<sp/>Operator-likes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">-<sp/>(NSString*):(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">&lt;<ref refid="protocol_concatenatable-p" kindref="compound">Concatenatable</ref>&gt;)concat,<sp/>...<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>NSMutableString<sp/>*newString<sp/>=<sp/>[NSMutableString<sp/>stringWithString:self];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>concat);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>arg<sp/>=<sp/>concat<sp/>;<sp/>arg<sp/>!=<sp/>nil<sp/>;<sp/>arg<sp/>=<sp/>va_arg(args,<sp/>id&lt;Concatenatable&gt;)){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>[newString<sp/>appendString:_stringRepresentationOf(arg)];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newString;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="category_n_s_string_07_ruby_08_1a15a7ada3f40fe0aca3a9ad75e28751e9" refkind="member"><highlight class="normal">-<sp/>(NSString*)x:(NSInteger<sp/>)mult<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>NSMutableString<sp/>*result<sp/>=<sp/>[NSMutableString<sp/>string];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;mult;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>[result<sp/>appendString:self];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Public<sp/>Shorthand<sp/>Accessors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">-<sp/>(NSString*):(NSInteger)loc<sp/>:(NSInteger<sp/>)len<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange((loc<sp/>&gt;=<sp/>0)<sp/>?<sp/>loc:self.length<sp/>-<sp/>labs(loc),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">-<sp/>(NSString*):(NSInteger<sp/>)start<sp/>:(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)shorthand<sp/>:(NSInteger<sp/>)end<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>NSUInteger<sp/>rstart<sp/>=<sp/>(start<sp/>&gt;=<sp/>0)<sp/>?<sp/>start<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>-<sp/>labs(start);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>NSUInteger<sp/>rend<sp/>=<sp/>(end<sp/>&gt;=<sp/>0)<sp/>?<sp/>end<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>-<sp/>labs(end);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rstart<sp/>&gt;<sp/>rend)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/><sp/>NSMakeRange(rstart,rend-rstart);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(shorthand,<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:range];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(shorthand,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>range.length<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:range];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Public<sp/>Ruby<sp/>String<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="category_n_s_string_07_ruby_08_1afbbaf6ae573ae530e41dc5e9d98ed487" refkind="member"><highlight class="normal">-<sp/>(void)bytes:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(unichar))block<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>unichar<sp/>*characters<sp/>=<sp/>calloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>getCharacters:characters];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>block(characters[i]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="category_n_s_string_07_ruby_08_1ab945733969bd0a7621b5227cc375dc20" refkind="member"><highlight class="normal">-<sp/>(NSString*)center:(NSInteger<sp/>)amount{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a30428421d748ce2a634eec19009e3f52" kindref="member">center</ref>:amount<sp/><ref refid="category_n_s_string_07_ruby_08_1a30428421d748ce2a634eec19009e3f52" kindref="member">with</ref>:@&quot;<sp/>&quot;];</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="category_n_s_string_07_ruby_08_1a30428421d748ce2a634eec19009e3f52" refkind="member"><highlight class="normal">-<sp/>(NSString*)center:(NSInteger<sp/>)amount<sp/>with:(NSString*)padString<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>&lt;=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>NSInteger<sp/>padamount<sp/>=<sp/>floor((amount<sp/>-<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)/2);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>NSString<sp/>*pad<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>NSInteger<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;i&lt;padamount;i++){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>pad<sp/>=<sp/>[NSString<sp/>stringWithFormat:@&quot;%@%c&quot;,pad,[padString<sp/>characterAtIndex:c++]];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/>padString.length)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/>[NSString<sp/>stringWithFormat:@&quot;%@%@%@&quot;,pad,self,pad];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result.length<sp/>==<sp/>amount)<sp/>?<sp/>result<sp/>:<sp/>[NSString<sp/>stringWithFormat:@&quot;%@%c&quot;,result,[padString<sp/>characterAtIndex:c]];</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="category_n_s_string_07_ruby_08_1a289f27e30e02141da59182faaa9a4879" refkind="member"><highlight class="normal">-<sp/>(void)chars:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(unichar))block<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>unichar<sp/>*characters<sp/>=<sp/>calloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>getCharacters:characters];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>unichar<sp/>character<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:i];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>block(character);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="category_n_s_string_07_ruby_08_1a648d291be5e2ef28a925b92733761fd2" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a648d291be5e2ef28a925b92733761fd2" kindref="member">chomp</ref><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([[NSCharacterSet<sp/>whitespaceAndNewlineCharacterSet]<sp/>characterIsMember:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-1]])<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(0,<sp/>self.length-1)];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="category_n_s_string_07_ruby_08_1af78f91dd303ea60c63efc3fb4fc77e66" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a648d291be5e2ef28a925b92733761fd2" kindref="member">chomp</ref>:(NSString*)string<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stringByReplacingOccurrencesOfString:string</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withString:@&quot;&quot;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range:NSMakeRange(self.length-string.length,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.length)];</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="category_n_s_string_07_ruby_08_1a4b41b3f52d9045d5f1f1fa36d28f9492" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a4b41b3f52d9045d5f1f1fa36d28f9492" kindref="member">chop</ref><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(0,<sp/>self.length<sp/>-<sp/>((self.length<sp/>&gt;0)<sp/>?<sp/>1:0))];</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="category_n_s_string_07_ruby_08_1a1deab2f950218f7c223d53b9059b719f" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a1deab2f950218f7c223d53b9059b719f" kindref="member">chr</ref><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(0,<sp/>(self.length<sp/>&gt;<sp/>0)<sp/>?<sp/>1:0)];</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="category_n_s_string_07_ruby_08_1a04480507d973e0b573ab866cf24ea53d" refkind="member"><highlight class="normal">-<sp/>(void)codePoints:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(NSInteger<sp/>))block{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>unichar<sp/>*characters<sp/>=<sp/>calloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>getCharacters:characters];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>codepoint<sp/>=<sp/>(NSInteger<sp/>)[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:i];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>block(codepoint);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="category_n_s_string_07_ruby_08_1a7f12f44693a38999741a870e23d2f89f" refkind="member"><highlight class="normal">-<sp/>(NSString*)concat:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)concat<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stringByAppendingString:concat];</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="category_n_s_string_07_ruby_08_1a8c517229594c7fc6a4edccdecbe4f30b" refkind="member"><highlight class="normal">-<sp/>(NSInteger)count:(NSString*)first,<sp/>...{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>first);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>NSSet<sp/>*comparisonSet<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>unionOfCharactersInStrings:first<sp/>remaining:args];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>NSInteger<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*charString<sp/>in<sp/>comparisonSet)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1aa4feb0207c17c99d6c53f098bb1a7e5a" kindref="member">occurencesOf</ref>:charString];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="category_n_s_string_07_ruby_08_1a71c86646293597b21c3c9d994cf1ae98" refkind="member"><highlight class="normal">-<sp/>(NSString*)delete:(NSString*)first,<sp/>...{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>first);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_delete:first<sp/>remaining:args];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="category_n_s_string_07_ruby_08_1a6b56268341593e0d9a065ff049fcfa6a" refkind="member"><highlight class="normal">-<sp/>(BOOL)endsWith:(NSString*)first,...{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>first);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*arg<sp/>=<sp/>first;<sp/>arg!=nil;<sp/>arg<sp/>=<sp/>va_arg(args,<sp/>NSString*))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>rangeOfString:arg];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(range.location<sp/>+<sp/>range.length<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="category_n_s_string_07_ruby_08_1a57e1af22fee15afba55296ad6c34812e" refkind="member"><highlight class="normal">-<sp/>(long)<ref refid="category_n_s_string_07_ruby_08_1a57e1af22fee15afba55296ad6c34812e" kindref="member">hex</ref>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>outVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>NSScanner*<sp/>scanner<sp/>=<sp/>[NSScanner<sp/>scannerWithString:self];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>[scanner<sp/>scanHexInt:&amp;outVal];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)outVal;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="category_n_s_string_07_ruby_08_1aea87cef7035a9140a48f720034d0156f" refkind="member"><highlight class="normal">-<sp/>(BOOL)includes:(NSString*)include{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>rangeOfString:include].location<sp/>!=<sp/>NSNotFound;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="category_n_s_string_07_ruby_08_1a1af7c18730bd0c47be44a42009353230" refkind="member"><highlight class="normal">-<sp/>(NSInteger)index:(NSString*)pattern{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1ade2528462ce2ce8dbf9ab843d7cd78ad" kindref="member">index</ref>:pattern<sp/><ref refid="category_n_s_string_07_ruby_08_1ade2528462ce2ce8dbf9ab843d7cd78ad" kindref="member">offset</ref>:0];</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="category_n_s_string_07_ruby_08_1ade2528462ce2ce8dbf9ab843d7cd78ad" refkind="member"><highlight class="normal">-<sp/>(NSInteger)index:(NSString*)pattern<sp/>offset:(NSInteger<sp/>)offset{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error){</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUInteger<sp/>loc<sp/>=<sp/>(offset<sp/>&gt;=<sp/>0)<sp/>?<sp/>offset<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-labs(offset);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUInteger<sp/>len<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>-<sp/>loc;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>NSMakeRange(loc,len);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>firstMatchInString:self<sp/>options:0<sp/>range:range];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result.range.length<sp/>&gt;<sp/>0)<sp/>?<sp/>result.range.location<sp/>:<sp/>NSNotFound;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NSNotFound;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="category_n_s_string_07_ruby_08_1a7dff037a34cc8ba1722fdb3f8821d8fe" refkind="member"><highlight class="normal">-<sp/>(NSString*)insert:(NSInteger)index<sp/>string:(NSString*)string{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>-<sp/>labs(index)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithFormat:@&quot;%@%@%@&quot;,[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringToIndex:index],string,[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringFromIndex:index]];</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="category_n_s_string_07_ruby_08_1a97d22dec22b9ee91ea066de6c86a5e5c" refkind="member"><highlight class="normal">-<sp/>(NSString<sp/>*)<ref refid="category_n_s_string_07_ruby_08_1a97d22dec22b9ee91ea066de6c86a5e5c" kindref="member">inspect</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>NSMutableString<sp/>*result<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>mutableCopy];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>NSRange<sp/>stringRange<sp/>=<sp/>NSMakeRange(0,<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>length]);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>[@{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\0&quot;<sp/>:<sp/>@&quot;\\0&quot;,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\a&quot;<sp/>:<sp/>@&quot;\\a&quot;,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\b&quot;<sp/>:<sp/>@&quot;\\b&quot;,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\t&quot;<sp/>:<sp/>@&quot;\\t&quot;,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\n&quot;<sp/>:<sp/>@&quot;\\n&quot;,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\f&quot;<sp/>:<sp/>@&quot;\\f&quot;,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\r&quot;<sp/>:<sp/>@&quot;\\r&quot;,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>@&quot;\e&quot;<sp/>:<sp/>@&quot;\\e&quot;,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/>enumerateKeysAndObjectsUsingBlock:^(NSString<sp/>*string,<sp/>NSString<sp/>*replacement,<sp/>BOOL<sp/>*stop)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[result<sp/>replaceOccurrencesOfString:string<sp/>withString:replacement<sp/>options:0<sp/>range:stringRange];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithFormat:@&quot;\&quot;%@\&quot;&quot;,result];</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="category_n_s_string_07_ruby_08_1a1234a5f043edc5eb05f685d523eee258" refkind="member"><highlight class="normal">-<sp/>(BOOL)<ref refid="category_n_s_string_07_ruby_08_1a1234a5f043edc5eb05f685d523eee258" kindref="member">isASCII</ref>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>unichar<sp/>*characters<sp/>=<sp/>calloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>getCharacters:characters];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(characters[i]<sp/>&lt;<sp/>32<sp/>||<sp/>characters[i]<sp/>&gt;<sp/>127){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>YES;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="category_n_s_string_07_ruby_08_1ab16c6123879199765c3f0275977fd49d" refkind="member"><highlight class="normal">-<sp/>(BOOL)<ref refid="category_n_s_string_07_ruby_08_1ab16c6123879199765c3f0275977fd49d" kindref="member">isEmpty</ref>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="category_n_s_string_07_ruby_08_1ab6c3728548db1b4a49a2b9f2f2b166a0" refkind="member"><highlight class="normal">-<sp/>(NSInteger)lastIndex:(NSString*)pattern{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a2669bce5f11d51680749e578bf063886" kindref="member">lastIndex</ref>:pattern<sp/><ref refid="category_n_s_string_07_ruby_08_1a2669bce5f11d51680749e578bf063886" kindref="member">offset</ref>:0];</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="category_n_s_string_07_ruby_08_1a2669bce5f11d51680749e578bf063886" refkind="member"><highlight class="normal">-<sp/>(NSInteger)lastIndex:(NSString*)pattern<sp/>offset:(NSInteger<sp/>)offset{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>labs(offset);<sp/></highlight><highlight class="comment">//lets<sp/>allow<sp/>for<sp/>negative<sp/>and<sp/>positive<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error){</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:NSMakeRange(0,<sp/>self.length-offset)].lastObject;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result.range.length<sp/>&gt;<sp/>0)<sp/>?<sp/>result.range.location<sp/>:<sp/>NSNotFound;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NSNotFound;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="category_n_s_string_07_ruby_08_1aa3b3f70bc7dc7099da05623e3ce8380c" refkind="member"><highlight class="normal">-<sp/>(NSString*)leftJustify:(NSInteger<sp/>)amount{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1aab843278d0ea51b4eae6dd8aa8e518d4" kindref="member">leftJustify</ref>:amount<sp/><ref refid="category_n_s_string_07_ruby_08_1aab843278d0ea51b4eae6dd8aa8e518d4" kindref="member">with</ref>:@&quot;<sp/>&quot;];</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="category_n_s_string_07_ruby_08_1aab843278d0ea51b4eae6dd8aa8e518d4" refkind="member"><highlight class="normal">-<sp/>(NSString*)leftJustify:(NSInteger<sp/>)amount<sp/>with:(NSString*)padString{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>&lt;=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>NSString<sp/>*pad<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>NSInteger<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;i&lt;amount-</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;i++){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>pad<sp/>=<sp/>[NSString<sp/>stringWithFormat:@&quot;%@%c&quot;,pad,[padString<sp/>characterAtIndex:c++]];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/>padString.length)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/>[NSString<sp/>stringWithFormat:@&quot;%@%@&quot;,self,pad];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="category_n_s_string_07_ruby_08_1aae6b68d89b1ef5769dcea465f828ce93" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1aae6b68d89b1ef5769dcea465f828ce93" kindref="member">leftStrip</ref>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>NSInteger<sp/>i;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;i++){</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(![[NSCharacterSet<sp/>whitespaceAndNewlineCharacterSet]<sp/>characterIsMember:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:i]])</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stringByReplacingCharactersInRange:NSMakeRange(0,<sp/>i)<sp/>withString:@&quot;&quot;];</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="category_n_s_string_07_ruby_08_1af21739e03ec0687825a2c445ee3d9048" refkind="member"><highlight class="normal">-<sp/>(void)lines:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(NSString*))block<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a56b4c64c3f7912b4c5d6fca4bb3df039" kindref="member">lines</ref>:block<sp/><ref refid="category_n_s_string_07_ruby_08_1a56b4c64c3f7912b4c5d6fca4bb3df039" kindref="member">separator</ref>:@&quot;\n&quot;];</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="category_n_s_string_07_ruby_08_1a56b4c64c3f7912b4c5d6fca4bb3df039" refkind="member"><highlight class="normal">-<sp/>(void)lines:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(NSString*))block<sp/>separator:(NSString*)separator<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>NSArray<sp/>*lines<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>componentsSeparatedByString:separator];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*line<sp/>in<sp/>lines)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>block(line);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="category_n_s_string_07_ruby_08_1ac3093bf268001a65457a75c44647234c" refkind="member"><highlight class="normal">-<sp/>(NSArray*)match:(NSString*)pattern{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a60ee599f4d8246b6c890365ea35631aa" kindref="member">match</ref>:pattern<sp/><ref refid="category_n_s_string_07_ruby_08_1a60ee599f4d8246b6c890365ea35631aa" kindref="member">offset</ref>:0];</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="category_n_s_string_07_ruby_08_1a60ee599f4d8246b6c890365ea35631aa" refkind="member"><highlight class="normal">-<sp/>(NSArray*)match:(NSString*)pattern<sp/>offset:(NSInteger<sp/>)offset{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>NSMutableArray<sp/>*results<sp/>=<sp/>[NSMutableArray<sp/>array];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>NSArray<sp/>*matches<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:NSMakeRange(offset,<sp/>self.length-offset)];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSTextCheckingResult<sp/>*match<sp/>in<sp/>matches)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>want<sp/>to<sp/>honor<sp/>capture<sp/>groups,<sp/>the<sp/>obj-c<sp/>way<sp/>is..<sp/>-_-,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>first<sp/>match,<sp/>it&apos;s<sp/>most<sp/>probably<sp/>not<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match.numberOfRanges<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i=1;i&lt;match.numberOfRanges;i++){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[results<sp/>addObject:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:[match<sp/>rangeAtIndex:i]]];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[results<sp/>addObject:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:match.range]];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="category_n_s_string_07_ruby_08_1aa4feb0207c17c99d6c53f098bb1a7e5a" refkind="member"><highlight class="normal">-<sp/>(NSInteger)occurencesOf:(NSString*)subString<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>NSUInteger<sp/>cnt<sp/>=<sp/>0,<sp/>length<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>length];</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>NSMakeRange(0,<sp/>length);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.location<sp/>!=<sp/>NSNotFound)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>rangeOfString:subString<sp/>options:0<sp/>range:range];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.location<sp/>!=<sp/>NSNotFound)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>NSMakeRange(<ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.location<sp/>+<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.length,<sp/>length<sp/>-<sp/>(<ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.location<sp/>+<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref>.length));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="category_n_s_string_07_ruby_08_1a7d37720c2222ce804fdb6ca29d87f8f3" refkind="member"><highlight class="normal">-<sp/>(long)<ref refid="category_n_s_string_07_ruby_08_1a7d37720c2222ce804fdb6ca29d87f8f3" kindref="member">octal</ref>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>strtol(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.UTF8String,<sp/>NULL,<sp/>8);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="category_n_s_string_07_ruby_08_1a6097bae77a164881e54b8f9c69cd64a7" refkind="member"><highlight class="normal">-<sp/>(NSInteger<sp/>)<ref refid="category_n_s_string_07_ruby_08_1a6097bae77a164881e54b8f9c69cd64a7" kindref="member">ordinal</ref>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NSInteger<sp/>)[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:0];</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="category_n_s_string_07_ruby_08_1ace3685404ba28c4e6da19a445d40a9e8" refkind="member"><highlight class="normal">-<sp/>(NSArray*)partition:(NSString*)pattern{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>firstMatchInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[</highlight><highlight class="keyword">self</highlight><highlight class="normal">,@&quot;&quot;,@&quot;&quot;];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>NSString<sp/>*first<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(0,<sp/>result.range.location)];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>NSString<sp/>*middle<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:result.range];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>NSString<sp/>*last<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(result.range.location+result.range.length,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.length-<sp/>(result.range.location+result.range.length))];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[first,middle,last];</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="category_n_s_string_07_ruby_08_1a1b761d85035969f4321fd835ad55822c" refkind="member"><highlight class="normal">-<sp/>(NSString*)prepend:(NSString*)prefix<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithFormat:@&quot;%@%@&quot;,prefix,self];</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" refkind="member"><highlight class="normal">-<sp/>(NSRange)<ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NSMakeRange(0,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length);</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="category_n_s_string_07_ruby_08_1a86fec7f0d900b1f3ab8cf5f3627aeb5b" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a86fec7f0d900b1f3ab8cf5f3627aeb5b" kindref="member">reverse</ref>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>NSMutableString<sp/>*reversedStr<sp/>=<sp/>[NSMutableString<sp/>stringWithCapacity:self.length];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i=</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-1;i&gt;=0;i--)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>[reversedStr<sp/>appendString:[NSString<sp/>stringWithFormat:</highlight><highlight class="stringliteral">@&quot;%c&quot;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:i]]];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reversedStr;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="category_n_s_string_07_ruby_08_1aee0113592f2506bb0c7a195cfb9d0f8e" refkind="member"><highlight class="normal">-<sp/>(NSInteger)rightIndex:(NSString*)pattern{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1ade2528462ce2ce8dbf9ab843d7cd78ad" kindref="member">index</ref>:pattern<sp/><ref refid="category_n_s_string_07_ruby_08_1ade2528462ce2ce8dbf9ab843d7cd78ad" kindref="member">offset</ref>:0];</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="category_n_s_string_07_ruby_08_1aae565b73339f11390c76b9692354a119" refkind="member"><highlight class="normal">-<sp/>(NSInteger)rightIndex:(NSString*)pattern<sp/>offset:(NSInteger<sp/>)offset{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error){</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>loc<sp/>=<sp/>(offset<sp/>&gt;=<sp/>0)<sp/>?<sp/>offset<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-labs(offset);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>len<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length<sp/>-<sp/>loc;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>NSMakeRange(0,len);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:range].lastObject;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result.range.length<sp/>&gt;<sp/>0)<sp/>?<sp/>result.range.location<sp/>:<sp/>NSNotFound;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NSNotFound;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="category_n_s_string_07_ruby_08_1ad557b9259cef8d32d5d46b2821b07f4f" refkind="member"><highlight class="normal">-<sp/>(NSString*)rightJustify:(NSInteger<sp/>)amount{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a03e272e21e5ac2c5062244b1fbdbab37" kindref="member">rightJustify</ref>:amount<sp/><ref refid="category_n_s_string_07_ruby_08_1a03e272e21e5ac2c5062244b1fbdbab37" kindref="member">with</ref>:@&quot;<sp/>&quot;];</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="category_n_s_string_07_ruby_08_1a03e272e21e5ac2c5062244b1fbdbab37" refkind="member"><highlight class="normal">-<sp/>(NSString*)rightJustify:(NSInteger<sp/>)amount<sp/>with:(NSString*)padString{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(amount<sp/>&lt;=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>NSString<sp/>*pad<sp/>=<sp/>[@&quot;&quot;<sp/>stringByPaddingToLength:amount-self.length<sp/>withString:padString<sp/>startingAtIndex:0];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[pad:self,nil];</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="category_n_s_string_07_ruby_08_1a3839c36081e4331072238bf065b5d096" refkind="member"><highlight class="normal">-<sp/>(NSArray*)rightPartition:(NSString*)pattern{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:self.range].lastObject;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[@&quot;&quot;,@&quot;&quot;,</highlight><highlight class="keyword">self</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>NSString<sp/>*first<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(0,<sp/>result.range.location)];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>NSString<sp/>*middle<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:result.range];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>NSString<sp/>*last<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(result.range.location+result.range.length,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.length-<sp/>(result.range.location+result.range.length))];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[first,middle,last];</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="category_n_s_string_07_ruby_08_1a1bc44701016b0fcceadb663d4d4a56a1" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a1bc44701016b0fcceadb663d4d4a56a1" kindref="member">rightStrip</ref>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>NSInteger<sp/>i;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-1;i&gt;0;i--){</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(![[NSCharacterSet<sp/>whitespaceAndNewlineCharacterSet]<sp/>characterIsMember:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:i]])</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stringByReplacingCharactersInRange:NSMakeRange(i+1,<sp/>self.length-1-i)<sp/>withString:@&quot;&quot;];</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="category_n_s_string_07_ruby_08_1ae0e978a8f7f824a21b45aad17174e99f" refkind="member"><highlight class="normal">-<sp/>(NSArray*)scan:(NSString*)pattern{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>NSMutableArray<sp/>*strings<sp/>=<sp/>[NSMutableArray<sp/>array];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>NSArray<sp/>*results<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSTextCheckingResult<sp/>*result<sp/>in<sp/>results){</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>[strings<sp/>addObject:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:result.range]];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSArray<sp/>arrayWithArray:strings];</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="category_n_s_string_07_ruby_08_1a06cafd4f6e04c13cda6a220a71333412" refkind="member"><highlight class="normal">-<sp/>(BOOL)startsWith:(NSString*)first,...{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>first);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*arg<sp/>=<sp/>first;<sp/>arg!=nil;<sp/>arg<sp/>=<sp/>va_arg(args,<sp/>NSString*))<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>rangeOfString:arg].location<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="category_n_s_string_07_ruby_08_1ad3b4b60edc13e328186e390bff9f5a3e" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1ad3b4b60edc13e328186e390bff9f5a3e" kindref="member">strip</ref>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1aae6b68d89b1ef5769dcea465f828ce93" kindref="member">leftStrip</ref>]<sp/>rightStrip];</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="category_n_s_string_07_ruby_08_1a4753cf32665d301a03313d6f311bdd2a" refkind="member"><highlight class="normal">-<sp/>(NSArray*)<ref refid="category_n_s_string_07_ruby_08_1a4753cf32665d301a03313d6f311bdd2a" kindref="member">split</ref>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a815ea743701f5b05d1c6c6a1e7231e3a" kindref="member">split</ref>:@&quot;<sp/>&quot;];</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="category_n_s_string_07_ruby_08_1a815ea743701f5b05d1c6c6a1e7231e3a" refkind="member"><highlight class="normal">-<sp/>(NSArray*)<ref refid="category_n_s_string_07_ruby_08_1a4753cf32665d301a03313d6f311bdd2a" kindref="member">split</ref>:(NSString*)pattern{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a302f90211e24788f25156b876a29ca4d" kindref="member">split</ref>:pattern<sp/><ref refid="category_n_s_string_07_ruby_08_1a302f90211e24788f25156b876a29ca4d" kindref="member">limit</ref>:INT_MAX];</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="category_n_s_string_07_ruby_08_1a302f90211e24788f25156b876a29ca4d" refkind="member"><highlight class="normal">-<sp/>(NSArray*)<ref refid="category_n_s_string_07_ruby_08_1a4753cf32665d301a03313d6f311bdd2a" kindref="member">split</ref>:(NSString*)pattern<sp/>limit:(NSInteger<sp/>)limit{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>NSString<sp/>*str<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>limit<sp/>is<sp/>negative,<sp/>dont<sp/>suppress<sp/>fields<sp/>and<sp/>return<sp/>all<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>limit<sp/>=<sp/>INT_MAX<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>NSMutableArray<sp/>*strings<sp/>=<sp/>[NSMutableArray<sp/>array];</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>splitting<sp/>on<sp/>nothing,<sp/>just<sp/>split<sp/>every<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pattern.length<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i=0;i&lt;MIN(limit-1,str.length);i++){</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[strings<sp/>addObject:[NSString<sp/>stringWithFormat:@&quot;%c&quot;,[str<sp/>characterAtIndex:i]]];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strings.count<sp/>&lt;<sp/>str.length)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[strings<sp/>addObject:[str<sp/>substringWithRange:NSMakeRange(strings.count,<sp/>str.length-strings.count)]];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strings;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>@[];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//remove<sp/>leading/trailing/continuous<sp/>whitespace<sp/>if<sp/>we&apos;re<sp/>splitting<sp/>on<sp/>whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([pattern<sp/>isEqualToString:</highlight><highlight class="stringliteral">@&quot;<sp/>&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1ad3b4b60edc13e328186e390bff9f5a3e" kindref="member">strip</ref>]<sp/>squeeze:@&quot;<sp/>&quot;];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>NSArray<sp/>*matches<sp/>=<sp/>[regex<sp/>matchesInString:str<sp/>options:0<sp/>range:str.range];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>NSInteger<sp/>loc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSTextCheckingResult<sp/>*result<sp/>in<sp/>matches){</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*s<sp/>=<sp/>[str<sp/>substringWithRange:NSMakeRange(loc,<sp/>result.range.location-loc)];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result.range.length<sp/>&gt;<sp/>0<sp/>||<sp/>s.length<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[strings<sp/>addObject:s];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>loc<sp/>=<sp/>result.range.location<sp/>+<sp/>result.range.length;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strings.count<sp/>&gt;=<sp/>limit-1)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>NSString<sp/>*s<sp/>=<sp/>[str<sp/>substringWithRange:NSMakeRange(loc,<sp/>str.length-loc)];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.length<sp/>&gt;<sp/>0<sp/>||<sp/>limit<sp/>==<sp/>INT_MAX<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>[strings<sp/>addObject:s];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>limit<sp/>isn&apos;t<sp/>specified,<sp/>suppress<sp/>trailing<sp/>nulls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(limit<sp/>==<sp/>INT_MAX<sp/>&amp;&amp;<sp/>[[strings<sp/>lastObject]<sp/>length]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>[strings<sp/>removeLastObject];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strings;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="category_n_s_string_07_ruby_08_1a04c55cfca941c8747ff6e2f8d5438531" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a04c55cfca941c8747ff6e2f8d5438531" kindref="member">squeeze</ref>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a3cc1ba68e2c89342265b754d2899e501" kindref="member">squeeze</ref>:@&quot;.&quot;];</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="category_n_s_string_07_ruby_08_1a3cc1ba68e2c89342265b754d2899e501" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1a04c55cfca941c8747ff6e2f8d5438531" kindref="member">squeeze</ref>:(NSString*)pattern{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>NSMutableString<sp/>*s<sp/>=<sp/>[NSMutableString<sp/>string];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>NSString<sp/>*wrapped<sp/>=<sp/>[NSString<sp/>stringWithFormat:@&quot;(%@)\\1+&quot;,pattern];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:wrapped</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>NSArray<sp/>*matches<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>NSInteger<sp/>loc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSTextCheckingResult<sp/>*result<sp/>in<sp/>matches){</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>[s<sp/>appendString:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(loc,<sp/>result.range.location-loc)]];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>loc<sp/>=<sp/>result.range.location<sp/>+<sp/>result.range.length;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>[s<sp/>appendFormat:@&quot;%c&quot;,[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:result.range.location]];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>[s<sp/>appendString:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange(loc,<sp/>self.length-loc)]];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="category_n_s_string_07_ruby_08_1a1294863ecc573d7d2aaf79a3945327b7" refkind="member"><highlight class="normal">-<sp/>(NSString*)substituteFirst:(NSString*)pattern<sp/>with:(NSString*)sub<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*match<sp/>=<sp/>[regex<sp/>firstMatchInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>[result<sp/>stringByReplacingCharactersInRange:match.range<sp/>withString:sub];</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="category_n_s_string_07_ruby_08_1a33d253a0721f5f0a6a8dfe2b06cc0bbf" refkind="member"><highlight class="normal">-<sp/>(NSString*)substituteLast:(NSString*)pattern<sp/>with:(NSString*)sub<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*match<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:self.range].lastObject;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>[result<sp/>stringByReplacingCharactersInRange:match.range<sp/>withString:sub];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="category_n_s_string_07_ruby_08_1a683de1e4da7fdc6fa6eb599469eb418f" refkind="member"><highlight class="normal">-<sp/>(NSString*)substituteAll:(NSDictionary*)subDictionary<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*key<sp/>in<sp/>[subDictionary<sp/>allKeys])<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRange<sp/><ref refid="category_n_s_string_07_ruby_08_1a2db0eec8686b09fc895cd7d7c0c1cd5a" kindref="member">range</ref><sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>rangeOfString:key];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(range.location<sp/>!=<sp/>NSNotFound)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>[result<sp/>stringByReplacingOccurrencesOfString:key<sp/>withString:[subDictionary<sp/>objectForKey:key]];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="category_n_s_string_07_ruby_08_1a43293c2e5d5075ea32dea622609ac4dd" refkind="member"><highlight class="normal">-<sp/>(NSString*)substituteAll:(NSString*)pattern<sp/>with:(NSString*)sub<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>NSString<sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:pattern</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!error)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*matches<sp/>=<sp/>[regex<sp/>matchesInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSTextCheckingResult<sp/>*match<sp/>in<sp/>matches)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>[result<sp/>stringByReplacingCharactersInRange:match.range<sp/>withString:sub];</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="category_n_s_string_07_ruby_08_1ac0d413bba0f5c657eae5f3aa81435ca9" refkind="member"><highlight class="normal">-<sp/>(NSInteger<sp/>)<ref refid="category_n_s_string_07_ruby_08_1ac0d413bba0f5c657eae5f3aa81435ca9" kindref="member">sum</ref>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1ad9c41d4c88f4f956538abde44f8e3e8e" kindref="member">sum</ref>:16];</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="category_n_s_string_07_ruby_08_1ad9c41d4c88f4f956538abde44f8e3e8e" refkind="member"><highlight class="normal">-<sp/>(NSInteger<sp/>)<ref refid="category_n_s_string_07_ruby_08_1ac0d413bba0f5c657eae5f3aa81435ca9" kindref="member">sum</ref>:(NSInteger<sp/>)bit{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>__block<sp/>NSInteger<sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_n_s_string_07_ruby_08_1a289f27e30e02141da59182faaa9a4879" kindref="member">chars</ref>:^(unichar<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>(NSInteger<sp/>)c;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(total<sp/>%<sp/>(NSInteger<sp/>)pow(2,<sp/>bit-1));</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="category_n_s_string_07_ruby_08_1aa04475f7a211698b150aa598ac530a7a" refkind="member"><highlight class="normal">-<sp/>(NSString*)<ref refid="category_n_s_string_07_ruby_08_1aa04475f7a211698b150aa598ac530a7a" kindref="member">swapcase</ref>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>unichar<sp/>*s<sp/>=<sp/>calloc(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>getCharacters:s];</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i=0;i&lt;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.length;i++){</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s[i]<sp/>&gt;=<sp/>64<sp/>&amp;&amp;<sp/>s[i]<sp/>&lt;=<sp/>90)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[i]<sp/>=<sp/>s[i]<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s[i]<sp/>&gt;=<sp/>97<sp/>&amp;&amp;<sp/>s[i]<sp/>&lt;=<sp/>122)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[i]<sp/>=<sp/>s[i]<sp/>-<sp/>32;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithCharacters:s<sp/>length:self.length];</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Subscript<sp/>Protocol<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="category_n_s_string_07_ruby_08_1a23663167f32973188004b6de56292f73" refkind="member"><highlight class="normal">-<sp/>(id)objectAtIndexedSubscript:(NSUInteger)index<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&gt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.length-1)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>unichar<sp/>character<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>characterAtIndex:index];</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithCharacters:&amp;character<sp/>length:1];</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="category_n_s_string_07_ruby_08_1acdac6e78447f10a2b1cb4034ee98eebd" refkind="member"><highlight class="normal">-<sp/>(id)objectForKeyedSubscript:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)key<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([key<sp/>isKindOfClass:[NSString<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{<sp/></highlight><highlight class="comment">//if<sp/>it&apos;s<sp/>a<sp/>string,<sp/>assume<sp/>a<sp/>regex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>NSError<sp/>*error<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRegularExpression<sp/>*regex<sp/>=<sp/>[[NSRegularExpression<sp/>alloc]<sp/>initWithPattern:key</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:0</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:&amp;error];</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>NSTextCheckingResult<sp/>*result<sp/>=<sp/>[regex<sp/>firstMatchInString:self<sp/>options:0<sp/>range:self.range];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:result.range];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">([key<sp/>isKindOfClass:[NSArray<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>loc<sp/>=<sp/>[key[0]<sp/>intValue];</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>NSInteger<sp/>len<sp/>=<sp/>[key[1]<sp/>intValue];</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>substringWithRange:NSMakeRange((loc<sp/>&gt;<sp/>0)<sp/>?<sp/>loc:self.length<sp/>-<sp/>labs(loc),</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)];</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Helper<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal">-<sp/>(NSSet*)unionOfCharactersInStrings:(NSString*)first<sp/>remaining:(va_list)va_list<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>NSMutableArray<sp/>*sets<sp/>=<sp/>[NSMutableArray<sp/>array];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>NSMutableSet<sp/>*negateSet<sp/>=<sp/>[NSMutableSet<sp/>set];</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSString<sp/>*arg<sp/>=<sp/>first;<sp/>arg!=nil;<sp/>arg<sp/>=<sp/>va_arg(va_list,<sp/>NSString*))<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>NSMutableSet<sp/>*argSet<sp/>=<sp/>[NSMutableSet<sp/>set];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*cleanedArg<sp/>=<sp/>[arg<sp/>stringByTrimmingCharactersInSet:[NSCharacterSet<sp/>whitespaceAndNewlineCharacterSet]];</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>unichar<sp/>*characters<sp/>=<sp/>calloc(cleanedArg.length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unichar));</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>[cleanedArg<sp/>getCharacters:characters];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(characters[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>1;<sp/>i&lt;cleanedArg.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[negateSet<sp/>addObject:[NSString<sp/>stringWithCharacters:&amp;characters[i]<sp/>length:1]];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>i<sp/>=<sp/>0;<sp/>i&lt;cleanedArg.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(characters[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSInteger<sp/>j<sp/>=<sp/>characters[i-1];<sp/>j&lt;characters[i+1];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar<sp/>c<sp/>=<sp/>(unichar)j;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[argSet<sp/>addObject:[NSString<sp/>stringWithCharacters:&amp;c<sp/>length:1]];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[argSet<sp/>addObject:[NSString<sp/>stringWithCharacters:&amp;characters[i]<sp/>length:1]];</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[sets<sp/>addObject:argSet];</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>free(characters);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>va_end(va_list);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>NSMutableSet<sp/>*comparisonSet<sp/>=<sp/>[sets<sp/>objectAtIndex:0];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(NSMutableSet<sp/>*set<sp/>in<sp/>sets)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>[comparisonSet<sp/>intersectSet:set];</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>[comparisonSet<sp/>minusSet:negateSet];</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparisonSet;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+Ruby.m"/>
  </compounddef>
</doxygen>
