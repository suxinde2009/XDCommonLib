<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="category_n_s_data_07zlib_08" kind="category" language="Objective-C" prot="public">
    <compoundname>NSData(zlib)</compoundname>
    <includes refid="_n_s_data_09zlib_8h" local="no">NSData+zlib.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="category_n_s_data_07zlib_08_1ad0c3b7412a5fe5ec943f7641ec3a3902" prot="protected" static="no" mutable="no">
        <type>NSString *const</type>
        <definition>NSString* const NSData(zlib)::BBSZlibErrorDomain</definition>
        <argsstring></argsstring>
        <name>BBSZlibErrorDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZLib error domain </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="8" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="category_n_s_data_07zlib_08_1ad4972cdd05a966e4c3f26003759396f1" prot="protected" static="no" mutable="no">
        <type>NSString *const</type>
        <definition>NSString* const NSData(zlib)::BBSZlibErrorInfoKey</definition>
        <argsstring></argsstring>
        <name>BBSZlibErrorInfoKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a zlib error occurs, querying this key in the <computeroutput>userInfo</computeroutput> dictionary of the <computeroutput>NSError</computeroutput> object will return the underlying zlib error code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="category_n_s_data_07zlib_08_1aad53404db1c3f099faa3564919f82108" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef NSData(zlib)::NS_ENUM</definition>
        <argsstring>(NSUInteger, BBSZlibErrorCode)</argsstring>
        <name>NS_ENUM</name>
        <param>
          <type>NSUInteger</type>
        </param>
        <param>
          <type>BBSZlibErrorCode</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" bodystart="15" bodyend="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="category_n_s_data_07zlib_08_1a4e5460066ea2a76fd37248e8d0f73796" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSData *</type>
        <definition>NSData * NSData(zlib)::bbs_dataByDeflatingWithError:</definition>
        <argsstring>(NSError *__autoreleasing *error)</argsstring>
        <name>bbs_dataByDeflatingWithError:</name>
        <param>
          <type>NSError *__autoreleasing *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply zlib compression.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during compression, upon return contains an NSError object describing the problem.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An NSData instance containing the result of applying zlib compression to this instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" bodystart="25" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_data_07zlib_08_1ab0ed22b94b183cd3b334d0581b9a17a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSData *</type>
        <definition>NSData * NSData(zlib)::bbs_dataByInflatingWithError:</definition>
        <argsstring>(NSError *__autoreleasing *error)</argsstring>
        <name>bbs_dataByInflatingWithError:</name>
        <param>
          <type>NSError *__autoreleasing *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply zlib decompression.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during decompression, upon return contains an NSError object describing the problem.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An NSData instance containing the result of applying zlib decompression to this instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_data_07zlib_08_1a5b1a022db6675997c52f5f7a99f5cc4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSData(zlib)::bbs_writeDeflatedToFile:error:</definition>
        <argsstring>(NSString *path,[error] NSError *__autoreleasing *error)</argsstring>
        <name>bbs_writeDeflatedToFile:error:</name>
        <param>
          <type>NSString *</type>
          <declname>path</declname>
        </param>
        <param>
          <attributes>[error]</attributes>
          <type>NSError *__autoreleasing *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply zlib compression and write the result to a file at path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path at which the file should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during compression, upon return contains an NSError object describing the problem.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>YES</computeroutput> if the compression succeeded; otherwise, <computeroutput>NO</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" bodystart="135" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_data_07zlib_08_1a48691a369102697bfdd372cdf4dd6190" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSData(zlib)::bbs_writeInflatedToFile:error:</definition>
        <argsstring>(NSString *path,[error] NSError *__autoreleasing *error)</argsstring>
        <name>bbs_writeInflatedToFile:error:</name>
        <param>
          <type>NSString *</type>
          <declname>path</declname>
        </param>
        <param>
          <attributes>[error]</attributes>
          <type>NSError *__autoreleasing *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply zlib decompression and write the result to a file at path</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path at which the file should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>If an error occurs during decompression, upon return contains an NSError object describing the problem.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>YES</computeroutput> if the compression succeeded; otherwise, <computeroutput>NO</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" bodystart="154" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" line="12" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSData/NSData+zlib.m" bodystart="12" bodyend="-1"/>
    <listofallmembers>
      <member refid="category_n_s_data_07zlib_08_1a4e5460066ea2a76fd37248e8d0f73796" prot="public" virt="virtual"><scope>NSData(zlib)</scope><name>bbs_dataByDeflatingWithError:</name></member>
      <member refid="category_n_s_data_07zlib_08_1ab0ed22b94b183cd3b334d0581b9a17a4" prot="public" virt="virtual"><scope>NSData(zlib)</scope><name>bbs_dataByInflatingWithError:</name></member>
      <member refid="category_n_s_data_07zlib_08_1a5b1a022db6675997c52f5f7a99f5cc4b" prot="public" virt="virtual"><scope>NSData(zlib)</scope><name>bbs_writeDeflatedToFile:error:</name></member>
      <member refid="category_n_s_data_07zlib_08_1a48691a369102697bfdd372cdf4dd6190" prot="public" virt="virtual"><scope>NSData(zlib)</scope><name>bbs_writeInflatedToFile:error:</name></member>
      <member refid="category_n_s_data_07zlib_08_1ad0c3b7412a5fe5ec943f7641ec3a3902" prot="protected" virt="non-virtual"><scope>NSData(zlib)</scope><name>BBSZlibErrorDomain</name></member>
      <member refid="category_n_s_data_07zlib_08_1ad4972cdd05a966e4c3f26003759396f1" prot="protected" virt="non-virtual"><scope>NSData(zlib)</scope><name>BBSZlibErrorInfoKey</name></member>
      <member refid="category_n_s_data_07zlib_08_1aad53404db1c3f099faa3564919f82108" prot="protected" virt="non-virtual"><scope>NSData(zlib)</scope><name>NS_ENUM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
