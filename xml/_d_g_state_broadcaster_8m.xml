<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_d_g_state_broadcaster_8m" kind="file" language="Objective-C">
    <compoundname>DGStateBroadcaster.m</compoundname>
    <includes refid="_d_g_state_broadcaster_8h" local="yes">DGStateBroadcaster.h</includes>
    <includes local="no">CoreLocation/CoreLocation.h</includes>
    <includes local="no">SystemConfiguration/SystemConfiguration.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">netinet6/in6.h</includes>
    <includes local="no">net/if.h</includes>
    <includes local="no">net/if_dl.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">ifaddrs.h</includes>
    <includes local="no">netdb.h</includes>
    <includes local="no">UIKit/UIKit.h</includes>
    <incdepgraph>
      <node id="3742">
        <label>netinet/in.h</label>
      </node>
      <node id="3748">
        <label>arpa/inet.h</label>
      </node>
      <node id="3746">
        <label>net/if.h</label>
      </node>
      <node id="3747">
        <label>net/if_dl.h</label>
      </node>
      <node id="3751">
        <label>UIKit/UIKit.h</label>
      </node>
      <node id="3750">
        <label>netdb.h</label>
      </node>
      <node id="3749">
        <label>ifaddrs.h</label>
      </node>
      <node id="3743">
        <label>SystemConfiguration/SystemConfiguration.h</label>
      </node>
      <node id="3741">
        <label>CoreLocation/CoreLocation.h</label>
      </node>
      <node id="3745">
        <label>netinet6/in6.h</label>
      </node>
      <node id="3740">
        <label>Foundation/Foundation.h</label>
      </node>
      <node id="3744">
        <label>sys/socket.h</label>
      </node>
      <node id="3739">
        <label>DGStateBroadcaster.h</label>
        <link refid="_d_g_state_broadcaster_8h"/>
        <childnode refid="3740" relation="include">
        </childnode>
        <childnode refid="3741" relation="include">
        </childnode>
        <childnode refid="3742" relation="include">
        </childnode>
      </node>
      <node id="3738">
        <label>XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m</label>
        <link refid="DGStateBroadcaster.m"/>
        <childnode refid="3739" relation="include">
        </childnode>
        <childnode refid="3741" relation="include">
        </childnode>
        <childnode refid="3743" relation="include">
        </childnode>
        <childnode refid="3744" relation="include">
        </childnode>
        <childnode refid="3745" relation="include">
        </childnode>
        <childnode refid="3746" relation="include">
        </childnode>
        <childnode refid="3747" relation="include">
        </childnode>
        <childnode refid="3748" relation="include">
        </childnode>
        <childnode refid="3749" relation="include">
        </childnode>
        <childnode refid="3750" relation="include">
        </childnode>
        <childnode refid="3751" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="category_d_g_state_broadcaster_07_08" prot="public">DGStateBroadcaster()</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_d_g_state_broadcaster_8m_1aa5b4ad1ac9efee23e10e7fd6271182b8" prot="public" static="no">
        <name>IS_OS_8_OR_LATER</name>
        <initializer>(UIDevice.currentDevice.systemVersion.floatValue &gt;= 8.f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m" line="45" column="9" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_d_g_state_broadcaster_8m_1acb65f7232c77e39577af79883a5df88d" prot="public" static="yes" mutable="no">
        <type>NSString *</type>
        <definition>NSString* s_DGStateBroadcaster_RechabilitySync</definition>
        <argsstring></argsstring>
        <name>s_DGStateBroadcaster_RechabilitySync</name>
        <initializer>= @&quot;s_DGStateBroadcaster_RechabilitySync&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m" line="295" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m" bodystart="295" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DGStateBroadcaster.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Daniel<sp/>Cohen<sp/>Gindi<sp/>on<sp/>5/8/13.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2013<sp/>danielgindi@gmail.com.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>https://github.com/danielgindi/DGStateBroadcaster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Daniel<sp/>Cohen<sp/>Gindi<sp/>(danielgindi@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_d_g_state_broadcaster_8h" kindref="compound">DGStateBroadcaster.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;CoreLocation/CoreLocation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;SystemConfiguration/SystemConfiguration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;netinet6/in6.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;net/if.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;net/if_dl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;ifaddrs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;UIKit/UIKit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_d_g_state_broadcaster_8m_1aa5b4ad1ac9efee23e10e7fd6271182b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_OS_8_OR_LATER<sp/>(UIDevice.currentDevice.systemVersion.floatValue<sp/>&gt;=<sp/>8.f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="category_d_g_state_broadcaster_07_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>()<sp/>&lt;CLLocationManagerDelegate&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>NSMutableArray<sp/>*delegates;</highlight></codeline>
<codeline lineno="50" refid="category_d_g_state_broadcaster_07_08_1aa60b90f4c52f17c7f745a62ff773de84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>CLLocationManager<sp/>*locationManager;</highlight></codeline>
<codeline lineno="52" refid="category_d_g_state_broadcaster_07_08_1a7084153c646d400cae492a3176e5625e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*locationPurpose;</highlight></codeline>
<codeline lineno="53" refid="category_d_g_state_broadcaster_07_08_1a51c8813a70c31cc1e75a30a0f56bfa7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CLActivityType<sp/>locationActivityType;</highlight></codeline>
<codeline lineno="54" refid="category_d_g_state_broadcaster_07_08_1ad32c6ea056d67a03c562c99f8aacda35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CLLocation<sp/>*lastLocation;</highlight></codeline>
<codeline lineno="55" refid="category_d_g_state_broadcaster_07_08_1a539e9af5933a27cc5e031263a6cbce2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isListeningToBattery;</highlight></codeline>
<codeline lineno="57" refid="category_d_g_state_broadcaster_07_08_1a32e7a0ade9b4416fd99d1be20b1bb5b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>batteryPercentageBar;</highlight></codeline>
<codeline lineno="58" refid="category_d_g_state_broadcaster_07_08_1aec03bc3b451b94de666c71b990f17f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>lastBatteryMessageLow;</highlight></codeline>
<codeline lineno="59" refid="category_d_g_state_broadcaster_07_08_1af4bcb76a4d28d390ca11c5b419f8f2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>lastBatteryMessageHigh;</highlight></codeline>
<codeline lineno="60" refid="category_d_g_state_broadcaster_07_08_1a6810a5324648abebbc2a3864e24dcd5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isListeningToDistanceTravelled;</highlight></codeline>
<codeline lineno="62" refid="category_d_g_state_broadcaster_07_08_1a6b6f85f9321f5b27782c67f585358d5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceMetersBar;</highlight></codeline>
<codeline lineno="63" refid="category_d_g_state_broadcaster_07_08_1a3fe9c5fefb578aedcbf89187819ca5fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isListeningToLocationAccuracy;</highlight></codeline>
<codeline lineno="65" refid="category_d_g_state_broadcaster_07_08_1a01928ccb60754dc49549def98bb68f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>locationAccuracyMetersBar;</highlight></codeline>
<codeline lineno="66" refid="category_d_g_state_broadcaster_07_08_1a58796685f3ddc7644e737a007d790ba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastLocationAccurateEnough;</highlight></codeline>
<codeline lineno="67" refid="category_d_g_state_broadcaster_07_08_1a27804407d69b51984c81db9dba5b0433" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isListeningToNetworkReachability;</highlight></codeline>
<codeline lineno="69" refid="category_d_g_state_broadcaster_07_08_1a41d58fdcf55a5d59eeb75da49ceab9d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SCNetworkReachabilityRef<sp/>reachabilityRef;</highlight></codeline>
<codeline lineno="70" refid="category_d_g_state_broadcaster_07_08_1a5422686916455a14625d163a4f8f5102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isReachabilityWifiOnly;</highlight></codeline>
<codeline lineno="71" refid="category_d_g_state_broadcaster_07_08_1ac1f604d3d1113a8e408a73ee9dd1168b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>reachabilityAddress;</highlight></codeline>
<codeline lineno="72" refid="category_d_g_state_broadcaster_07_08_1ac9c74e8653daf8dcac68f519d81dca0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>hasReachabilityAddress;</highlight></codeline>
<codeline lineno="73" refid="category_d_g_state_broadcaster_07_08_1a4b8f5a966c49184e04d1b14062883cd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*reachabilityHost;</highlight></codeline>
<codeline lineno="74" refid="category_d_g_state_broadcaster_07_08_1ad593f7db70d9fea113a33bc72d16e959" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_queue_t<sp/>reachabilityQueue;</highlight></codeline>
<codeline lineno="75" refid="category_d_g_state_broadcaster_07_08_1a7e6e16e798bfb7aaac071f4972f10a25" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref></highlight></codeline>
<codeline lineno="79" refid="class_d_g_state_broadcaster" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">-<sp/>(id)init</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>[</highlight><highlight class="keyword">super</highlight><highlight class="normal"><sp/>init];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">-<sp/>(void)dealloc</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>destroyReachability];</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">+<sp/>(<ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*)instance</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*sharedInstance<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>dispatch_once_t<sp/>onceToken;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_once(&amp;onceToken,<sp/>^{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance<sp/>=<sp/>[[<ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>alloc]<sp/>init];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;delegates<sp/>=<sp/>[[NSMutableArray<sp/>alloc]<sp/>init];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;batteryPercentageBar<sp/>=<sp/>.05f;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;distanceMetersBar<sp/>=<sp/>30.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationAccuracyMetersBar<sp/>=<sp/>500.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationManager<sp/>=<sp/>[[CLLocationManager<sp/>alloc]<sp/>init];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationManager.distanceFilter<sp/>=<sp/>kCLDistanceFilterNone;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationManager.desiredAccuracy<sp/>=<sp/>kCLLocationAccuracyBest;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationManager.headingFilter<sp/>=<sp/>kCLHeadingFilterNone;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationManager.delegate<sp/>=<sp/>sharedInstance;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;locationActivityType<sp/>=<sp/>CLActivityTypeOther;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedInstance-&gt;lastLocationAccurateEnough<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sharedInstance;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">+<sp/>(void)addDelegate:(__unsafe_unretained<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">&lt;<ref refid="protocol_d_g_state_broadcaster_delegate-p" kindref="compound">DGStateBroadcasterDelegate</ref>&gt;)delegate</highlight></codeline>
<codeline lineno="117" refid="class_d_g_state_broadcaster_1a73656cad6e736827752975777d190522" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(![NSThread<sp/>isMainThread])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_sync(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1a73656cad6e736827752975777d190522" kindref="member">addDelegate</ref>:delegate];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([instance-&gt;delegates<sp/>containsObject:delegate])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance-&gt;delegates<sp/>addObject:delegate];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>startUpdatingLocationIfNeeded];</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">+<sp/>(void)removeDelegate:(__unsafe_unretained<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">&lt;<ref refid="protocol_d_g_state_broadcaster_delegate-p" kindref="compound">DGStateBroadcasterDelegate</ref>&gt;)delegate</highlight></codeline>
<codeline lineno="134" refid="class_d_g_state_broadcaster_1aff9668b5b82f4dc161b7f0dc8a607e8e" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(![NSThread<sp/>isMainThread])</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_sync(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1aff9668b5b82f4dc161b7f0dc8a607e8e" kindref="member">removeDelegate</ref>:delegate];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance-&gt;delegates<sp/>removeObject:delegate];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance-&gt;delegates.count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stopUpdatingLocationIfNotNeeded];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">+<sp/>(void)<ref refid="class_d_g_state_broadcaster_1ab49ffdc5ebde1703272ffd7f8ceb8428" kindref="member">removeAllDelegates</ref></highlight></codeline>
<codeline lineno="152" refid="class_d_g_state_broadcaster_1ab49ffdc5ebde1703272ffd7f8ceb8428" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(![NSThread<sp/>isMainThread])</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_sync(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1ab49ffdc5ebde1703272ffd7f8ceb8428" kindref="member">removeAllDelegates</ref>];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance-&gt;delegates<sp/>removeAllObjects];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stopUpdatingLocationIfNotNeeded];</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">+<sp/>(void)startUpdatingLocationIfNeeded</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance-&gt;isListeningToDistanceTravelled<sp/>||<sp/>instance-&gt;isListeningToLocationAccuracy)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__IPHONE_OS_VERSION_MIN_REQUIRED<sp/>&lt;<sp/>60000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([instance-&gt;locationManager<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(setPurpose:)])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;locationManager.purpose<sp/>=<sp/>instance-&gt;locationPurpose;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([instance-&gt;locationManager<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(setActivityType:)])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;locationManager.activityType<sp/>=<sp/>instance-&gt;locationActivityType;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[instance-&gt;locationManager<sp/>startUpdatingLocation];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">+<sp/>(void)stopUpdatingLocationIfNotNeeded</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!instance-&gt;isListeningToDistanceTravelled<sp/>&amp;&amp;<sp/>!instance-&gt;isListeningToLocationAccuracy)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[instance-&gt;locationManager<sp/>stopUpdatingLocation];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">+<sp/>(void)startListeningTo:(<ref refid="_d_g_state_broadcaster_8h_1a872746871940aea21d181eef66a9fd3b" kindref="member">DGStateBroadcasterState</ref>)states</highlight></codeline>
<codeline lineno="195" refid="class_d_g_state_broadcaster_1a0b705b7a511af3db8259b4770fa34dcb" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fea85ef51e07e77cc1c92542920fc942f7c" kindref="member">DGStateBroadcasterLowBattery</ref>)<sp/>==<sp/>DGStateBroadcasterLowBattery)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!instance-&gt;isListeningToBattery)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSNotificationCenter<sp/>defaultCenter]<sp/>addObserver:instance</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selector:@selector(batteryLevelOrStateChanged:)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name:UIDeviceBatteryLevelDidChangeNotification<sp/>object:nil];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSNotificationCenter<sp/>defaultCenter]<sp/>addObserver:instance</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selector:@selector(batteryLevelOrStateChanged:)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name:UIDeviceBatteryStateDidChangeNotification<sp/>object:nil];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToBattery<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fead3da0225bb1f545ee1fa38fe40c643b6" kindref="member">DGStateBroadcasterDistanceTravelled</ref>)<sp/>==<sp/>DGStateBroadcasterDistanceTravelled<sp/>&amp;&amp;<sp/>!instance-&gt;isListeningToDistanceTravelled)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>startUpdatingLocationIfNeeded];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToDistanceTravelled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fea2f24a1a0fc791a334f235a389f5a099d" kindref="member">DGStateBroadcasterLocationAccuracy</ref>)<sp/>==<sp/>DGStateBroadcasterLocationAccuracy<sp/>&amp;&amp;<sp/>!instance-&gt;isListeningToLocationAccuracy)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>startUpdatingLocationIfNeeded];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToLocationAccuracy<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5feade23fe7e9c96bf2d6509b6d3d4776fe6" kindref="member">DGStateBroadcasterNetworkReachability</ref>)<sp/>==<sp/>DGStateBroadcasterNetworkReachability)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[instance<sp/>initReachabilityIfNeeded:NO];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToNetworkReachability<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">+<sp/>(void)stopListeningTo:(<ref refid="_d_g_state_broadcaster_8h_1a872746871940aea21d181eef66a9fd3b" kindref="member">DGStateBroadcasterState</ref>)states</highlight></codeline>
<codeline lineno="229" refid="class_d_g_state_broadcaster_1ab925a4c5f8faaabf8b97fbe0fc7e0a79" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fea85ef51e07e77cc1c92542920fc942f7c" kindref="member">DGStateBroadcasterLowBattery</ref>)<sp/>==<sp/>DGStateBroadcasterLowBattery)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSNotificationCenter<sp/>defaultCenter]<sp/>removeObserver:instance<sp/>name:UIDeviceBatteryLevelDidChangeNotification<sp/>object:nil];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[NSNotificationCenter<sp/>defaultCenter]<sp/>removeObserver:instance<sp/>name:UIDeviceBatteryStateDidChangeNotification<sp/>object:nil];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToBattery<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fead3da0225bb1f545ee1fa38fe40c643b6" kindref="member">DGStateBroadcasterDistanceTravelled</ref>)<sp/>==<sp/>DGStateBroadcasterDistanceTravelled<sp/>&amp;&amp;<sp/>instance-&gt;isListeningToDistanceTravelled)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToDistanceTravelled<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stopUpdatingLocationIfNotNeeded];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5fea2f24a1a0fc791a334f235a389f5a099d" kindref="member">DGStateBroadcasterLocationAccuracy</ref>)<sp/>==<sp/>DGStateBroadcasterLocationAccuracy<sp/>&amp;&amp;<sp/>instance-&gt;isListeningToLocationAccuracy)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToLocationAccuracy<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>stopUpdatingLocationIfNotNeeded];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;lastLocationAccurateEnough<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((states<sp/>&amp;<sp/><ref refid="_d_g_state_broadcaster_8h_1a4766155ac4039a00e682b4a297c6f5feade23fe7e9c96bf2d6509b6d3d4776fe6" kindref="member">DGStateBroadcasterNetworkReachability</ref>)<sp/>==<sp/>DGStateBroadcasterNetworkReachability)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[instance<sp/>destroyReachability];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance-&gt;isListeningToNetworkReachability<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">+<sp/>(void)<ref refid="class_d_g_state_broadcaster_1a1ce92b6c7f62c9c26e12a5aa43e84ef7" kindref="member">stopListeningToAllStates</ref></highlight></codeline>
<codeline lineno="257" refid="class_d_g_state_broadcaster_1a1ce92b6c7f62c9c26e12a5aa43e84ef7" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1ab925a4c5f8faaabf8b97fbe0fc7e0a79" kindref="member">stopListeningTo</ref>:DGStateBroadcasterLowBattery<sp/>|<sp/>DGStateBroadcasterDistanceTravelled<sp/>|<sp/>DGStateBroadcasterNetworkReachability];</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">+<sp/>(void)startListeningToLowBatteryWithBar:(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)batteryCharge</highlight></codeline>
<codeline lineno="262" refid="class_d_g_state_broadcaster_1a8906d1f57e9f36cff1d92f8288cb9d3b" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;batteryPercentageBar<sp/>=<sp/>batteryCharge;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1a0b705b7a511af3db8259b4770fa34dcb" kindref="member">startListeningTo</ref>:DGStateBroadcasterLowBattery];</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">+<sp/>(void)startListeningToDistanceTravelledWithBarInMeters:(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)distanceMetersBar</highlight></codeline>
<codeline lineno="268" refid="class_d_g_state_broadcaster_1a29ba93de92b4a82c872a3ca2dfd3e62b" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;distanceMetersBar<sp/>=<sp/>distanceMetersBar;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1a0b705b7a511af3db8259b4770fa34dcb" kindref="member">startListeningTo</ref>:DGStateBroadcasterDistanceTravelled];</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">+<sp/>(void)startListeningToLocationAccuracyWithBarInMeters:(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)meters</highlight></codeline>
<codeline lineno="274" refid="class_d_g_state_broadcaster_1a176b26b8f42fb6de563a7956e1098db4" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;locationAccuracyMetersBar<sp/>=<sp/>meters;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="class_d_g_state_broadcaster_1a0b705b7a511af3db8259b4770fa34dcb" kindref="member">startListeningTo</ref>:DGStateBroadcasterLocationAccuracy];</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">+<sp/>(void)setDistanceTravelledBarInMeters:(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)meters</highlight></codeline>
<codeline lineno="280" refid="class_d_g_state_broadcaster_1acd4f3bb145fe76083de883dad5f1c636" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;distanceMetersBar<sp/>=<sp/>meters;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">+<sp/>(void)setLocationAccuracyBarInMeters:(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)meters</highlight></codeline>
<codeline lineno="285" refid="class_d_g_state_broadcaster_1aaf6ae6a45f8e9809ce354e60ce947b88" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;locationAccuracyMetersBar<sp/>=<sp/>meters;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">+<sp/>(void)setLowBatteryBar:(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)batteryCharge</highlight></codeline>
<codeline lineno="290" refid="class_d_g_state_broadcaster_1a44af816ab7b71b952f1208907d9cff47" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;batteryPercentageBar<sp/>=<sp/>batteryCharge;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NSString<sp/>*s_DGStateBroadcaster_RechabilitySync<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;s_DGStateBroadcaster_RechabilitySync&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">-<sp/>(void)initReachabilityIfNeeded:(BOOL)force</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>@</highlight><highlight class="keyword">synchronized</highlight><highlight class="normal">(s_DGStateBroadcaster_RechabilitySync)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reachabilityRef<sp/>&amp;&amp;<sp/>!force)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reachabilityRef)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(reachabilityRef);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachabilityRef<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reachabilityHost.length)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachabilityRef<sp/>=<sp/>SCNetworkReachabilityCreateWithName(NULL,<sp/>reachabilityHost.UTF8String);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>addr;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasReachabilityAddress)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>reachabilityAddress;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isReachabilityWifiOnly)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero(&amp;addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.sin_len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.sin_family<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IN_LINKLOCALNETNUM<sp/>is<sp/>defined<sp/>in<sp/>&lt;netinet/in.h&gt;<sp/>as<sp/>169.254.0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.sin_addr.s_addr<sp/><sp/><sp/><sp/>=<sp/>htonl(IN_LINKLOCALNETNUM);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero(&amp;addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.sin_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachabilityRef<sp/>=<sp/>SCNetworkReachabilityCreateWithAddress(kCFAllocatorDefault,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;addr);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reachabilityQueue)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachabilityQueue<sp/>=<sp/>dispatch_queue_create(</highlight><highlight class="stringliteral">&quot;DGStateBroadcaster-reachability&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCNetworkReachabilityContext<sp/>context<sp/>=<sp/>{<sp/>0,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.info<sp/>=<sp/>(__bridge<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SCNetworkReachabilitySetCallback(reachabilityRef,<sp/>DGStateBroadcaster_ReachabilityCallback,<sp/>&amp;context))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>it<sp/>as<sp/>our<sp/>reachability<sp/>queue<sp/>which<sp/>will<sp/>retain<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SCNetworkReachabilitySetDispatchQueue(reachabilityRef,<sp/>reachabilityQueue))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;DGStateBroadcaster:<sp/>Reachability-<sp/>can&apos;t<sp/>set<sp/>dispatch<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCNetworkReachabilitySetCallback(reachabilityRef,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;DGStateBroadcaster:<sp/>Reachability-<sp/>can&apos;t<sp/>set<sp/>callback!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">-<sp/>(void)destroyReachability</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reachabilityRef)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>@</highlight><highlight class="keyword">synchronized</highlight><highlight class="normal">(s_DGStateBroadcaster_RechabilitySync)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(reachabilityRef);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachabilityRef<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DGStateBroadcaster_ReachabilityCallback(SCNetworkReachabilityRef<sp/>target,<sp/>SCNetworkReachabilityFlags<sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*info)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>unused<sp/>(target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*_self<sp/>=<sp/>((__bridge<sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*)info);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>[_self<sp/>reachabilityChanged:flags];</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">-<sp/>(void)reachabilityChanged:(SCNetworkReachabilityFlags)flags</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>reachable<sp/>=<sp/>((flags<sp/>&amp;<sp/>kSCNetworkFlagsReachable)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>needsConnection<sp/>=<sp/>((flags<sp/>&amp;<sp/>kSCNetworkFlagsConnectionRequired)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>reachable<sp/>=<sp/>reachable<sp/>&amp;&amp;<sp/>!needsConnection;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*wifiAddress<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.class.<ref refid="class_d_g_state_broadcaster_1a86baf2bfe6eb6a88496287f5cdc2fa05" kindref="member">wifiIpAddress</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isReachableOnWifi<sp/>=<sp/>!!wifiAddress.length;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_async(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterNetworkReachable:isOnWifi:)])</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1ab8775d2c75deae7aeff463125806fd88" kindref="member">stateBroadcasterNetworkReachable</ref>:reachable<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1ab8775d2c75deae7aeff463125806fd88" kindref="member">isOnWifi</ref>:isReachableOnWifi];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">+<sp/>(BOOL)isReachable</highlight></codeline>
<codeline lineno="402" refid="class_d_g_state_broadcaster_1a971febf159559c0576a0af8c02a9c9a0" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance-&gt;reachabilityRef)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCNetworkReachabilityFlags<sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SCNetworkReachabilityGetFlags(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;reachabilityRef,<sp/>&amp;flags))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>reachable<sp/>=<sp/>((flags<sp/>&amp;<sp/>kSCNetworkFlagsReachable)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>needsConnection<sp/>=<sp/>((flags<sp/>&amp;<sp/>kSCNetworkFlagsConnectionRequired)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachable<sp/>=<sp/>reachable<sp/>&amp;&amp;<sp/>!needsConnection;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reachable;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">+<sp/>(BOOL)isOnWifi</highlight></codeline>
<codeline lineno="424" refid="class_d_g_state_broadcaster_1a6bffd6e5504ce0850f42c88c2ba0a9ae" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*wifiAddress<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="class_d_g_state_broadcaster_1a86baf2bfe6eb6a88496287f5cdc2fa05" kindref="member">wifiIpAddress</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!wifiAddress.length;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">+<sp/>(NSString<sp/>*)wifiIpAddress</highlight></codeline>
<codeline lineno="430" refid="class_d_g_state_broadcaster_1a86baf2bfe6eb6a88496287f5cdc2fa05" refkind="member"><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>Thanks<sp/>to<sp/>Matt<sp/>Brown!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>success;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ifaddrs<sp/>*addrs;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ifaddrs<sp/>*cursor;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>getifaddrs(&amp;addrs)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>addrs;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cursor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cursor-&gt;ifa_addr-&gt;sa_family<sp/>==<sp/>AF_INET<sp/>&amp;&amp;<sp/>(cursor-&gt;ifa_flags<sp/>&amp;<sp/>IFF_LOOPBACK)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>this<sp/>second<sp/>test<sp/>keeps<sp/>from<sp/>picking<sp/>up<sp/>the<sp/>loopback<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSString<sp/>*name<sp/>=<sp/>[NSString<sp/>stringWithUTF8String:cursor-&gt;ifa_name];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([name<sp/>isEqualToString:</highlight><highlight class="stringliteral">@&quot;en0&quot;</highlight><highlight class="normal">])<sp/></highlight><highlight class="comment">//<sp/>found<sp/>the<sp/>WiFi<sp/>adapter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithUTF8String:inet_ntoa(((struct<sp/>sockaddr_in<sp/>*)cursor-&gt;ifa_addr)-&gt;sin_addr)];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>cursor-&gt;ifa_next;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeifaddrs(addrs);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">+<sp/>(void)setReachabilityWithHostname:(NSString<sp/>*)hostname</highlight></codeline>
<codeline lineno="458" refid="class_d_g_state_broadcaster_1aa3b49809af867b169ebc8ea1f2c402d5" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;hasReachabilityAddress<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;reachabilityHost<sp/>=<sp/>hostname;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;isReachabilityWifiOnly<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance<sp/>initReachabilityIfNeeded:YES];</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">+<sp/>(void)setReachabilityWithAddress:(const<sp/>struct<sp/>sockaddr_in<sp/>*)hostAddress</highlight></codeline>
<codeline lineno="467" refid="class_d_g_state_broadcaster_1a661b77eed42a1692a2100a35e144464b" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;reachabilityAddress<sp/>=<sp/>*hostAddress;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;hasReachabilityAddress<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;reachabilityHost<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;isReachabilityWifiOnly<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance<sp/>initReachabilityIfNeeded:YES];</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">+<sp/>(void)setReachabilityForInternetConnection</highlight></codeline>
<codeline lineno="477" refid="class_d_g_state_broadcaster_1a7d477939a91324b780b1d540dd670b32" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;hasReachabilityAddress<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;reachabilityHost<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;isReachabilityWifiOnly<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance<sp/>initReachabilityIfNeeded:YES];</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">+<sp/>(void)setReachabilityForWifiInternetConnection</highlight></codeline>
<codeline lineno="486" refid="class_d_g_state_broadcaster_1a63d9a4499826bd7bd04a72a40569935c" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;hasReachabilityAddress<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;reachabilityHost<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;isReachabilityWifiOnly<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>[instance<sp/>initReachabilityIfNeeded:YES];</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__IPHONE_OS_VERSION_MIN_REQUIRED<sp/>&lt;<sp/>60000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">+<sp/>(void)setLocationPurpose:(NSString<sp/>*)purpose</highlight></codeline>
<codeline lineno="496" refid="class_d_g_state_broadcaster_1a16a29c896bf527bee983c8e11245e1b2" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;locationPurpose<sp/>=<sp/>[purpose<sp/>copy];</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">+<sp/>(void)setLocationActivityType:(CLActivityType)activityType</highlight></codeline>
<codeline lineno="503" refid="class_d_g_state_broadcaster_1a8f84546ac797f0ba385449067f89cebf" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance-&gt;locationActivityType<sp/>=<sp/>activityType;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">+<sp/>(void)requestLocationWhenInUseAuthorization</highlight></codeline>
<codeline lineno="508" refid="class_d_g_state_broadcaster_1a4ff98f39f79324ea47eaa248116ec4bd" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_d_g_state_broadcaster_8m_1aa5b4ad1ac9efee23e10e7fd6271182b8" kindref="member">IS_OS_8_OR_LATER</ref>)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>instance]-&gt;locationManager<sp/>requestWhenInUseAuthorization];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">+<sp/>(void)requestLocationAlwaysAuthorization</highlight></codeline>
<codeline lineno="516" refid="class_d_g_state_broadcaster_1a2af18e89b5babebe58ac7bc534023f33" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_d_g_state_broadcaster_8m_1aa5b4ad1ac9efee23e10e7fd6271182b8" kindref="member">IS_OS_8_OR_LATER</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>instance]-&gt;locationManager<sp/>requestAlwaysAuthorization];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">+<sp/>(CLAuthorizationStatus)locationAuthorizationStatus</highlight></codeline>
<codeline lineno="524" refid="class_d_g_state_broadcaster_1ab545fcedfbb1b3a60a48d4ec9e578ed8" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CLLocationManager.authorizationStatus;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">+<sp/>(BOOL)isBatteryCurrentlyLow</highlight></codeline>
<codeline lineno="529" refid="class_d_g_state_broadcaster_1a9627aa20571164781e2fb0bab5e90131" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_g_state_broadcaster" kindref="compound">DGStateBroadcaster</ref><sp/>*instance<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.instance;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>enabled<sp/>=<sp/>UIDevice.currentDevice.batteryMonitoringEnabled;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>ret<sp/>=<sp/>UIDevice.currentDevice.batteryLevel<sp/>&lt;=<sp/>instance-&gt;batteryPercentageBar;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">+<sp/>(BOOL)isBatteryCurrentlyCharging</highlight></codeline>
<codeline lineno="542" refid="class_d_g_state_broadcaster_1ab28afc3c1c3cc97513cbfb9e0ccb97c3" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>enabled<sp/>=<sp/>UIDevice.currentDevice.batteryMonitoringEnabled;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>ret<sp/>=<sp/>UIDevice.currentDevice.batteryState<sp/>==<sp/>UIDeviceBatteryStateCharging;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">+<sp/>(float)currentBatteryLevel</highlight></codeline>
<codeline lineno="554" refid="class_d_g_state_broadcaster_1a8b0e0b72b4f57cae2528f1db41ca2ca5" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>enabled<sp/>=<sp/>UIDevice.currentDevice.batteryMonitoringEnabled;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enabled)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>UIDevice.currentDevice.batteryLevel;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>UIDevice.currentDevice.batteryMonitoringEnabled<sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>Notifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">-<sp/>(void)batteryLevelOrStateChanged:(NSNotification<sp/>*)notification</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>batteryLevel<sp/>=<sp/>UIDevice.currentDevice.batteryLevel;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>isCharging<sp/>=<sp/>UIDevice.currentDevice.batteryState<sp/>==<sp/>UIDeviceBatteryStateCharging;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(batteryLevel<sp/>&lt;=<sp/>batteryPercentageBar)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lastBatteryMessageLow)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_async(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterBatteryChargedLow:charging:)])</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a18b1dff1ea4e7118a490dcf1e84b0e5a" kindref="member">stateBroadcasterBatteryChargedLow</ref>:YES<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a18b1dff1ea4e7118a490dcf1e84b0e5a" kindref="member">charging</ref>:isCharging];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastBatteryMessageLow<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastBatteryMessageHigh<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lastBatteryMessageHigh)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NSMutableArray<sp/>is<sp/>NOT<sp/>threadsafe!<sp/>So<sp/>only<sp/>work<sp/>with<sp/>the<sp/>delegates<sp/>on<sp/>main<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatch_async(dispatch_get_main_queue(),<sp/>^{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterBatteryChargedLow:charging:)])</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a18b1dff1ea4e7118a490dcf1e84b0e5a" kindref="member">stateBroadcasterBatteryChargedLow</ref>:NO<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a18b1dff1ea4e7118a490dcf1e84b0e5a" kindref="member">charging</ref>:isCharging];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastBatteryMessageHigh<sp/>=<sp/>YES;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastBatteryMessageLow<sp/>=<sp/>NO;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>CLLocationManagerDelegate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>know<sp/>that<sp/>CLLocationManager<sp/>only<sp/>works<sp/>on<sp/>the<sp/>main<sp/>thread,<sp/>so<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>dispatch<sp/>to<sp/>main<sp/>queue<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">-<sp/>(void)<sp/><sp/><sp/><sp/>locationManager:(CLLocationManager<sp/>*)manager</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>didUpdateToLocation:(CLLocation<sp/>*)newLocation</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromLocation:(CLLocation<sp/>*)oldLocation</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isListeningToDistanceTravelled<sp/>&amp;&amp;<sp/>(!lastLocation<sp/>||<sp/>[lastLocation<sp/>distanceFromLocation:newLocation]<sp/>&gt;<sp/>distanceMetersBar))</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLocation<sp/>=<sp/>newLocation;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterDistanceTravelledToLocation:)])</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a42f5f12c2586610be64cb7221d12f9fa" kindref="member">stateBroadcasterDistanceTravelledToLocation</ref>:newLocation];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isListeningToLocationAccuracy)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>isAccurateEnough<sp/>=<sp/>newLocation.horizontalAccuracy<sp/>&lt;<sp/>locationAccuracyMetersBar;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastLocationAccurateEnough<sp/>==<sp/>-1<sp/>||<sp/>isAccurateEnough<sp/>!=<sp/>lastLocationAccurateEnough)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastLocationAccurateEnough<sp/>=<sp/>isAccurateEnough;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterLocationAccurateEnough:)])</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1ac7d71fe8809d89811160bc036c480339" kindref="member">stateBroadcasterLocationAccurateEnough</ref>:isAccurateEnough];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">-<sp/>(void)locationManager:(CLLocationManager<sp/>*)manager<sp/>didChangeAuthorizationStatus:(CLAuthorizationStatus)status</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(id&lt;DGStateBroadcasterDelegate&gt;<sp/>delegate<sp/>in<sp/>delegates)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([delegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(stateBroadcasterLocationManagerDidChangeAuthorizationStatus:)])</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[delegate<sp/><ref refid="protocol_d_g_state_broadcaster_delegate-p_1a06b007500913f0102c4dc63ea920ec10" kindref="member">stateBroadcasterLocationManagerDidChangeAuthorizationStatus</ref>:status];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/LooseCoupling CommuniateLayer/StateBroadcaster/DGStateBroadcaster.m"/>
  </compounddef>
</doxygen>
