<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_u_i_view_09_gesture_callback_8m" kind="file" language="Objective-C">
    <compoundname>UIView+GestureCallback.m</compoundname>
    <includes refid="_u_i_view_09_gesture_callback_8h" local="yes">UIView+GestureCallback.h</includes>
    <includes local="no">objc/runtime.h</includes>
    <incdepgraph>
      <node id="2009">
        <label>UIKit/UIKit.h</label>
      </node>
      <node id="2010">
        <label>objc/runtime.h</label>
      </node>
      <node id="2008">
        <label>UIView+GestureCallback.h</label>
        <link refid="_u_i_view_09_gesture_callback_8h"/>
        <childnode refid="2009" relation="include">
        </childnode>
      </node>
      <node id="2007">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m</label>
        <link refid="UIView+GestureCallback.m"/>
        <childnode refid="2008" relation="include">
        </childnode>
        <childnode refid="2010" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_u_i_view_09_gesture_callback_8m_1a42818d3ad749dea25d5af5258d89c045" prot="public" static="no" mutable="no">
        <type>const NSString *</type>
        <definition>const NSString* UIView_GestureCallback_gesturesKey</definition>
        <argsstring></argsstring>
        <name>UIView_GestureCallback_gesturesKey</name>
        <initializer>= @&quot;UIView_GestureCallback_gesturesKey&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m" line="11" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_u_i_view_09_gesture_callback_8m_1a27a8e1d7cb05e39e95da5d306af95eb4" prot="public" static="no" mutable="no">
        <type>const NSString *</type>
        <definition>const NSString* UIView_GestureCallback_gestureKeysHashKey</definition>
        <argsstring></argsstring>
        <name>UIView_GestureCallback_gestureKeysHashKey</name>
        <initializer>= @&quot;UIView_GestureCallback_gestureKeysHashKey&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m" line="12" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>UIView+GestureCallback.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Onur<sp/>Ersel<sp/>on<sp/>01/07/15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015<sp/>Onur<sp/>Ersel.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_u_i_view_09_gesture_callback_8h" kindref="compound">UIView+GestureCallback.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;objc/runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_u_i_view_09_gesture_callback_8m_1a42818d3ad749dea25d5af5258d89c045" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NSString<sp/>*<ref refid="_u_i_view_09_gesture_callback_8m_1a42818d3ad749dea25d5af5258d89c045" kindref="member">UIView_GestureCallback_gesturesKey</ref><sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;UIView_GestureCallback_gesturesKey&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="_u_i_view_09_gesture_callback_8m_1a27a8e1d7cb05e39e95da5d306af95eb4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NSString<sp/>*<ref refid="_u_i_view_09_gesture_callback_8m_1a27a8e1d7cb05e39e95da5d306af95eb4" kindref="member">UIView_GestureCallback_gestureKeysHashKey</ref><sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;UIView_GestureCallback_gestureKeysHashKey&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_gesture_callback_values" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">@synthesize</highlight><highlight class="normal"><sp/><ref refid="class_gesture_callback_values_1ab6f34b1a8158289afa01c4b6762d092d" kindref="member">tapCallback</ref>,<sp/><ref refid="class_gesture_callback_values_1a4cf7dcdea1a24962994b22ef04b4c700" kindref="member">pinchCallback</ref>,<sp/><ref refid="class_gesture_callback_values_1ad7ef764fdf56e8c655cf43940e725181" kindref="member">panCallback</ref>,<sp/><ref refid="class_gesture_callback_values_1abf3056517356bcf32d90c118d0728f95" kindref="member">swipeCallback</ref>,<sp/><ref refid="class_gesture_callback_values_1a08a3281d889ecad37cdd3b8966dc9854" kindref="member">rotationCallback</ref>,<sp/><ref refid="class_gesture_callback_values_1ace23d8b66672fdd5aa43e7bee8ec6978" kindref="member">longPressCallback</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">@synthesize</highlight><highlight class="normal"><sp/><ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/><ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="category_u_i_view_07_gesture_callback_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_view_07_gesture_callback_08" kindref="compound">UIView (GestureCallback)</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">@dynamic<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref>,<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ad2936953b4e51857be46ea5154a2c6c3" kindref="member">gestureKeysHash</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>TAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>add<sp/>tap<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="category_u_i_view_07_gesture_callback_08_1a4ae8e1d92daef6b360292f074c7e3757" refkind="member"><highlight class="normal">-<sp/>(NSString*)addTapGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UITapGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))tapCallback</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1aa1f55b7aa56d386f56f7ac1be30d4b27" kindref="member">addTapGestureRecognizer</ref>:tapCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1aa1f55b7aa56d386f56f7ac1be30d4b27" kindref="member">tapGestureId</ref>:rand];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="category_u_i_view_07_gesture_callback_08_1a34fc0cd0b20d7771c60d7b1f6f9bf2c7" refkind="member"><highlight class="normal">-<sp/>(NSString*)addTapGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UITapGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))tapCallback<sp/><sp/>numberOfTapsRequired:(NSUInteger)numberOfTapsRequired<sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">addTapGestureRecognizer</ref>:tapCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">tapGestureId</ref>:rand<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">numberOfTapsRequired</ref>:numberOfTapsRequired<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">numberOfTouchesRequired</ref>:numberOfTouchesRequired];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="category_u_i_view_07_gesture_callback_08_1aa1f55b7aa56d386f56f7ac1be30d4b27" refkind="member"><highlight class="normal">-<sp/>(void)addTapGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UITapGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))tapCallback<sp/><sp/>tapGestureId:(NSString*)tapGestureId</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">addTapGestureRecognizer</ref>:tapCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">tapGestureId</ref>:tapGestureId<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">numberOfTapsRequired</ref>:1<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" kindref="member">numberOfTouchesRequired</ref>:1];</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="category_u_i_view_07_gesture_callback_08_1a127e102c9b36c139086b0c673a60b188" refkind="member"><highlight class="normal">-<sp/>(void)addTapGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UITapGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))tapCallback<sp/><sp/>tapGestureId:(NSString*)tapGestureId<sp/><sp/>numberOfTapsRequired:(NSUInteger)numberOfTapsRequired<sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:tapGestureId];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1af675cc7665de4e050289d90b88694011" kindref="member">removeTapGesture</ref>:tapGestureId];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>UITapGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UITapGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(tapHandler:)];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.numberOfTapsRequired<sp/>=<sp/>numberOfTapsRequired;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.numberOfTouchesRequired<sp/>=<sp/>numberOfTouchesRequired;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ab6f34b1a8158289afa01c4b6762d092d" kindref="member">tapCallback</ref><sp/>=<sp/>tapCallback;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>tapGestureId;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:tapGestureId];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>tap<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="category_u_i_view_07_gesture_callback_08_1af675cc7665de4e050289d90b88694011" refkind="member"><highlight class="normal">-<sp/>(void)removeTapGesture:(NSString*)tapGestureId</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:tapGestureId];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:tapGestureId];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="category_u_i_view_07_gesture_callback_08_1a2e6ad2b3e5d3f91e46bff032dfe12b0a" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1a2e6ad2b3e5d3f91e46bff032dfe12b0a" kindref="member">removeAllTapGestures</ref></highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UITapGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1af675cc7665de4e050289d90b88694011" kindref="member">removeTapGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>tap<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="category_u_i_view_07_gesture_callback_08_1a44e284b4d0cfcc09bdfea927b3034b65" refkind="member"><highlight class="normal">-<sp/>(void)tapHandler:(UITapGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1ab6f34b1a8158289afa01c4b6762d092d" kindref="member">tapCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ab6f34b1a8158289afa01c4b6762d092d" kindref="member">tapCallback</ref>((UITapGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>PINCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>add<sp/>pinch<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="category_u_i_view_07_gesture_callback_08_1a43adfe3f92b8dcd4b22f83a0925d9fe7" refkind="member"><highlight class="normal">-<sp/>(NSString*)addPinchGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIPinchGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))pinchCallback</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1abe6e0ffe99659079c8b0fc28c7534d58" kindref="member">addPinchGestureRecognizer</ref>:pinchCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1abe6e0ffe99659079c8b0fc28c7534d58" kindref="member">pinchGestureId</ref>:rand];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="category_u_i_view_07_gesture_callback_08_1abe6e0ffe99659079c8b0fc28c7534d58" refkind="member"><highlight class="normal">-<sp/>(void)addPinchGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIPinchGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))pinchCallback<sp/><sp/>pinchGestureId:(NSString*)pinchGestureId</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:pinchGestureId];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1aea9eb23f0c7a40c1ad844906483c846e" kindref="member">removePinchGesture</ref>:pinchGestureId];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>UIPinchGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UIPinchGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(pinchHandler:)];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a4cf7dcdea1a24962994b22ef04b4c700" kindref="member">pinchCallback</ref><sp/>=<sp/>pinchCallback;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>pinchGestureId;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:pinchGestureId];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>pinch<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="category_u_i_view_07_gesture_callback_08_1aea9eb23f0c7a40c1ad844906483c846e" refkind="member"><highlight class="normal">-<sp/>(void)removePinchGesture:(NSString*)pinchGestureId</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:pinchGestureId];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:pinchGestureId];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="category_u_i_view_07_gesture_callback_08_1a3e1d462420c50b25a8e0d40b262dab32" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1a3e1d462420c50b25a8e0d40b262dab32" kindref="member">removeAllPinchGestures</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UIPinchGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1aea9eb23f0c7a40c1ad844906483c846e" kindref="member">removePinchGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>pinch<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="category_u_i_view_07_gesture_callback_08_1a6122cbf01712137d113dddd916a9773d" refkind="member"><highlight class="normal">-<sp/>(void)pinchHandler:(UIPinchGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1a4cf7dcdea1a24962994b22ef04b4c700" kindref="member">pinchCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a4cf7dcdea1a24962994b22ef04b4c700" kindref="member">pinchCallback</ref>((UIPinchGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>PAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>add<sp/>pan<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="category_u_i_view_07_gesture_callback_08_1afad468148e88f7047a611f0e0334cfe0" refkind="member"><highlight class="normal">-<sp/>(NSString*)addPanGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIPanGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))panCallback</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e109624933bc6a31343c6bb72e3cb0a" kindref="member">addPanGestureRecognizer</ref>:panCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e109624933bc6a31343c6bb72e3cb0a" kindref="member">minimumNumberOfTouches</ref>:1<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e109624933bc6a31343c6bb72e3cb0a" kindref="member">maximumNumberOfTouches</ref>:NSUIntegerMax];</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202" refid="category_u_i_view_07_gesture_callback_08_1a7e109624933bc6a31343c6bb72e3cb0a" refkind="member"><highlight class="normal">-<sp/>(NSString*)addPanGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIPanGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))panCallback<sp/><sp/>minimumNumberOfTouches:(NSUInteger)minimumNumberOfTouches<sp/><sp/>maximumNumberOfTouches:(NSUInteger)maximumNumberOfTouches</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a6b361c82b10ddd446de1cdd160ea6c14" kindref="member">addPanGestureRecognizer</ref>:panCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a6b361c82b10ddd446de1cdd160ea6c14" kindref="member">panGestureId</ref>:rand<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a6b361c82b10ddd446de1cdd160ea6c14" kindref="member">minimumNumberOfTouches</ref>:minimumNumberOfTouches<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a6b361c82b10ddd446de1cdd160ea6c14" kindref="member">maximumNumberOfTouches</ref>:maximumNumberOfTouches];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="category_u_i_view_07_gesture_callback_08_1a6b361c82b10ddd446de1cdd160ea6c14" refkind="member"><highlight class="normal">-<sp/>(void)addPanGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIPanGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))panCallback<sp/><sp/>panGestureId:(NSString*)panGestureId<sp/><sp/>minimumNumberOfTouches:(NSUInteger)minimumNumberOfTouches<sp/><sp/>maximumNumberOfTouches:(NSUInteger)maximumNumberOfTouches</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:panGestureId];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ac8306ae72729a3d57de49d1e9b5c5d67" kindref="member">removePanGesture</ref>:panGestureId];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>UIPanGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UIPanGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(panHandler:)];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.minimumNumberOfTouches<sp/>=<sp/>minimumNumberOfTouches;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.maximumNumberOfTouches<sp/>=<sp/>maximumNumberOfTouches;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ad7ef764fdf56e8c655cf43940e725181" kindref="member">panCallback</ref><sp/>=<sp/>panCallback;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>panGestureId;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:panGestureId];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>pan<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="category_u_i_view_07_gesture_callback_08_1ac8306ae72729a3d57de49d1e9b5c5d67" refkind="member"><highlight class="normal">-<sp/>(void)removePanGesture:(NSString*)panGestureId</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:panGestureId];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:panGestureId];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="category_u_i_view_07_gesture_callback_08_1a1012bb9e36832f7709d57c53ef87d80f" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1a1012bb9e36832f7709d57c53ef87d80f" kindref="member">removeAllPanGestures</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UIPanGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ac8306ae72729a3d57de49d1e9b5c5d67" kindref="member">removePanGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>pan<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="category_u_i_view_07_gesture_callback_08_1a6d8b135863cf4012a39af5a4f610efd7" refkind="member"><highlight class="normal">-<sp/>(void)panHandler:(UIPanGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1ad7ef764fdf56e8c655cf43940e725181" kindref="member">panCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ad7ef764fdf56e8c655cf43940e725181" kindref="member">panCallback</ref>((UIPanGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>SWIPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="category_u_i_view_07_gesture_callback_08_1a3f9513cfe534eef7c934c54dabb17627" refkind="member"><highlight class="normal">-<sp/>(NSString*)addSwipeGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UISwipeGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))swipeCallback<sp/><sp/>direction:(UISwipeGestureRecognizerDirection)direction</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e357d93e3c901ad15bd5f955d1e05bb" kindref="member">addSwipeGestureRecognizer</ref>:swipeCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e357d93e3c901ad15bd5f955d1e05bb" kindref="member">direction</ref>:direction<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a7e357d93e3c901ad15bd5f955d1e05bb" kindref="member">numberOfTouchesRequired</ref>:1];</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="category_u_i_view_07_gesture_callback_08_1a7e357d93e3c901ad15bd5f955d1e05bb" refkind="member"><highlight class="normal">-<sp/>(NSString*)addSwipeGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UISwipeGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))swipeCallback<sp/><sp/>direction:(UISwipeGestureRecognizerDirection)direction<sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a94b8f28741fa34822fe270254d518903" kindref="member">addSwipeGestureRecognizer</ref>:swipeCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a94b8f28741fa34822fe270254d518903" kindref="member">swipeGestureId</ref>:rand<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a94b8f28741fa34822fe270254d518903" kindref="member">direction</ref>:direction<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a94b8f28741fa34822fe270254d518903" kindref="member">numberOfTouchesRequired</ref>:numberOfTouchesRequired];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="category_u_i_view_07_gesture_callback_08_1a94b8f28741fa34822fe270254d518903" refkind="member"><highlight class="normal">-<sp/>(void)addSwipeGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UISwipeGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))swipeCallback<sp/><sp/>swipeGestureId:(NSString*)swipeGestureId<sp/><sp/><sp/><sp/>direction:(UISwipeGestureRecognizerDirection)direction<sp/><sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:swipeGestureId];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a74bd10e737b705f4ee7ebca684396b00" kindref="member">removeSwipeGesture</ref>:swipeGestureId];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>UISwipeGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UISwipeGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(swipeHandler:)];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.direction<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.numberOfTouchesRequired<sp/>=<sp/>numberOfTouchesRequired;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1abf3056517356bcf32d90c118d0728f95" kindref="member">swipeCallback</ref><sp/>=<sp/>swipeCallback;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>swipeGestureId;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:swipeGestureId];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>swipe<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="category_u_i_view_07_gesture_callback_08_1a74bd10e737b705f4ee7ebca684396b00" refkind="member"><highlight class="normal">-<sp/>(void)removeSwipeGesture:(NSString*)swipeGestureId</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:swipeGestureId];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:swipeGestureId];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="category_u_i_view_07_gesture_callback_08_1a9637501157001563d93ef1e89b04896a" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1a9637501157001563d93ef1e89b04896a" kindref="member">removeAllSwipeGestures</ref></highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UISwipeGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a74bd10e737b705f4ee7ebca684396b00" kindref="member">removeSwipeGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>swipe<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="category_u_i_view_07_gesture_callback_08_1a3bd3c6f694e78495eedac429897f546b" refkind="member"><highlight class="normal">-<sp/>(void)swipeHandler:(UISwipeGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1abf3056517356bcf32d90c118d0728f95" kindref="member">swipeCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1abf3056517356bcf32d90c118d0728f95" kindref="member">swipeCallback</ref>((UISwipeGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>add<sp/>rotation<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="category_u_i_view_07_gesture_callback_08_1a417b8b41e35c3edebde162569955c3d6" refkind="member"><highlight class="normal">-<sp/>(NSString*)addRotationGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIRotationGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))rotationCallback</highlight></codeline>
<codeline lineno="359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a1bf5b2322bfa562afaf8ad91c1055c33" kindref="member">addRotationGestureRecognizer</ref>:rotationCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a1bf5b2322bfa562afaf8ad91c1055c33" kindref="member">rotationGestureId</ref>:rand];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="category_u_i_view_07_gesture_callback_08_1a1bf5b2322bfa562afaf8ad91c1055c33" refkind="member"><highlight class="normal">-<sp/>(void)addRotationGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UIRotationGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))rotationCallback<sp/><sp/>rotationGestureId:(NSString*)rotationGestureId</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:rotationGestureId];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a52dba4de0af6967677d3d04f621fd164" kindref="member">removeRotationGesture</ref>:rotationGestureId];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>UIRotationGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UIRotationGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(rotationHandler:)];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a08a3281d889ecad37cdd3b8966dc9854" kindref="member">rotationCallback</ref><sp/>=<sp/>rotationCallback;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>rotationGestureId;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:rotationGestureId];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>rotation<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="category_u_i_view_07_gesture_callback_08_1a52dba4de0af6967677d3d04f621fd164" refkind="member"><highlight class="normal">-<sp/>(void)removeRotationGesture:(NSString*)rotationGestureId</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:rotationGestureId];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:rotationGestureId];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="category_u_i_view_07_gesture_callback_08_1aa39bf422e32f47d26a9cd1cc2e6e5b03" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1aa39bf422e32f47d26a9cd1cc2e6e5b03" kindref="member">removeAllRotationGestures</ref></highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UIRotationGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1a52dba4de0af6967677d3d04f621fd164" kindref="member">removeRotationGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>rotation<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="category_u_i_view_07_gesture_callback_08_1af9052d3dbd6b2975335f189cbbcaedca" refkind="member"><highlight class="normal">-<sp/>(void)rotationHandler:(UIRotationGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1a08a3281d889ecad37cdd3b8966dc9854" kindref="member">rotationCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a08a3281d889ecad37cdd3b8966dc9854" kindref="member">rotationCallback</ref>((UIRotationGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>#####<sp/>LONG<sp/>PRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>add<sp/>longPress<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="category_u_i_view_07_gesture_callback_08_1a086032659e50072c954052d5ed6776cf" refkind="member"><highlight class="normal">-<sp/>(NSString*)addLongPressGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UILongPressGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))longPressCallback</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" kindref="member">addLongPressGestureRecognizer</ref>:longPressCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" kindref="member">numberOfTapsRequired</ref>:0<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" kindref="member">numberOfTouchesRequired</ref>:1<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" kindref="member">minimumPressDuration</ref>:0.5<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" kindref="member">allowableMovement</ref>:10];</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="category_u_i_view_07_gesture_callback_08_1ae4f8020a48b6cae6c87ceebd08533311" refkind="member"><highlight class="normal">-<sp/>(NSString*)addLongPressGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UILongPressGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))longPressCallback</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfTapsRequired:(NSUInteger)numberOfTapsRequired</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimumPressDuration:(CFTimeInterval)minimumPressDuration</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowableMovement:(CGFloat)allowableMovement</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*rand;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>randomStringWithLength:12];</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>objectForKey:rand]<sp/>!=<sp/>nil);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">addLongPressGestureRecognizer</ref>:longPressCallback<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">longPressGestureId</ref>:rand<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">numberOfTapsRequired</ref>:numberOfTapsRequired<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">numberOfTouchesRequired</ref>:numberOfTouchesRequired<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">minimumPressDuration</ref>:minimumPressDuration<sp/><ref refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" kindref="member">allowableMovement</ref>:allowableMovement];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="category_u_i_view_07_gesture_callback_08_1acba29b20f46f9aa4b2609dc81d818287" refkind="member"><highlight class="normal">-<sp/>(void)addLongPressGestureRecognizer:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(^)(UILongPressGestureRecognizer*<sp/>recognizer,<sp/>NSString*<sp/>gestureId))longPressCallback</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longPressGestureId:(NSString*)longPressGestureId</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfTapsRequired:(NSUInteger)numberOfTapsRequired</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfTouchesRequired:(NSUInteger)numberOfTouchesRequired</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimumPressDuration:(CFTimeInterval)minimumPressDuration</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowableMovement:(CGFloat)allowableMovement</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>UIGestureRecognizer<sp/>*r<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:longPressGestureId];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1af0048318ea62d86213b2f8147afb7c23" kindref="member">removeLongPressGesture</ref>:longPressGestureId];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>UILongPressGestureRecognizer<sp/>*tg<sp/>=<sp/>[[UILongPressGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(longPressHandler:)];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.numberOfTapsRequired<sp/>=<sp/>numberOfTapsRequired;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.numberOfTouchesRequired<sp/>=<sp/>numberOfTouchesRequired;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.minimumPressDuration<sp/>=<sp/>minimumPressDuration;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>tg.allowableMovement<sp/>=<sp/>allowableMovement;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>new];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>=<sp/>tg;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ace23d8b66672fdd5aa43e7bee8ec6978" kindref="member">longPressCallback</ref><sp/>=<sp/>longPressCallback;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref><sp/>=<sp/>longPressGestureId;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>setValue:v<sp/>forKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>setValue:v<sp/>forKey:longPressGestureId];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:tg];</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>remove<sp/>longPress<sp/>gestures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="category_u_i_view_07_gesture_callback_08_1af0048318ea62d86213b2f8147afb7c23" refkind="member"><highlight class="normal">-<sp/>(void)removeLongPressGesture:(NSString*)longPressGestureId</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>objectForKey:longPressGestureId];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>removeObjectForKey:longPressGestureId];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>removeObjectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)v.gesture.hash]];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>removeGestureRecognizer:v.gesture];</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="category_u_i_view_07_gesture_callback_08_1a5005fe5eed9de10839b110cf9d0fa213" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07_gesture_callback_08_1a5005fe5eed9de10839b110cf9d0fa213" kindref="member">removeAllLongPressGestures</ref></highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*arr<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures.allValues;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>in<sp/>arr)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref><sp/>isMemberOfClass:[UILongPressGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_view_07_gesture_callback_08_1af0048318ea62d86213b2f8147afb7c23" kindref="member">removeLongPressGesture</ref>:v.gestureId];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>longPress<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="category_u_i_view_07_gesture_callback_08_1ac8f6976472b477e313ae18b0547d8f7e" refkind="member"><highlight class="normal">-<sp/>(void)longPressHandler:(UILongPressGestureRecognizer*)recognizer</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gesture_callback_values" kindref="compound">GestureCallbackValues</ref><sp/>*v<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>objectForKey:[NSString<sp/>stringWithFormat:@&quot;%lu&quot;,<sp/>(unsigned<sp/>long)recognizer.hash]];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.<ref refid="class_gesture_callback_values_1ace23d8b66672fdd5aa43e7bee8ec6978" kindref="member">longPressCallback</ref><sp/>!=<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.<ref refid="class_gesture_callback_values_1ace23d8b66672fdd5aa43e7bee8ec6978" kindref="member">longPressCallback</ref>((UILongPressGestureRecognizer*)v.<ref refid="class_gesture_callback_values_1ae831ff0b30947d6f4be42c791fab91e4" kindref="member">gesture</ref>,<sp/>v.<ref refid="class_gesture_callback_values_1a9a9a86d60d02ef3217c8e64ef3a3afb9" kindref="member">gestureId</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>random<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>random<sp/>string<sp/>implementation<sp/>from</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/><sp/>http://stackoverflow.com/questions/2633801/generate-a-random-alphanumeric-string-in-cocoa</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>---------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">-<sp/>(NSString<sp/>*)<sp/>randomStringWithLength:<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>len<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NSString<sp/>*letters<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>NSMutableString<sp/>*randomString<sp/>=<sp/>[NSMutableString<sp/>stringWithCapacity:<sp/>len];</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[randomString<sp/>appendFormat:<sp/>@&quot;%C&quot;,<sp/>[letters<sp/>characterAtIndex:<sp/>arc4random_uniform((u_int32_t)[letters<sp/>length])]];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>randomString;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>getter/setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">-<sp/>(NSMutableDictionary<sp/>*)<ref refid="category_u_i_view_07_gesture_callback_08_1a08a862f4e03a186ff90c4f290da39b38" kindref="member">gestures</ref><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>NSMutableDictionary<sp/>*dict<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>&amp;<ref refid="_u_i_view_09_gesture_callback_8m_1a42818d3ad749dea25d5af5258d89c045" kindref="member">UIView_GestureCallback_gesturesKey</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict<sp/>==<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>[NSMutableDictionary<sp/>new];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestures<sp/>=<sp/>dict;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">-<sp/>(void)<sp/>setGestures:(NSMutableDictionary<sp/>*)value</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>&amp;<ref refid="_u_i_view_09_gesture_callback_8m_1a42818d3ad749dea25d5af5258d89c045" kindref="member">UIView_GestureCallback_gesturesKey</ref>,<sp/>value,<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal">-<sp/>(NSMutableDictionary<sp/>*)<ref refid="category_u_i_view_07_gesture_callback_08_1ad2936953b4e51857be46ea5154a2c6c3" kindref="member">gestureKeysHash</ref><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>NSMutableDictionary<sp/>*dict<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>&amp;<ref refid="_u_i_view_09_gesture_callback_8m_1a27a8e1d7cb05e39e95da5d306af95eb4" kindref="member">UIView_GestureCallback_gestureKeysHashKey</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict<sp/>==<sp/>nil)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/>[NSMutableDictionary<sp/>new];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gestureKeysHash<sp/>=<sp/>dict;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal">-<sp/>(void)<sp/>setGestureKeysHash:(NSMutableDictionary<sp/>*)value</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>&amp;<ref refid="_u_i_view_09_gesture_callback_8m_1a27a8e1d7cb05e39e95da5d306af95eb4" kindref="member">UIView_GestureCallback_gestureKeysHashKey</ref>,<sp/>value,<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>:<sp/>CustomGestureRecognizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+GestureCallback.m"/>
  </compounddef>
</doxygen>
