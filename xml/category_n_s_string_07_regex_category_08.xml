<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="category_n_s_string_07_regex_category_08" kind="category" language="Objective-C" prot="public">
    <compoundname>NSString(RegexCategory)</compoundname>
    <includes refid="_n_s_string_09_regex_category_8h" local="no">NSString+RegexCategory.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1af330a1211abbb4d17b6c1ddceb9c94ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isMobileNumberClassification</definition>
        <argsstring>()</argsstring>
        <name>isMobileNumberClassification</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>手机号码的有效性:分电信、联通、移动和小灵通 </para>        </detaileddescription>
        <inbodydescription>
<para>手机号码 移动：134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188,1705 联通：130,131,132,152,155,156,185,186,1709 电信：133,1349,153,180,189,1700</para><para>10 * 中国移动：China Mobile 11 * 134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188，1705 12</para><para>15 * 中国联通：China Unicom 16 * 130,131,132,152,155,156,185,186,1709 17</para><para>20 * 中国电信：China Telecom 21 * 133,1349,153,180,189,1700 22</para><para>25 * 大陆地区固话及小灵通 26 * 区号：010,020,021,022,023,024,025,027,028,029 27 * 号码：七位或八位 28 </para>        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="22" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a745f00570a924a6d75747d7daaccbaf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isMobileNumber</definition>
        <argsstring>()</argsstring>
        <name>isMobileNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>手机号有效性 </para>        </detaileddescription>
        <inbodydescription>
<para>手机号以13、15、18、170开头，8个  数字字符 小灵通 区号：010,020,021,022,023,024,025,027,028,029 还有未设置的新区号xxx</para>        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="72" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a0e2dc8ceff44f85a21a773d6866584fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isEmailAddress</definition>
        <argsstring>()</argsstring>
        <name>isEmailAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>邮箱的有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a4f87f95a550cc5d4a09f790297a3fe81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::simpleVerifyIdentityCardNum</definition>
        <argsstring>()</argsstring>
        <name>simpleVerifyIdentityCardNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>简单的身份证有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1adccaefa412279ecdd8e1f516563015ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isCarNumber</definition>
        <argsstring>()</argsstring>
        <name>isCarNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>车牌号的有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1ab442a14757cc3f3db6ac753af088b5cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::bankCardluhmCheck</definition>
        <argsstring>()</argsstring>
        <name>bankCardluhmCheck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>银行卡的有效性</para><para>银行卡号有效性问题Luhn算法 现行 16 位银联卡现行卡号开头 6 位是 622126～622925 之间的，7 到 15 位是银行自定义的， 可能是发卡分行，发卡网点，发卡序号，第 16 位是校验码。 16 位卡号校验位采用 Luhm 校验方法计算： 1，将未带校验位的 15 位卡号从右依次编号 1 到 15，位于奇数位号上的数字乘以 2 2，将奇位乘积的个十位全部相加，再加上所有偶数位上的数字 3，将加法和加上校验位能被 10 整除。 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="270" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1ac7ac5650ef44462e42409ae372db8b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isIPAddress</definition>
        <argsstring>()</argsstring>
        <name>isIPAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP地址有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="327" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1af4f1f6d6df01b945744d214895b20ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isMacAddress</definition>
        <argsstring>()</argsstring>
        <name>isMacAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mac地址有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a838c90f4a04afaf8ebb05089debaf37c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidUrl</definition>
        <argsstring>()</argsstring>
        <name>isValidUrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>网址有效性 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1ab271da006ad073d8143ab0996210861d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidChinese</definition>
        <argsstring>()</argsstring>
        <name>isValidChinese</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>纯汉字 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1afd0dc201418562af24b5d7e9ca9430a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidPostalcode</definition>
        <argsstring>()</argsstring>
        <name>isValidPostalcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>邮政编码 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1ae74a7f9b1ca28fd08fb6693195d2a428" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidTaxNo</definition>
        <argsstring>()</argsstring>
        <name>isValidTaxNo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>工商税号 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a132e1ced5b9c3471ba77f903c0667698" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidWithMinLenth:maxLenth:containChinese:firstCannotBeDigtal:</definition>
        <argsstring>(NSInteger minLenth,[maxLenth] NSInteger maxLenth,[containChinese] BOOL containChinese,[firstCannotBeDigtal] BOOL firstCannotBeDigtal)</argsstring>
        <name>isValidWithMinLenth:maxLenth:containChinese:firstCannotBeDigtal:</name>
        <param>
          <type>NSInteger</type>
          <declname>minLenth</declname>
        </param>
        <param>
          <attributes>[maxLenth]</attributes>
          <type>NSInteger</type>
          <declname>maxLenth</declname>
        </param>
        <param>
          <attributes>[containChinese]</attributes>
          <type>BOOL</type>
          <declname>containChinese</declname>
        </param>
        <param>
          <attributes>[firstCannotBeDigtal]</attributes>
          <type>BOOL</type>
          <declname>firstCannotBeDigtal</declname>
        </param>
        <briefdescription>
<para>是否符合最小长度、最长长度，是否包含中文,首字母是否可以为数字 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minLenth</parametername>
</parameternamelist>
<parameterdescription>
<para>账号最小长度 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLenth</parametername>
</parameternamelist>
<parameterdescription>
<para>账号最长长度 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>containChinese</parametername>
</parameternamelist>
<parameterdescription>
<para>是否包含中文 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstCannotBeDigtal</parametername>
</parameternamelist>
<parameterdescription>
<para>首字母不能为数字 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>正则验证成功返回YES, 否则返回NO </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="134" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a927aeaea786678744ee1ad3baa1fbb20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::isValidWithMinLenth:maxLenth:containChinese:containDigtal:containLetter:containOtherCharacter:firstCannotBeDigtal:</definition>
        <argsstring>(NSInteger minLenth,[maxLenth] NSInteger maxLenth,[containChinese] BOOL containChinese,[containDigtal] BOOL containDigtal,[containLetter] BOOL containLetter,[containOtherCharacter] NSString *containOtherCharacter,[firstCannotBeDigtal] BOOL firstCannotBeDigtal)</argsstring>
        <name>isValidWithMinLenth:maxLenth:containChinese:containDigtal:containLetter:containOtherCharacter:firstCannotBeDigtal:</name>
        <param>
          <type>NSInteger</type>
          <declname>minLenth</declname>
        </param>
        <param>
          <attributes>[maxLenth]</attributes>
          <type>NSInteger</type>
          <declname>maxLenth</declname>
        </param>
        <param>
          <attributes>[containChinese]</attributes>
          <type>BOOL</type>
          <declname>containChinese</declname>
        </param>
        <param>
          <attributes>[containDigtal]</attributes>
          <type>BOOL</type>
          <declname>containDigtal</declname>
        </param>
        <param>
          <attributes>[containLetter]</attributes>
          <type>BOOL</type>
          <declname>containLetter</declname>
        </param>
        <param>
          <attributes>[containOtherCharacter]</attributes>
          <type>NSString *</type>
          <declname>containOtherCharacter</declname>
        </param>
        <param>
          <attributes>[firstCannotBeDigtal]</attributes>
          <type>BOOL</type>
          <declname>firstCannotBeDigtal</declname>
        </param>
        <briefdescription>
<para>是否符合最小长度、最长长度，是否包含中文,数字，字母，其他字符，首字母是否可以为数字 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minLenth</parametername>
</parameternamelist>
<parameterdescription>
<para>账号最小长度 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLenth</parametername>
</parameternamelist>
<parameterdescription>
<para>账号最长长度 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>containChinese</parametername>
</parameternamelist>
<parameterdescription>
<para>是否包含中文 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>containDigtal</parametername>
</parameternamelist>
<parameterdescription>
<para>包含数字 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>containLetter</parametername>
</parameternamelist>
<parameterdescription>
<para>包含字母 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>containOtherCharacter</parametername>
</parameternamelist>
<parameterdescription>
<para>其他字符 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstCannotBeDigtal</parametername>
</parameternamelist>
<parameterdescription>
<para>首字母不能为数字 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>正则验证成功返回YES, 否则返回NO </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="147" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="category_n_s_string_07_regex_category_08_1a3fe31af1c0e21fc31bb416de0efbf97a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL NSString(RegexCategory)::accurateVerifyIDCardNumber:</definition>
        <argsstring>(NSString *value)</argsstring>
        <name>accurateVerifyIDCardNumber:</name>
        <param>
          <type>NSString *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>精确的身份证号码有效性检测</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>身份证号 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.h" line="15" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="167" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>正则表达式简单说明 语法： . 匹配除换行符以外的任意字符  匹配字母或数字或下划线或汉字  匹配任意的空白符  匹配数字 <bold>匹配单词的开始或结束</bold> ^ 匹配字符串的开始 $ 匹配字符串的结束 重复零次或更多次<itemizedlist>
<listitem><para>重复一次或更多次 ? 重复零次或一次 {n} 重复n次 {n,} 重复n次或更多次 {n,m} 重复n到m次  匹配任意不是字母，数字，下划线，汉字的字符  匹配任意不是空白符的字符  匹配任意非数字的字符  匹配不是单词开头或结束的位置 [^x] 匹配除了x以外的任意字符 [^aeiou]匹配除了aeiou这几个字母以外的任意字符 ? 重复任意次，但尽可能少重复 +? 重复1次或更多次，但尽可能少重复 ?? 重复0次或1次，但尽可能少重复 {n,m}? 重复n到m次，但尽可能少重复 {n,}? 重复n次以上，但尽可能少重复 <emphasis>报警字符</emphasis>(打印它的效果是电脑嘀一声) <bold>通常是单词分界位置，但如果在字符类里使用代表退格</bold>  制表符，Tab  回车  竖向制表符  换页符 <linebreak/>
 换行符 <emphasis>Escape</emphasis> \0nn ASCII代码中八进制代码为nn的字符  ASCII代码中十六进制代码为nn的字符  Unicode代码中十六进制代码为nnnn的字符  ASCII控制字符。比如代表Ctrl+C  字符串开头(类似^，但不受处理多行选项的影响)  字符串结尾或行尾(不受处理多行选项的影响)  字符串结尾(类似$，但不受处理多行选项的影响)  当前搜索的开头 <computeroutput></computeroutput>{name} Unicode中命名为name的字符类，例如<computeroutput></computeroutput>{IsGreek} (?&gt;exp) 贪婪子表达式 (?&lt;x&gt;-&lt;y&gt;exp) 平衡组 (?im-nsx:exp) 在子表达式exp中改变处理选项 (?im-nsx) 为表达式后面的部分改变处理选项 (?(exp)yes|no) 把exp当作零宽正向先行断言，如果在这个位置能匹配，使用yes作为此组的表达式；否则使用no (?(exp)yes) 同上，只是使用空表达式作为no (?(name)yes|no) 如果命名为name的组捕获到了内容，使用yes作为表达式；否则使用no (?(name)yes) 同上，只是使用空表达式作为no</para></listitem></itemizedlist>
</para><para>捕获 (exp) 匹配exp,并捕获文本到自动命名的组里 (?&lt;name&gt;exp) 匹配exp,并捕获文本到名称为name的组里，也可以写成(?&apos;name&apos;exp) (?:exp) 匹配exp,不捕获匹配的文本，也不给此分组分配组号 零宽断言 (?=exp) 匹配exp前面的位置 (?&lt;=exp) 匹配exp后面的位置 (?!exp) 匹配后面跟的不是exp的位置 (?&lt;!exp) 匹配前面不是exp的位置 注释 (?#comment) 这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</para><para>表达式：(?0{2}[) -]?{8} 这个表达式可以匹配几种格式的电话号码，像(010)88886666，或022-22334455，或02912345678等。 我们对它进行一些分析吧： 首先是一个转义字符(,它能出现0次或1次(?),然后是一个0，后面跟着2个数字({2})，然后是)或-或空格中的一个，它出现1次或不出现(?)， 最后是8个数字({8}) </para>    </detaileddescription>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" line="12" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/Foundation/NSString/NSString+RegexCategory.m" bodystart="12" bodyend="-1"/>
    <listofallmembers>
      <member refid="category_n_s_string_07_regex_category_08_1a3fe31af1c0e21fc31bb416de0efbf97a" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>accurateVerifyIDCardNumber:</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1ab442a14757cc3f3db6ac753af088b5cf" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>bankCardluhmCheck</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1adccaefa412279ecdd8e1f516563015ab" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isCarNumber</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a0e2dc8ceff44f85a21a773d6866584fb" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isEmailAddress</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1ac7ac5650ef44462e42409ae372db8b2f" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isIPAddress</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1af4f1f6d6df01b945744d214895b20ac4" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isMacAddress</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a745f00570a924a6d75747d7daaccbaf3" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isMobileNumber</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1af330a1211abbb4d17b6c1ddceb9c94ba" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isMobileNumberClassification</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1ab271da006ad073d8143ab0996210861d" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidChinese</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1afd0dc201418562af24b5d7e9ca9430a2" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidPostalcode</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1ae74a7f9b1ca28fd08fb6693195d2a428" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidTaxNo</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a838c90f4a04afaf8ebb05089debaf37c" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidUrl</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a927aeaea786678744ee1ad3baa1fbb20" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidWithMinLenth:maxLenth:containChinese:containDigtal:containLetter:containOtherCharacter:firstCannotBeDigtal:</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a132e1ced5b9c3471ba77f903c0667698" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>isValidWithMinLenth:maxLenth:containChinese:firstCannotBeDigtal:</name></member>
      <member refid="category_n_s_string_07_regex_category_08_1a4f87f95a550cc5d4a09f790297a3fe81" prot="public" virt="virtual"><scope>NSString(RegexCategory)</scope><name>simpleVerifyIdentityCardNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
