<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_x_d_continuous_boot_crash_prevent_tool_8h" kind="file" language="C++">
    <compoundname>XDContinuousBootCrashPreventTool.h</compoundname>
    <includes local="no">Foundation/Foundation.h</includes>
    <includedby refid="_app_delegate_09_x_d_continuous_boot_crash_prevent_tool_8m" local="yes">XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/AppDelegate+XDContinuousBootCrashPreventTool.m</includedby>
    <includedby refid="_x_d_continuous_boot_crash_prevent_tool_8m" local="yes">XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m</includedby>
    <incdepgraph>
      <node id="3334">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h</label>
        <link refid="XDContinuousBootCrashPreventTool.h"/>
        <childnode refid="3335" relation="include">
        </childnode>
      </node>
      <node id="3335">
        <label>Foundation/Foundation.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3336">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h</label>
        <link refid="XDContinuousBootCrashPreventTool.h"/>
        <childnode refid="3337" relation="include">
        </childnode>
        <childnode refid="3338" relation="include">
        </childnode>
      </node>
      <node id="3338">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m</label>
        <link refid="_x_d_continuous_boot_crash_prevent_tool_8m"/>
      </node>
      <node id="3337">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/AppDelegate+XDContinuousBootCrashPreventTool.m</label>
        <link refid="_app_delegate_09_x_d_continuous_boot_crash_prevent_tool_8m"/>
      </node>
    </invincdepgraph>
    <innerclass refid="interface_x_d_continuous_boot_crash_prevent_tool" prot="public">XDContinuousBootCrashPreventTool</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" prot="public" static="no">
        <type>BOOL(^</type>
        <definition>typedef BOOL(^ BoolCompletionBlock) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>BoolCompletionBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="11" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" prot="public" static="no">
        <type>void(^</type>
        <definition>typedef void(^ RepairBlock) (BoolCompletionBlock)</definition>
        <argsstring>)(BoolCompletionBlock)</argsstring>
        <name>RepairBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="12" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" prot="public" static="no">
        <type>void(^</type>
        <definition>typedef void(^ ReportBlock) (NSInteger crashCounts)</definition>
        <argsstring>)(NSInteger crashCounts)</argsstring>
        <name>ReportBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDContinuousBootCrashPreventTool.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDContinuousBootCrashPreventTool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>suxinde<sp/>on<sp/>16/5/25.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>©<sp/>2016年<sp/>suxinde.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;Foundation/Foundation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BOOL<sp/>(^<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref>)(void);</highlight></codeline>
<codeline lineno="12" refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(^<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref>)(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref>);</highlight></codeline>
<codeline lineno="13" refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(^<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref>)(NSInteger<sp/>crashCounts);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="interface_x_d_continuous_boot_crash_prevent_tool" refkind="compound"><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="interface_x_d_continuous_boot_crash_prevent_tool" kindref="compound">XDContinuousBootCrashPreventTool</ref><sp/>:<sp/>NSObject</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1ac57f161d327f4d2ab3c7c16956d4a853" kindref="member">launchContinuousCrashProtect</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>启动连续<sp/>crash<sp/>计数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">+<sp/>(void)setCrashCount:(NSInteger)count;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">+<sp/>(NSInteger)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" kindref="member">crashCount</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>是否正在修复</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" kindref="member">isFixingCrash</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>设置日志逻辑</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">+<sp/>(void)setLogger:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(NSString<sp/>*))logger;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>设置上报逻辑，参数<sp/>crashCounts<sp/>为启动连续<sp/>crash<sp/>次数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">+<sp/>(void)setReportBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref>)reportBlock;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>设置修复逻辑</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">+<sp/>(void)setRepairBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref>)repairtBlock;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">+<sp/>(void)setBoolCompletionBlock:(<ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref>)boolCompletionBlock;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>测试彩蛋开关：是否制造启动<sp/>crash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">+<sp/>(void)setStartupCrashForTest:(BOOL)isOn;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>是否显示测试彩蛋（需要修复时不显示）</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">+<sp/>(BOOL)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad1d73a791284a51a019b4ebe5fac72c6" kindref="member">startupCrashForTest</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>删除Document<sp/>Library<sp/>Caches所有文件</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">+<sp/>(void)<ref refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1229710375d2f177cba8d4ab6dc892f9" kindref="member">deleteAllFilesUnderDocumentsLibraryCaches</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h"/>
  </compounddef>
</doxygen>
