<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_u_i_image_09animated_g_i_f_8h" kind="file" language="C++">
    <compoundname>UIImage+animatedGIF.h</compoundname>
    <includes local="no">UIKit/UIKit.h</includes>
    <includedby refid="_u_i_image_09animated_g_i_f_8m" local="yes">XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIImage/UIImage+animatedGIF.m</includedby>
    <incdepgraph>
      <node id="1458">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIImage/UIImage+animatedGIF.h</label>
        <link refid="UIImage+animatedGIF.h"/>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>UIKit/UIKit.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1460">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIImage/UIImage+animatedGIF.h</label>
        <link refid="UIImage+animatedGIF.h"/>
        <childnode refid="1461" relation="include">
        </childnode>
      </node>
      <node id="1461">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIImage/UIImage+animatedGIF.m</label>
        <link refid="_u_i_image_09animated_g_i_f_8m"/>
      </node>
    </invincdepgraph>
    <innerclass refid="category_u_i_image_07animated_g_i_f_08" prot="public">UIImage(animatedGIF)</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#import<sp/>&lt;UIKit/UIKit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="category_u_i_image_07animated_g_i_f_08" kindref="compound">UIImage (animatedGIF)</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIImage<sp/>*animation<sp/>=<sp/>[UIImage<sp/>animatedImageWithAnimatedGIFData:theData];</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>I<sp/>interpret<sp/>`theData`<sp/>as<sp/>a<sp/>GIF.<sp/><sp/>I<sp/>create<sp/>an<sp/>animated<sp/>`UIImage`<sp/>using<sp/>the<sp/>source<sp/>images<sp/>in<sp/>the<sp/>GIF.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>GIF<sp/>stores<sp/>a<sp/>separate<sp/>duration<sp/>for<sp/>each<sp/>frame,<sp/>in<sp/>units<sp/>of<sp/>centiseconds<sp/>(hundredths<sp/>of<sp/>a<sp/>second).<sp/><sp/>However,<sp/>a<sp/>`UIImage`<sp/>only<sp/>has<sp/>a<sp/>single,<sp/>total<sp/>`duration`<sp/>property,<sp/>which<sp/>is<sp/>a<sp/>floating-point<sp/>number.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>To<sp/>handle<sp/>this<sp/>mismatch,<sp/>I<sp/>add<sp/>each<sp/>source<sp/>image<sp/>(from<sp/>the<sp/>GIF)<sp/>to<sp/>`animation`<sp/>a<sp/>varying<sp/>number<sp/>of<sp/>times<sp/>to<sp/>match<sp/>the<sp/>ratios<sp/>between<sp/>the<sp/>frame<sp/>durations<sp/>in<sp/>the<sp/>GIF.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>example,<sp/>suppose<sp/>the<sp/>GIF<sp/>contains<sp/>three<sp/>frames.<sp/><sp/>Frame<sp/>0<sp/>has<sp/>duration<sp/>3.<sp/><sp/>Frame<sp/>1<sp/>has<sp/>duration<sp/>9.<sp/><sp/>Frame<sp/>2<sp/>has<sp/>duration<sp/>15.<sp/><sp/>I<sp/>divide<sp/>each<sp/>duration<sp/>by<sp/>the<sp/>greatest<sp/>common<sp/>denominator<sp/>of<sp/>all<sp/>the<sp/>durations,<sp/>which<sp/>is<sp/>3,<sp/>and<sp/>add<sp/>each<sp/>frame<sp/>the<sp/>resulting<sp/>number<sp/>of<sp/>times.<sp/><sp/>Thus<sp/>`animation`<sp/>will<sp/>contain<sp/>frame<sp/>0<sp/>3/3<sp/>=<sp/>1<sp/>time,<sp/>then<sp/>frame<sp/>1<sp/>9/3<sp/>=<sp/>3<sp/>times,<sp/>then<sp/>frame<sp/>2<sp/>15/3<sp/>=<sp/>5<sp/>times.<sp/><sp/>I<sp/>set<sp/>`animation.duration`<sp/>to<sp/>(3+9+15)/100<sp/>=<sp/>0.27<sp/>seconds.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">+<sp/>(UIImage<sp/>*)animatedImageWithAnimatedGIFData:(NSData<sp/>*)theData;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIImage<sp/>*image<sp/>=<sp/>[UIImage<sp/>animatedImageWithAnimatedGIFURL:theURL];</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>I<sp/>interpret<sp/>the<sp/>contents<sp/>of<sp/>`theURL`<sp/>as<sp/>a<sp/>GIF.<sp/><sp/>I<sp/>create<sp/>an<sp/>animated<sp/>`UIImage`<sp/>using<sp/>the<sp/>source<sp/>images<sp/>in<sp/>the<sp/>GIF.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>I<sp/>operate<sp/>exactly<sp/>like<sp/>`+[UIImage<sp/>animatedImageWithAnimatedGIFData:]`,<sp/>except<sp/>that<sp/>I<sp/>read<sp/>the<sp/>data<sp/>from<sp/>`theURL`.<sp/><sp/>If<sp/>`theURL`<sp/>is<sp/>not<sp/>a<sp/>`file:`<sp/>URL,<sp/>you<sp/>probably<sp/>want<sp/>to<sp/>call<sp/>me<sp/>on<sp/>a<sp/>background<sp/>thread<sp/>or<sp/>GCD<sp/>queue<sp/>to<sp/>avoid<sp/>blocking<sp/>the<sp/>main<sp/>thread.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">+<sp/>(UIImage<sp/>*)animatedImageWithAnimatedGIFURL:(NSURL<sp/>*)theURL;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIImage/UIImage+animatedGIF.h"/>
  </compounddef>
</doxygen>
