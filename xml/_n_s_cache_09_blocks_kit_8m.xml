<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_n_s_cache_09_blocks_kit_8m" kind="file" language="Objective-C">
    <compoundname>NSCache+BlocksKit.m</compoundname>
    <includes refid="_n_s_cache_09_blocks_kit_8h" local="yes">NSCache+BlocksKit.h</includes>
    <includes refid="_a2_dynamic_delegate_8h" local="yes">A2DynamicDelegate.h</includes>
    <includes refid="_n_s_object_09_a2_dynamic_delegate_8h" local="yes">NSObject+A2DynamicDelegate.h</includes>
    <includes refid="_n_s_object_09_a2_block_delegate_8h" local="yes">NSObject+A2BlockDelegate.h</includes>
    <incdepgraph>
      <node id="2904">
        <label>A2DynamicDelegate.h</label>
        <link refid="_a2_dynamic_delegate_8h"/>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
      </node>
      <node id="2902">
        <label>Foundation/NSObjCRuntime.h</label>
      </node>
      <node id="2900">
        <label>NSCache+BlocksKit.h</label>
        <link refid="_n_s_cache_09_blocks_kit_8h"/>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
      </node>
      <node id="2899">
        <label>XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/DynamicDelegate/Foundation/NSCache+BlocksKit.m</label>
        <link refid="NSCache+BlocksKit.m"/>
        <childnode refid="2900" relation="include">
        </childnode>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2905" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2905">
        <label>NSObject+A2DynamicDelegate.h</label>
        <link refid="_n_s_object_09_a2_dynamic_delegate_8h"/>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
      </node>
      <node id="2901">
        <label>BKDefines.h</label>
        <link refid="_b_k_defines_8h"/>
        <childnode refid="2902" relation="include">
        </childnode>
      </node>
      <node id="2906">
        <label>NSObject+A2BlockDelegate.h</label>
        <link refid="_n_s_object_09_a2_block_delegate_8h"/>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
      </node>
      <node id="2903">
        <label>Foundation/Foundation.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="interface_a2_dynamic_n_s_cache_delegate" prot="public">A2DynamicNSCacheDelegate</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>NSCache+BlocksKit.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>BlocksKit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_n_s_cache_09_blocks_kit_8h" kindref="compound">NSCache+BlocksKit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_a2_dynamic_delegate_8h" kindref="compound">A2DynamicDelegate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_n_s_object_09_a2_dynamic_delegate_8h" kindref="compound">NSObject+A2DynamicDelegate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_n_s_object_09_a2_block_delegate_8h" kindref="compound">NSObject+A2BlockDelegate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Custom<sp/>delegate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="interface_a2_dynamic_n_s_cache_delegate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="interface_a2_dynamic_n_s_cache_delegate" kindref="compound">A2DynamicNSCacheDelegate</ref><sp/>:<sp/><ref refid="class_a2_dynamic_delegate" kindref="compound">A2DynamicDelegate</ref><sp/>&lt;NSCacheDelegate&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="interface_a2_dynamic_n_s_cache_delegate" kindref="compound">A2DynamicNSCacheDelegate</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">-<sp/>(void)cache:(NSCache<sp/>*)cache<sp/>willEvictObject:(id)obj</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><ref refid="class_a2_dynamic_delegate_1a4c7e2f4153dc34cc4c05a72d1647d62c" kindref="member">realDelegate</ref><sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.realDelegate;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(realDelegate<sp/>&amp;&amp;<sp/>[realDelegate<sp/>respondsToSelector:</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(cache:willEvictObject:)])</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[realDelegate<sp/>cache:cache<sp/>willEvictObject:obj];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(^orig)(NSCache<sp/>*,<sp/>id)<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>blockImplementationForMethod:_cmd];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orig)<sp/>orig(cache,<sp/>obj);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Category</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="category_n_s_cache_07_blocks_kit_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_n_s_cache_07_blocks_kit_08" kindref="compound">NSCache (BlocksKit)</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">@dynamic<sp/><ref refid="category_n_s_cache_07_blocks_kit_08_1ac99a017b14e0bcb7b8e266a5af89ec2b" kindref="member">bk_willEvictBlock</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">+<sp/>(void)load</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>@autoreleasepool<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>bk_registerDynamicDelegate];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>bk_linkDelegateMethods:@{<sp/>@&quot;bk_willEvictBlock&quot;:<sp/>@&quot;cache:willEvictObject:&quot;<sp/>}];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="category_n_s_cache_07_blocks_kit_08_1a985b2fd234534b4d22ff45ba88075c94" refkind="member"><highlight class="normal">-<sp/>(id)bk_objectForKey:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)key<sp/>withGetter:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>(^)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">))block</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>objectForKey:key];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/>block();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setObject:object<sp/>forKey:key];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/BlocksKit/DynamicDelegate/Foundation/NSCache+BlocksKit.m"/>
  </compounddef>
</doxygen>
