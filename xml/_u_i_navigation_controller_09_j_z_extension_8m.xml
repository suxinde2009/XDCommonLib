<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_u_i_navigation_controller_09_j_z_extension_8m" kind="file" language="Objective-C">
    <compoundname>UINavigationController+JZExtension.m</compoundname>
    <includes refid="_u_i_navigation_controller_09_j_z_extension_8h" local="yes">UINavigationController+JZExtension.h</includes>
    <includes local="no">objc/runtime.h</includes>
    <incdepgraph>
      <node id="1733">
        <label>UIKit/UIKit.h</label>
      </node>
      <node id="1732">
        <label>UINavigationController+JZExtension.h</label>
        <link refid="_u_i_navigation_controller_09_j_z_extension_8h"/>
        <childnode refid="1733" relation="include">
        </childnode>
      </node>
      <node id="1731">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m</label>
        <link refid="UINavigationController+JZExtension.m"/>
        <childnode refid="1732" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
      </node>
      <node id="1734">
        <label>objc/runtime.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="category_u_i_navigation_controller_07___j_z_extension_08" prot="public">UINavigationController(_JZExtension)</innerclass>
    <innerclass refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08" prot="public">UIPercentDrivenInteractiveTransition(JZExtension)</innerclass>
    <innerclass refid="category_u_i_toolbar_07_j_z_extension_08" prot="public">UIToolbar(JZExtension)</innerclass>
    <innerclass refid="category_u_i_navigation_bar_07_j_z_extension_08" prot="public">UINavigationBar(JZExtension)</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_u_i_navigation_controller_09_j_z_extension_8m_1a3486f18ba36f85f5d9baf8e0cf85cbd3" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* _VIMP) (id, SEL,...)</definition>
        <argsstring>)(id, SEL,...)</argsstring>
        <name>_VIMP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m" line="36" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_navigation_controller_09_j_z_extension_8m_1a22381d38c2a37058199eea7d04f4b6cb" prot="public" static="no">
        <type>id(*</type>
        <definition>typedef id(* _IMP) (id, SEL, id)</definition>
        <argsstring>)(id, SEL, id)</argsstring>
        <name>_IMP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m" line="37" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>The<sp/>MIT<sp/>License<sp/>(MIT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2015-2016<sp/>JazysYu<sp/>(<sp/>https://github.com/JazysYu<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_u_i_navigation_controller_09_j_z_extension_8h" kindref="compound">UINavigationController+JZExtension.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;objc/runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="category_n_s_number_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_n_s_number_07_j_z_extension_08" kindref="compound">NSNumber (JZExtension)</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">-<sp/>(CGFloat)CGFloatValue<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CGFLOAT_IS_DOUBLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>doubleValue];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>floatValue];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_u_i_navigation_controller_09_j_z_extension_8m_1a3486f18ba36f85f5d9baf8e0cf85cbd3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_u_i_navigation_controller_09_j_z_extension_8m_1a3486f18ba36f85f5d9baf8e0cf85cbd3" kindref="member">_VIMP</ref>)(id,<sp/>SEL,<sp/>...);</highlight></codeline>
<codeline lineno="37" refid="_u_i_navigation_controller_09_j_z_extension_8m_1a22381d38c2a37058199eea7d04f4b6cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>id<sp/>(*<ref refid="_u_i_navigation_controller_09_j_z_extension_8m_1a22381d38c2a37058199eea7d04f4b6cb" kindref="member">_IMP</ref>)(id,<sp/>SEL,<sp/>id);</highlight></codeline>
<codeline lineno="38" refid="category_u_i_navigation_controller_07___j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="category_u_i_navigation_controller_07___j_z_extension_08" kindref="compound">UINavigationController (_JZExtension)</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">@property</highlight><highlight class="normal"><sp/>(nonatomic,<sp/>copy)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^<ref refid="category_u_i_navigation_controller_07___j_z_extension_08_1a16a306b1eb4bcab8f3574a447f083d96" kindref="member">_push_pop_Finished</ref>)(BOOL);</highlight></codeline>
<codeline lineno="40" refid="category_u_i_navigation_controller_07___j_z_extension_08_1a07a29dbde344f42c91d024b84bcc8869" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">@property</highlight><highlight class="normal"><sp/>(nonatomic,<sp/>assign)<sp/>BOOL<sp/><ref refid="category_u_i_navigation_controller_07___j_z_extension_08_1a07a29dbde344f42c91d024b84bcc8869" kindref="member">_navigationBarHidden</ref>;</highlight></codeline>
<codeline lineno="41" refid="category_u_i_navigation_controller_07___j_z_extension_08_1a0a13b255f22c3326c28dba9d4b57e733" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">@property</highlight><highlight class="normal"><sp/>(nonatomic,<sp/>assign)<sp/>CGFloat<sp/><ref refid="category_u_i_navigation_controller_07___j_z_extension_08_1a0a13b255f22c3326c28dba9d4b57e733" kindref="member">_navigationBarBackgroundReverseAlpha</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">-<sp/>(void)setInteractivePopedViewController:(UIViewController<sp/>*)interactivePopedViewController;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08" kindref="compound">UIPercentDrivenInteractiveTransition (JZExtension)</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">-<sp/>(void)_updateInteractiveTransition:(CGFloat)percentComplete;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a35ee5058ce0def067f805f77153259ac" kindref="member">_cancelInteractiveTransition</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1ad13407250ee8f805909eb84f87aa6ae0" kindref="member">_finishInteractiveTransition</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="category_u_i_navigation_controller_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_navigation_controller_07_j_z_extension_08" kindref="compound">UINavigationController (JZExtension)</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">+<sp/>(void)load<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>dispatch_once_t<sp/>onceToken;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_once(&amp;onceToken,<sp/>^{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(^__method_swizzling)(Class,<sp/>SEL,<sp/>SEL)<sp/>=<sp/>^(Class<sp/>cls,<sp/></highlight><highlight class="keywordtype">SEL</highlight><highlight class="normal"><sp/>sel,<sp/></highlight><highlight class="keywordtype">SEL</highlight><highlight class="normal"><sp/>_sel)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/><sp/>method<sp/>=<sp/>class_getInstanceMethod(cls,<sp/>sel);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>_method<sp/>=<sp/>class_getInstanceMethod(cls,<sp/>_sel);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method_exchangeImplementations(method,<sp/>_method);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class<sp/>_UINavigationInteractiveTransition<sp/>=<sp/>NSClassFromString(</highlight><highlight class="stringliteral">@&quot;_UINavigationInteractiveTransition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>gestureShouldReceiveTouch<sp/>=<sp/>class_getInstanceMethod(_UINavigationInteractiveTransition,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(gestureRecognizer:shouldReceiveTouch:));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method_setImplementation(gestureShouldReceiveTouch,<sp/>imp_implementationWithBlock(^(UIPercentDrivenInteractiveTransition<sp/>*navTransition,UIGestureRecognizer<sp/>*gestureRecognizer,<sp/>UITouch<sp/>*touch){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINavigationController<sp/>*navigationController<sp/>=<sp/>(UINavigationController<sp/>*)[navTransition<sp/>valueForKey:</highlight><highlight class="stringliteral">@&quot;__parent&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navigationController.viewControllers.count<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>![[navigationController<sp/>valueForKey:@&quot;_isTransitioning&quot;]<sp/>boolValue];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>gestureShouldSimultaneouslyGesture<sp/>=<sp/>class_getInstanceMethod(_UINavigationInteractiveTransition,<sp/>NSSelectorFromString(</highlight><highlight class="stringliteral">@&quot;_gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method_setImplementation(gestureShouldSimultaneouslyGesture,<sp/>imp_implementationWithBlock(^{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling([UIPercentDrivenInteractiveTransition<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(updateInteractiveTransition:),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_updateInteractiveTransition:));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling([UIPercentDrivenInteractiveTransition<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(cancelInteractiveTransition),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_cancelInteractiveTransition));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling([UIPercentDrivenInteractiveTransition<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(finishInteractiveTransition),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_finishInteractiveTransition));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling([UINavigationBar<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(sizeThatFits:),<sp/>NSSelectorFromString(</highlight><highlight class="stringliteral">@&quot;_sizeThatFits:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling([UIToolbar<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(sizeThatFits:),<sp/>NSSelectorFromString(</highlight><highlight class="stringliteral">@&quot;_sizeThatFits:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(pushViewController:animated:),</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_pushViewController:animated:));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(popViewControllerAnimated:),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_popViewControllerAnimated:));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(popToViewController:animated:),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_popToViewController:animated:));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(popToRootViewControllerAnimated:),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_popToRootViewControllerAnimated:));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>NSSelectorFromString(</highlight><highlight class="stringliteral">@&quot;navigationTransitionView:didEndTransition:fromView:toView:&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_navigationTransitionView:didEndTransition:fromView:toView:));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__method_swizzling(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(setNavigationBarHidden:animated:),<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_setNavigationBarHidden:animated:));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">-<sp/>(void)awakeFromNib<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">super</highlight><highlight class="normal"><sp/>awakeFromNib];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarHidden<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBarHidden;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">-<sp/>(void)pushViewController:(UIViewController<sp/>*)viewController<sp/>animated:(BOOL)animated<sp/>completion:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL))completion<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished<sp/>=<sp/>completion;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*visibleViewController<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>visibleViewController];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_pushViewController:viewController<sp/>animated:animated];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarHidden)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarHidden:viewController.hidesNavigationBarWhenPushed<sp/>animated:animated];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>set_navigationBarHidden:NO];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibleViewController.navigationBarBackgroundHidden<sp/>!=<sp/>viewController.navigationBarBackgroundHidden)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[UIView<sp/>animateWithDuration:animated<sp/>?<sp/>UINavigationControllerHideShowBarDuration<sp/>:<sp/>0.f<sp/>animations:^{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarBackgroundAlpha:viewController.navigationBarBackgroundHidden<sp/>?<sp/>0<sp/>:<sp/>1-self._navigationBarBackgroundReverseAlpha];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">-<sp/>(UIViewController<sp/>*)popViewControllerAnimated:(BOOL)animated<sp/>completion:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL))completion<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished<sp/>=<sp/>completion;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*viewController<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_popViewControllerAnimated:animated];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*visibleViewController<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>visibleViewController];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarHidden)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarHidden:visibleViewController.hidesNavigationBarWhenPushed<sp/>animated:animated];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>set_navigationBarHidden:NO];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(![[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>valueForKey:</highlight><highlight class="stringliteral">@&quot;_interactiveTransition&quot;</highlight><highlight class="normal">]<sp/>boolValue])<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewController.navigationBarBackgroundHidden<sp/>!=<sp/>visibleViewController.navigationBarBackgroundHidden)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[UIView<sp/>animateWithDuration:animated<sp/>?<sp/>UINavigationControllerHideShowBarDuration<sp/>:<sp/>0.f<sp/>animations:^{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarBackgroundAlpha:visibleViewController.navigationBarBackgroundHidden<sp/>?<sp/>0<sp/>:<sp/>1-self._navigationBarBackgroundReverseAlpha];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopedViewController<sp/>=<sp/>viewController;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>viewController;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="category_u_i_navigation_controller_07_j_z_extension_08_1ad70f8dc772ed69608d95ad1afca9c251" refkind="member"><highlight class="normal">-<sp/>(NSArray<sp/>*)popToViewController:(UIViewController<sp/>*)viewController<sp/>animated:(BOOL)animated<sp/>completion:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL<sp/>finished))completion<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished<sp/>=<sp/>completion;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*popedViewControllers<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_popToViewController:viewController<sp/>animated:animated];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*topPopedViewController<sp/>=<sp/>[popedViewControllers<sp/>lastObject];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarHidden)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarHidden:viewController.hidesNavigationBarWhenPushed<sp/>animated:animated];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>set_navigationBarHidden:NO];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewController.navigationBarBackgroundHidden<sp/>!=<sp/>topPopedViewController.navigationBarBackgroundHidden)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[UIView<sp/>animateWithDuration:animated<sp/>?<sp/>UINavigationControllerHideShowBarDuration<sp/>:<sp/>0.f<sp/>animations:^{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarBackgroundAlpha:viewController.navigationBarBackgroundHidden<sp/>?<sp/>0<sp/>:<sp/>1-self._navigationBarBackgroundReverseAlpha];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>popedViewControllers;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="category_u_i_navigation_controller_07_j_z_extension_08_1af7fe423c9dedb597efcd1d9d06d225c6" refkind="member"><highlight class="normal">-<sp/>(NSArray<sp/>*)popToRootViewControllerAnimated:(BOOL)animated<sp/>completion:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL<sp/>finished))completion<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished<sp/>=<sp/>completion;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*popedViewControllers<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_popToRootViewControllerAnimated:animated];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*topPopedViewController<sp/>=<sp/>[popedViewControllers<sp/>lastObject];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*topViewController<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.viewControllers[0];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarHidden)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarHidden:topViewController.hidesNavigationBarWhenPushed<sp/>animated:animated];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>set_navigationBarHidden:NO];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topViewController.navigationBarBackgroundHidden<sp/>!=<sp/>topPopedViewController.navigationBarBackgroundHidden)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[UIView<sp/>animateWithDuration:animated<sp/>?<sp/>UINavigationControllerHideShowBarDuration<sp/>:<sp/>0.f<sp/>animations:^{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarBackgroundAlpha:topViewController.navigationBarBackgroundHidden<sp/>?<sp/>0<sp/>:<sp/>1-self._navigationBarBackgroundReverseAlpha];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>popedViewControllers;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>private<sp/>funcs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">-<sp/>(void)_pushViewController:(UIViewController<sp/>*)viewController<sp/>animated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>pushViewController:viewController<sp/>animated:animated<sp/>completion:NULL];</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">-<sp/>(UIViewController<sp/>*)_popViewControllerAnimated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>popViewControllerAnimated:animated<sp/>completion:NULL];</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">-<sp/>(NSArray<sp/>*)_popToViewController:(UIViewController<sp/>*)viewController<sp/>animated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>popToViewController:viewController<sp/>animated:animated<sp/>completion:NULL];</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">-<sp/>(NSArray<sp/>*)_popToRootViewControllerAnimated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>popToRootViewControllerAnimated:animated<sp/>completion:NULL];</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">-<sp/>(void)_navigationTransitionView:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)arg1<sp/>didEndTransition:(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arg2<sp/>fromView:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)arg3<sp/>toView:(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)arg4<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_navigationTransitionView:arg1<sp/>didEndTransition:arg2<sp/>fromView:arg3<sp/>toView:arg4];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>!</highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished<sp/>?:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._push_pop_Finished(YES);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">-<sp/>(void)_setNavigationBarHidden:(BOOL)hidden<sp/>animated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_setNavigationBarHidden:hidden<sp/>animated:animated];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>set_navigationBarHidden:hidden];</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">-<sp/>(void)setFullScreenInteractivePopGestureRecognizer:(BOOL)fullScreenInteractivePopGestureRecognizer<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullScreenInteractivePopGestureRecognizer)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopGestureRecognizer<sp/>isMemberOfClass:[UIPanGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_setClass(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopGestureRecognizer,<sp/>[UIPanGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([</highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopGestureRecognizer<sp/>isMemberOfClass:[UIScreenEdgePanGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_setClass(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopGestureRecognizer,<sp/>[UIScreenEdgePanGestureRecognizer<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">-<sp/>(void)setToolbarBackgroundAlpha:(CGFloat)toolbarBackgroundAlpha<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.toolbar<sp/>valueForKey:@&quot;_shadowView&quot;]<sp/>setAlpha:toolbarBackgroundAlpha];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.toolbar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>setAlpha:toolbarBackgroundAlpha];</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">-<sp/>(void)setNavigationBarBackgroundAlpha:(CGFloat)navigationBarBackgroundAlpha<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>setAlpha:navigationBarBackgroundAlpha];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>navigationBarBackgroundAlpha<sp/>==<sp/>0<sp/>means<sp/>hidden<sp/>so<sp/>do<sp/>not<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!navigationBarBackgroundAlpha)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">._navigationBarBackgroundReverseAlpha<sp/>=<sp/>1-navigationBarBackgroundAlpha;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">-<sp/>(void)setNavigationBarSize:(CGSize)navigationBarSize<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBar<sp/>setValue:[NSValue<sp/>valueWithCGSize:navigationBarSize]<sp/>forKey:@&quot;size&quot;];</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">-<sp/>(void)setToolbarSize:(CGSize)toolbarSize<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.toolbar<sp/>setValue:[NSValue<sp/>valueWithCGSize:toolbarSize]<sp/>forKey:@&quot;size&quot;];</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">-<sp/>(void)set_push_pop_Finished:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL))_push_pop_Finished<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_push_pop_Finished),<sp/>_push_pop_Finished,<sp/>OBJC_ASSOCIATION_COPY_NONATOMIC);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">-<sp/>(void)setInteractivePopedViewController:(UIViewController<sp/>*)interactivePopedViewController<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(interactivePopedViewController),<sp/>interactivePopedViewController,<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">-<sp/>(void)set_navigationBarBackgroundReverseAlpha:(CGFloat)_navigationBarBackgroundReverseAlpha<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_navigationBarBackgroundReverseAlpha),<sp/>@(_navigationBarBackgroundReverseAlpha),<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">-<sp/>(void)set_navigationBarHidden:(BOOL)_navigationBarHidden<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(_navigationBarHidden),<sp/>@(_navigationBarHidden),<sp/>OBJC_ASSOCIATION_ASSIGN);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>-<sp/>getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">-<sp/>(CGFloat)navigationBarBackgroundAlpha<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>alpha];</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">-<sp/>(CGFloat)toolbarBackgroundAlpha<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>alpha];</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">-<sp/>(BOOL)fullScreenInteractivePopGestureRecognizer<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.interactivePopGestureRecognizer<sp/>isMemberOfClass:[UIPanGestureRecognizer<sp/>class]];</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">-<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)(BOOL))_push_pop_Finished<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>_cmd);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">-<sp/>(UIViewController<sp/>*)interactivePopedViewController<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>_cmd);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">-<sp/>(CGFloat)_navigationBarBackgroundReverseAlpha<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>CGFloatValue];</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">-<sp/>(BOOL)_navigationBarHidden<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>boolValue];</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">-<sp/>(CGSize)<ref refid="category_u_i_navigation_controller_07_j_z_extension_08_1a6a6c8af5b40a85130a329f4de7fcc0b7" kindref="member">navigationBarSize</ref><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationBar<sp/>valueForKey:@&quot;size&quot;]<sp/>CGSizeValue];</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">-<sp/>(CGSize)<ref refid="category_u_i_navigation_controller_07_j_z_extension_08_1ae81eb7f3b5441622e8b9ee4c1a64dea1" kindref="member">toolbarSize</ref><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.toolbar<sp/>valueForKey:@&quot;size&quot;]<sp/>CGSizeValue];</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="category_u_i_navigation_controller_07_j_z_extension_08_1afbb81b0de559a87520713d7b7e64447f" refkind="member"><highlight class="normal">-<sp/>(UIViewController<sp/>*)previousViewControllerForViewController:(UIViewController<sp/>*)viewController<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>NSUInteger<sp/>index<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.viewControllers<sp/>indexOfObject:viewController];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!index)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.viewControllers[index<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="category_u_i_view_controller_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_view_controller_07_j_z_extension_08" kindref="compound">UIViewController (JZExtension)</ref></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">-<sp/>(void)setHidesNavigationBarWhenPushed:(BOOL)hidesNavigationBarWhenPushed<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_controller_07_j_z_extension_08_1ac7d803f5ce4ccb5b78261bdbb06ee3eb" kindref="member">hidesNavigationBarWhenPushed</ref>),<sp/>@(<ref refid="category_u_i_view_controller_07_j_z_extension_08_1ac7d803f5ce4ccb5b78261bdbb06ee3eb" kindref="member">hidesNavigationBarWhenPushed</ref>),<sp/>OBJC_ASSOCIATION_ASSIGN);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">-<sp/>(void)setNavigationBarBackgroundHidden:(BOOL)navigationBarBackgroundHidden<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>alpha<sp/>=<sp/><ref refid="category_u_i_view_controller_07_j_z_extension_08_1a03e8bc0d0bb032f50097156e76356cd0" kindref="member">navigationBarBackgroundHidden</ref><sp/>?<sp/>0<sp/>:<sp/>1-self.navigationController._navigationBarBackgroundReverseAlpha;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>[[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.navigationController.navigationBar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>setAlpha:alpha];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(isNavigationBarBackgroundHidden),<sp/>@(<ref refid="category_u_i_view_controller_07_j_z_extension_08_1a03e8bc0d0bb032f50097156e76356cd0" kindref="member">navigationBarBackgroundHidden</ref>),<sp/>OBJC_ASSOCIATION_ASSIGN);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">-<sp/>(void)setNavigationBarBackgroundHidden:(BOOL)navigationBarBackgroundHidden<sp/>animated:(BOOL)animated<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>[UIView<sp/>animateWithDuration:animated<sp/>?<sp/>UINavigationControllerHideShowBarDuration<sp/>:<sp/>0.f<sp/>animations:^{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setNavigationBarBackgroundHidden:navigationBarBackgroundHidden];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}];</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">-<sp/>(BOOL)<ref refid="category_u_i_view_controller_07_j_z_extension_08_1ac7d803f5ce4ccb5b78261bdbb06ee3eb" kindref="member">hidesNavigationBarWhenPushed</ref><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>boolValue];</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">-<sp/>(BOOL)isNavigationBarBackgroundHidden<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>boolValue];</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="category_u_i_toolbar_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="category_u_i_toolbar_07_j_z_extension_08" kindref="compound">UIToolbar (JZExtension)</ref></highlight></codeline>
<codeline lineno="360" refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">@property</highlight><highlight class="normal"><sp/>(nonatomic,<sp/>assign)<sp/>CGSize<sp/><ref refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_toolbar_07_j_z_extension_08" kindref="compound">UIToolbar (JZExtension)</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">-<sp/>(CGSize)_sizeThatFits:(CGSize)size<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>CGSize<sp/>newSize<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_sizeThatFits:size];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGSizeMake(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" kindref="member">size</ref>.width<sp/>==<sp/>0.f<sp/>?<sp/>newSize.width<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.width,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.height<sp/>==<sp/>0.f<sp/>?<sp/>newSize.height<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.height);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">-<sp/>(void)setSize:(CGSize)size<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" kindref="member">size</ref>),<sp/>[NSValue<sp/>valueWithCGSize:<ref refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" kindref="member">size</ref>],<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>sizeToFit];</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">-<sp/>(CGSize)<ref refid="category_u_i_toolbar_07_j_z_extension_08_1abd2b9a15f8b2612c5f06f865f10405f5" kindref="member">size</ref><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>CGSizeValue];</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="category_u_i_navigation_bar_07_j_z_extension_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="category_u_i_navigation_bar_07_j_z_extension_08" kindref="compound">UINavigationBar (JZExtension)</ref></highlight></codeline>
<codeline lineno="382" refid="category_u_i_navigation_bar_07_j_z_extension_08_1a81b9f2649e96a238dcae2e2e35328f6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">@property</highlight><highlight class="normal"><sp/>(nonatomic,<sp/>assign)<sp/>CGSize<sp/><ref refid="category_u_i_navigation_bar_07_j_z_extension_08_1a81b9f2649e96a238dcae2e2e35328f6f" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_navigation_bar_07_j_z_extension_08" kindref="compound">UINavigationBar (JZExtension)</ref></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">-<sp/>(CGSize)_sizeThatFits:(CGSize)size<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>CGSize<sp/>newSize<sp/>=<sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_sizeThatFits:size];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGSizeMake(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.<ref refid="category_u_i_navigation_bar_07_j_z_extension_08_1a81b9f2649e96a238dcae2e2e35328f6f" kindref="member">size</ref>.width<sp/>==<sp/>0.f<sp/>?<sp/>newSize.width<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.width,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.height<sp/>==<sp/>0.f<sp/>?<sp/>newSize.height<sp/>:<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.size.height);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">-<sp/>(BOOL)pointInside:(CGPoint)point<sp/>withEvent:(UIEvent<sp/>*)event<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>valueForKey:</highlight><highlight class="stringliteral">@&quot;_backgroundView&quot;</highlight><highlight class="normal">]<sp/>alpha]<sp/>&lt;<sp/>1.0f)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGRectContainsPoint(CGRectMake(0,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.bounds.size.height<sp/>-<sp/>44,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.bounds.size.width,<sp/>44),<sp/>point);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[</highlight><highlight class="keyword">super</highlight><highlight class="normal"><sp/>pointInside:point<sp/>withEvent:event];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">-<sp/>(void)setSize:(CGSize)size<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(size),<sp/>[NSValue<sp/>valueWithCGSize:size],<sp/>OBJC_ASSOCIATION_RETAIN_NONATOMIC);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>sizeToFit];</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">-<sp/>(CGSize)size<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[objc_getAssociatedObject(self,<sp/>_cmd)<sp/>CGSizeValue];</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08" kindref="compound">UIPercentDrivenInteractiveTransition (JZExtension)</ref></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">-<sp/>(void)_handleInteractiveTransition:(BOOL)isCancel<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>UINavigationController<sp/>*navigationController<sp/>=<sp/>(UINavigationController<sp/>*)[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>valueForKey:</highlight><highlight class="stringliteral">@&quot;__parent&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>UIViewController<sp/>*adjustViewController<sp/>=<sp/>isCancel<sp/>?<sp/>navigationController.interactivePopedViewController<sp/>:<sp/>navigationController.visibleViewController;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>navigationController.navigationBarBackgroundAlpha<sp/>=<sp/>adjustViewController.navigationBarBackgroundHidden<sp/>?<sp/>0<sp/>:<sp/>(1-navigationController._navigationBarBackgroundReverseAlpha);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>navigationController.interactivePopedViewController<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a2052d08d680772eddc86094e210df3c2" refkind="member"><highlight class="normal">-<sp/>(void)_updateInteractiveTransition:(CGFloat)percentComplete<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a2052d08d680772eddc86094e210df3c2" kindref="member">_updateInteractiveTransition</ref>:percentComplete];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>UINavigationController<sp/>*navigationController<sp/>=<sp/>(UINavigationController<sp/>*)[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>valueForKey:</highlight><highlight class="stringliteral">@&quot;__parent&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>popedViewControllerNaviBarBgHidden<sp/>=<sp/>navigationController.interactivePopedViewController.navigationBarBackgroundHidden;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(popedViewControllerNaviBarBgHidden<sp/>==<sp/>navigationController.visibleViewController.navigationBarBackgroundHidden)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGFloat<sp/>_percentComplete<sp/>=<sp/>popedViewControllerNaviBarBgHidden<sp/>?<sp/>percentComplete<sp/>:<sp/>1-<sp/>percentComplete;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[navigationController.navigationBar<sp/>valueForKey:@&quot;_backgroundView&quot;]<sp/>setAlpha:(1-navigationController._navigationBarBackgroundReverseAlpha)<sp/>*<sp/>_percentComplete];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a35ee5058ce0def067f805f77153259ac" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a35ee5058ce0def067f805f77153259ac" kindref="member">_cancelInteractiveTransition</ref><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1a35ee5058ce0def067f805f77153259ac" kindref="member">_cancelInteractiveTransition</ref>];</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_handleInteractiveTransition:YES];</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1ad13407250ee8f805909eb84f87aa6ae0" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1ad13407250ee8f805909eb84f87aa6ae0" kindref="member">_finishInteractiveTransition</ref><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="category_u_i_percent_driven_interactive_transition_07_j_z_extension_08_1ad13407250ee8f805909eb84f87aa6ae0" kindref="member">_finishInteractiveTransition</ref>];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>_handleInteractiveTransition:NO];</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UINavigationController/UINavigationController+JZExtension.m"/>
  </compounddef>
</doxygen>
