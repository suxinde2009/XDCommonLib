<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_u_i_view_09draggable_8m" kind="file" language="Objective-C">
    <compoundname>UIView+draggable.m</compoundname>
    <includes refid="_u_i_view_09draggable_8h" local="yes">UIView+draggable.h</includes>
    <includes local="no">objc/runtime.h</includes>
    <incdepgraph>
      <node id="1985">
        <label>objc/runtime.h</label>
      </node>
      <node id="1984">
        <label>UIView+draggable.h</label>
        <link refid="_u_i_view_09draggable_8h"/>
      </node>
      <node id="1983">
        <label>XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+draggable.m</label>
        <link refid="UIView+draggable.m"/>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>UIView+draggable.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>UIView+draggable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Andrea<sp/>on<sp/>13/03/14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Fancy<sp/>Pixel.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_u_i_view_09draggable_8h" kindref="compound">UIView+draggable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;objc/runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="category_u_i_view_07draggable_08" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="category_u_i_view_07draggable_08" kindref="compound">UIView (draggable)</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">-<sp/>(void)setPanGesture:(UIPanGestureRecognizer*)panGesture</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a372e612496756eef6396fa26a4c0e301" kindref="member">panGesture</ref>),<sp/><ref refid="category_u_i_view_07draggable_08_1a372e612496756eef6396fa26a4c0e301" kindref="member">panGesture</ref>,<sp/>OBJC_ASSOCIATION_RETAIN);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">-<sp/>(UIPanGestureRecognizer*)<ref refid="category_u_i_view_07draggable_08_1a372e612496756eef6396fa26a4c0e301" kindref="member">panGesture</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a372e612496756eef6396fa26a4c0e301" kindref="member">panGesture</ref>));</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">-<sp/>(void)setCagingArea:(CGRect)cagingArea</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CGRectEqualToRect(<ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref>,<sp/>CGRectZero)<sp/>||</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGRectContainsRect(<ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref>,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame))<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSValue<sp/>*cagingAreaValue<sp/>=<sp/>[NSValue<sp/>valueWithCGRect:cagingArea];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref>),<sp/>cagingAreaValue,<sp/>OBJC_ASSOCIATION_RETAIN);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">-<sp/>(CGRect)<ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>NSValue<sp/>*cagingAreaValue<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cagingAreaValue<sp/>CGRectValue];</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">-<sp/>(void)setHandle:(CGRect)handle</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>CGRect<sp/>relativeFrame<sp/>=<sp/>CGRectMake(0,<sp/>0,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame.size.width,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame.size.height);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CGRectContainsRect(relativeFrame,<sp/>handle))<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSValue<sp/>*handleValue<sp/>=<sp/>[NSValue<sp/>valueWithCGRect:handle];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(handle),<sp/>handleValue,<sp/>OBJC_ASSOCIATION_RETAIN);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">-<sp/>(CGRect)handle</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>NSValue<sp/>*handleValue<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(handle));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[handleValue<sp/>CGRectValue];</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">-<sp/>(void)setShouldMoveAlongY:(BOOL)newShould</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>NSNumber<sp/>*shouldMoveAlongYBool<sp/>=<sp/>[NSNumber<sp/>numberWithBool:newShould];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a5bfd32bb208046eadbe0a1017e497752" kindref="member">shouldMoveAlongY</ref>),<sp/>shouldMoveAlongYBool,<sp/>OBJC_ASSOCIATION_RETAIN<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">-<sp/>(BOOL)<ref refid="category_u_i_view_07draggable_08_1a5bfd32bb208046eadbe0a1017e497752" kindref="member">shouldMoveAlongY</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>NSNumber<sp/>*moveAlongY<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1a5bfd32bb208046eadbe0a1017e497752" kindref="member">shouldMoveAlongY</ref>));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(moveAlongY)<sp/>?<sp/>[moveAlongY<sp/>boolValue]<sp/>:<sp/>YES;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">-<sp/>(void)setShouldMoveAlongX:(BOOL)newShould</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>NSNumber<sp/>*shouldMoveAlongXBool<sp/>=<sp/>[NSNumber<sp/>numberWithBool:newShould];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1aa7f0dab21170209fd8f34aca40ce025e" kindref="member">shouldMoveAlongX</ref>),<sp/>shouldMoveAlongXBool,<sp/>OBJC_ASSOCIATION_RETAIN<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">-<sp/>(BOOL)<ref refid="category_u_i_view_07draggable_08_1aa7f0dab21170209fd8f34aca40ce025e" kindref="member">shouldMoveAlongX</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>NSNumber<sp/>*moveAlongX<sp/>=<sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(<ref refid="category_u_i_view_07draggable_08_1aa7f0dab21170209fd8f34aca40ce025e" kindref="member">shouldMoveAlongX</ref>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(moveAlongX)<sp/>?<sp/>[moveAlongX<sp/>boolValue]<sp/>:<sp/>YES;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">-<sp/>(void)setDraggingStartedBlock:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)())draggingStartedBlock</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(draggingStartedBlock),<sp/>draggingStartedBlock,<sp/>OBJC_ASSOCIATION_RETAIN);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">-<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)())draggingStartedBlock</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(draggingStartedBlock));</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">-<sp/>(void)setDraggingEndedBlock:(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)())draggingEndedBlock</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>objc_setAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(draggingEndedBlock),<sp/>draggingEndedBlock,<sp/>OBJC_ASSOCIATION_RETAIN);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">-<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(^)())draggingEndedBlock</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objc_getAssociatedObject(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">@selector</highlight><highlight class="normal">(draggingEndedBlock));</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">-<sp/>(void)handlePan:(UIPanGestureRecognizer*)sender</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>make<sp/>you<sp/>drag<sp/>from<sp/>dragging<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>CGPoint<sp/>locationInView<sp/>=<sp/>[sender<sp/>locationInView:self];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CGRectContainsPoint(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.handle,<sp/>locationInView))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>adjustAnchorPointForGestureRecognizer:sender];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sender.state<sp/>==<sp/>UIGestureRecognizerStateBegan<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.draggingStartedBlock)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.draggingStartedBlock();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sender.state<sp/>==<sp/>UIGestureRecognizerStateEnded<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.draggingEndedBlock)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.draggingEndedBlock();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>CGPoint<sp/>translation<sp/>=<sp/>[sender<sp/>translationInView:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>superview]];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>newXOrigin<sp/>=<sp/>CGRectGetMinX(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame)<sp/>+<sp/>(([self<sp/><ref refid="category_u_i_view_07draggable_08_1aa7f0dab21170209fd8f34aca40ce025e" kindref="member">shouldMoveAlongX</ref>])<sp/>?<sp/>translation.x<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>newYOrigin<sp/>=<sp/>CGRectGetMinY(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame)<sp/>+<sp/>(([self<sp/><ref refid="category_u_i_view_07draggable_08_1a5bfd32bb208046eadbe0a1017e497752" kindref="member">shouldMoveAlongY</ref>])<sp/>?<sp/>translation.y<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>CGRect<sp/><ref refid="category_u_i_view_07draggable_08_1a2da06507a7ff9fa712e278913c22ac1c" kindref="member">cagingArea</ref><sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.cagingArea;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>cagingAreaOriginX<sp/>=<sp/>CGRectGetMinX(cagingArea);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>cagingAreaOriginY<sp/>=<sp/>CGRectGetMinY(cagingArea);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>cagingAreaRightSide<sp/>=<sp/>cagingAreaOriginX<sp/>+<sp/>CGRectGetWidth(cagingArea);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>CGFloat<sp/>cagingAreaBottomSide<sp/>=<sp/>cagingAreaOriginY<sp/>+<sp/>CGRectGetHeight(cagingArea);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CGRectEqualToRect(cagingArea,<sp/>CGRectZero))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>view<sp/>is<sp/>still<sp/>within<sp/>the<sp/>caging<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newXOrigin<sp/>&lt;=<sp/>cagingAreaOriginX<sp/>||</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newYOrigin<sp/>&lt;=<sp/>cagingAreaOriginY<sp/>||</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newXOrigin<sp/>+<sp/>CGRectGetWidth(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame)<sp/>&gt;=<sp/>cagingAreaRightSide<sp/>||</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newYOrigin<sp/>+<sp/>CGRectGetHeight(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame)<sp/>&gt;=<sp/>cagingAreaBottomSide)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newXOrigin<sp/>=<sp/>CGRectGetMinX(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newYOrigin<sp/>=<sp/>CGRectGetMinY(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.frame);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setFrame:CGRectMake(newXOrigin,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newYOrigin,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGRectGetWidth(self.frame),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGRectGetHeight(self.frame))];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>[sender<sp/>setTranslation:(CGPoint){0,<sp/>0}<sp/>inView:[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>superview]];</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">-<sp/>(void)adjustAnchorPointForGestureRecognizer:(UIGestureRecognizer<sp/>*)gestureRecognizer</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gestureRecognizer.state<sp/>==<sp/>UIGestureRecognizerStateBegan)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UIView<sp/>*piece<sp/>=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGPoint<sp/>locationInView<sp/>=<sp/>[gestureRecognizer<sp/>locationInView:piece];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGPoint<sp/>locationInSuperview<sp/>=<sp/>[gestureRecognizer<sp/>locationInView:piece.superview];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piece.layer.anchorPoint<sp/>=<sp/>CGPointMake(locationInView.x<sp/>/<sp/>piece.bounds.size.width,<sp/>locationInView.y<sp/>/<sp/>piece.bounds.size.height);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>piece.center<sp/>=<sp/>locationInSuperview;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="category_u_i_view_07draggable_08_1aa1d3bc4b89b6171ee2742f5a335c374a" refkind="member"><highlight class="normal">-<sp/>(void)setDraggable:(BOOL)draggable</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.panGesture<sp/>setEnabled:draggable];</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="category_u_i_view_07draggable_08_1a5eb84f5a8316e023cb2d8e9d18bfdb64" refkind="member"><highlight class="normal">-<sp/>(void)<ref refid="category_u_i_view_07draggable_08_1a5eb84f5a8316e023cb2d8e9d18bfdb64" kindref="member">enableDragging</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.panGesture<sp/>=<sp/>[[UIPanGestureRecognizer<sp/>alloc]<sp/>initWithTarget:self<sp/>action:@selector(handlePan:)];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.panGesture<sp/>setMaximumNumberOfTouches:1];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.panGesture<sp/>setMinimumNumberOfTouches:1];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">.panGesture<sp/>setCancelsTouchesInView:NO];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>setHandle:CGRectMake(0,<sp/>0,<sp/>self.frame.size.width,<sp/>self.frame.size.height)];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>addGestureRecognizer:self.panGesture];</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Categories/UIKit/UIView/UIView+draggable.m"/>
  </compounddef>
</doxygen>
