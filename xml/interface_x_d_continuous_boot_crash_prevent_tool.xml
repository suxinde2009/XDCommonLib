<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="interface_x_d_continuous_boot_crash_prevent_tool" kind="class" language="Objective-C" prot="public">
    <compoundname>XDContinuousBootCrashPreventTool</compoundname>
    <basecompoundref prot="public" virt="non-virtual">NSObject</basecompoundref>
    <includes refid="_x_d_continuous_boot_crash_prevent_tool_8h" local="no">XDContinuousBootCrashPreventTool.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1ac57f161d327f4d2ab3c7c16956d4a853" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL XDContinuousBootCrashPreventTool::launchContinuousCrashProtect</definition>
        <argsstring>()</argsstring>
        <name>launchContinuousCrashProtect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>启动连续 crash 保护方法。 前置条件：在 App 启动时注册 crash 处理函数，在 crash 时调用[<ref refid="interface_x_d_continuous_boot_crash_prevent_tool" kindref="compound">XDContinuousBootCrashPreventTool</ref> addCrashCountIfNeeded]。 启动后kCrashOnLaunchTimeIntervalThreshold秒内crash，反复超过kContinuousCrashOnLaunchNeedToReport次则上报日志，超过kContinuousCrashOnLaunchNeedToFix则启动修复程序；当所有操作完成后，执行 completion。在 kCrashOnLaunchTimeIntervalThreshold 秒后若没有 crash 将 kContinuousCrashOnLaunchCounterKey 计数置零。 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reportBlock</parametername>
</parameternamelist>
<parameterdescription>
<para>上报逻辑， </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fixBlock</parametername>
</parameternamelist>
<parameterdescription>
<para>修复逻辑，完成后执行 [self setCrashCount:0];[self setIsFixing:NO];completion(); </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>completion</parametername>
</parameternamelist>
<parameterdescription>
<para>完成逻辑，无论是否修复，都会执行completion一次 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(BOOL)completion 的返回值，当不需要修复且 completion 有定义时； NO 在需要修复时或者其他情况 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="27" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setCrashCount:</definition>
        <argsstring>(NSInteger count)</argsstring>
        <name>setCrashCount:</name>
        <param>
          <type>NSInteger</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSInteger</type>
        <definition>NSInteger XDContinuousBootCrashPreventTool::crashCount</definition>
        <argsstring>()</argsstring>
        <name>crashCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL XDContinuousBootCrashPreventTool::isFixingCrash</definition>
        <argsstring>()</argsstring>
        <name>isFixingCrash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1ad0f524a3d842d571b5a1fad6d12bc0b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setLogger:</definition>
        <argsstring>(void(^logger)(NSString *))</argsstring>
        <name>setLogger:</name>
        <param>
          <type>void(^)(NSString *)</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1a19ea68b8cb6d6dc0427dc24f1eec302b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setReportBlock:</definition>
        <argsstring>(ReportBlock reportBlock)</argsstring>
        <name>setReportBlock:</name>
        <param>
          <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a449d7c1d89e880427e91c58382f4713b" kindref="member">ReportBlock</ref></type>
          <declname>reportBlock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1ad53c6212b7afd1a2281ce0d08b46afc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setRepairBlock:</definition>
        <argsstring>(RepairBlock repairtBlock)</argsstring>
        <name>setRepairBlock:</name>
        <param>
          <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a899f61b958237be8c5b83511020075a9" kindref="member">RepairBlock</ref></type>
          <declname>repairtBlock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1a1e2f7a6938cbea1e66cdb0c67005b875" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setBoolCompletionBlock:</definition>
        <argsstring>(BoolCompletionBlock boolCompletionBlock)</argsstring>
        <name>setBoolCompletionBlock:</name>
        <param>
          <type><ref refid="_x_d_continuous_boot_crash_prevent_tool_8h_1a836fef8923d1ba599ea03802a68c17f2" kindref="member">BoolCompletionBlock</ref></type>
          <declname>boolCompletionBlock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1a98d82c38da6929cec85453f15f441d25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::setStartupCrashForTest:</definition>
        <argsstring>(BOOL isOn)</argsstring>
        <name>setStartupCrashForTest:</name>
        <param>
          <type>BOOL</type>
          <declname>isOn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1ad1d73a791284a51a019b4ebe5fac72c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL XDContinuousBootCrashPreventTool::startupCrashForTest</definition>
        <argsstring>()</argsstring>
        <name>startupCrashForTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="interface_x_d_continuous_boot_crash_prevent_tool_1a1229710375d2f177cba8d4ab6dc892f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XDContinuousBootCrashPreventTool::deleteAllFilesUnderDocumentsLibraryCaches</definition>
        <argsstring>()</argsstring>
        <name>deleteAllFilesUnderDocumentsLibraryCaches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="13" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.m" bodystart="150" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>启动连续 crash 保护。 启动后kCrashOnLaunchTimeIntervalThreshold秒内crash，反复超过kContinuousCrashOnLaunchNeedToReport次则上报日志，超过kContinuousCrashOnLaunchNeedToFix则启动修复程序 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1267">
        <label>XDContinuousBootCrashPreventTool</label>
        <link refid="interface_x_d_continuous_boot_crash_prevent_tool"/>
        <childnode refid="1268" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1268">
        <label>NSObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1269">
        <label>XDContinuousBootCrashPreventTool</label>
        <link refid="interface_x_d_continuous_boot_crash_prevent_tool"/>
        <childnode refid="1270" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1270">
        <label>NSObject</label>
      </node>
    </collaborationgraph>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" line="21" column="1" bodyfile="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Utils/XDContinuousBootCrashPreventTool/XDContinuousBootCrashPreventTool.h" bodystart="20" bodyend="-1"/>
    <listofallmembers>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1afd13077a1a313c2c901cc7757e55b536" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>crashCount</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1229710375d2f177cba8d4ab6dc892f9" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>deleteAllFilesUnderDocumentsLibraryCaches</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1a0e970836c9e6d2a38a47905bbd9ba236" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>isFixingCrash</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1ac57f161d327f4d2ab3c7c16956d4a853" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>launchContinuousCrashProtect</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1a1e2f7a6938cbea1e66cdb0c67005b875" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setBoolCompletionBlock:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1af0310e383f995cd87991b211c24a23b2" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setCrashCount:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad0f524a3d842d571b5a1fad6d12bc0b4" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setLogger:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad53c6212b7afd1a2281ce0d08b46afc5" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setRepairBlock:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1a19ea68b8cb6d6dc0427dc24f1eec302b" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setReportBlock:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1a98d82c38da6929cec85453f15f441d25" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>setStartupCrashForTest:</name></member>
      <member refid="interface_x_d_continuous_boot_crash_prevent_tool_1ad1d73a791284a51a019b4ebe5fac72c6" prot="public" virt="virtual"><scope>XDContinuousBootCrashPreventTool</scope><name>startupCrashForTest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
