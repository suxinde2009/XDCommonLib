<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="_x_d_debug_utils_8m" kind="file" language="Objective-C">
    <compoundname>XDDebugUtils.m</compoundname>
    <includes refid="_x_d_debug_utils_8h" local="yes">XDDebugUtils.h</includes>
    <includes local="no">mach/mach.h</includes>
    <includes local="no">mach/mach_host.h</includes>
    <incdepgraph>
      <node id="2344">
        <label>mach/mach_host.h</label>
      </node>
      <node id="2343">
        <label>mach/mach.h</label>
      </node>
      <node id="2340">
        <label>XDDebugUtils.h</label>
        <link refid="_x_d_debug_utils_8h"/>
        <childnode refid="2341" relation="include">
        </childnode>
        <childnode refid="2342" relation="include">
        </childnode>
      </node>
      <node id="2339">
        <label>XDCommonLib/CommonBasicComponentLayer/Debug/XDDebugUtils.m</label>
        <link refid="XDDebugUtils.m"/>
        <childnode refid="2340" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2344" relation="include">
        </childnode>
      </node>
      <node id="2342">
        <label>UIKit/UIKit.h</label>
      </node>
      <node id="2341">
        <label>Foundation/Foundation.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDDebugUtils.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>XDCommonLib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>suxinde<sp/>on<sp/>15/5/6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015å¹´<sp/>su<sp/>xinde.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;<ref refid="_x_d_debug_utils_8h" kindref="compound">XDDebugUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;mach/mach.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;mach/mach_host.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="interface_x_d_debug_utils" kindref="compound">XDDebugUtils</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="interface_x_d_debug_utils_1a50afd33471b00f9f83d03ec4d4f753fe" refkind="member"><highlight class="normal">+<sp/>(<ref refid="struct_x_d_memroy_info" kindref="compound">XDMemroyInfo</ref>)<ref refid="interface_x_d_debug_utils_1a50afd33471b00f9f83d03ec4d4f753fe" kindref="member">memoryInfo</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_port_t<sp/>host_port;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_msg_type_number_t<sp/>host_size;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>vm_size_t<sp/>pagesize;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>host_port<sp/>=<sp/>mach_host_self();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>host_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vm_statistics_data_t)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(integer_t);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>host_page_size(host_port,<sp/>&amp;pagesize);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>vm_statistics_data_t<sp/>vm_stat;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(host_statistics(host_port,<sp/>HOST_VM_INFO,<sp/>(host_info_t)&amp;vm_stat,<sp/>&amp;host_size)<sp/>!=<sp/>KERN_SUCCESS)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;Failed<sp/>to<sp/>fetch<sp/>vm<sp/>statistics&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stats<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>natural_t<sp/>mem_used<sp/>=<sp/>(vm_stat.active_count<sp/>+</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vm_stat.inactive_count<sp/>+</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vm_stat.wire_count)<sp/>*<sp/>pagesize;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>natural_t<sp/>mem_free<sp/>=<sp/>vm_stat.free_count<sp/>*<sp/>pagesize;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_x_d_memroy_info" kindref="compound">XDMemroyInfo</ref>){<sp/>.used<sp/>=<sp/>mem_used,<sp/>.free<sp/>=<sp/>mem_free};</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="interface_x_d_debug_utils_1a55765eec388669bccf92dec25728cf0a" refkind="member"><highlight class="normal">+(NSString<sp/>*)<ref refid="interface_x_d_debug_utils_1a55765eec388669bccf92dec25728cf0a" kindref="member">memoryUsageDescription</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_x_d_memroy_info" kindref="compound">XDMemroyInfo</ref><sp/>info=[</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/><ref refid="interface_x_d_debug_utils_1a50afd33471b00f9f83d03ec4d4f753fe" kindref="member">memoryInfo</ref>];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[NSString<sp/>stringWithFormat:@&quot;used:%d<sp/>,<sp/>free:%d&quot;,info.used,info.free];</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="interface_x_d_debug_utils_1ac6170a0fb3d2bc3de5847846b1ff76d3" refkind="member"><highlight class="normal">+<sp/>(UIView<sp/>*)<ref refid="interface_x_d_debug_utils_1ac6170a0fb3d2bc3de5847846b1ff76d3" kindref="member">sysStatusBar</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>UIView<sp/>*bar=[[UIApplication<sp/>sharedApplication]<sp/>valueForKey:@&quot;_statusBar&quot;];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*vs=[bar<sp/>subviews];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Class<sp/>clazz=NSClassFromString(</highlight><highlight class="stringliteral">@&quot;UIStatusBarForegroundView&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>v<sp/>in<sp/>vs)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v<sp/>isKindOfClass:clazz])<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="interface_x_d_debug_utils_1ab8c36eaa18dc68d935ca68a6195df689" refkind="member"><highlight class="normal">+<sp/>(UIView<sp/>*)<ref refid="interface_x_d_debug_utils_1ab8c36eaa18dc68d935ca68a6195df689" kindref="member">sysStatusBarBgView</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>UIView<sp/>*bar=[[UIApplication<sp/>sharedApplication]<sp/>valueForKey:@&quot;_statusBar&quot;];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*vs=[bar<sp/>subviews];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Class<sp/>clazz=NSClassFromString(</highlight><highlight class="stringliteral">@&quot;UIStatusBarBackgroundView&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>v<sp/>in<sp/>vs)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([v<sp/>isKindOfClass:clazz])<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nil;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/suxinde/XDCommonLib/XDCommonLib/CommonBasicComponentLayer/Debug/XDDebugUtils.m"/>
  </compounddef>
</doxygen>
